2024-07-22 14:08:46 DEBUG ApplicationServletEnvironment:300 - Activating profiles []
2024-07-22 14:08:46 DEBUG PropertySourcesPropertyResolver:115 - Found key 'spring.application.name' in PropertySource 'configurationProperties' with value of type String
2024-07-22 14:08:46 INFO  Main:50 - Starting Main using Java 17.0.10 with PID 43618 (/home/egor/git/Java/dwh2024/target/classes started by egor in /home/egor/git/Java/dwh2024)
2024-07-22 14:08:46 DEBUG Main:51 - Running with Spring Boot v3.2.3, Spring v6.1.4
2024-07-22 14:08:46 INFO  Main:654 - No active profile set, falling back to 1 default profile: "default"
2024-07-22 14:08:46 DEBUG SpringApplication:687 - Loading source class org.dwh.Main
2024-07-22 14:08:46 DEBUG ChangeableUrls:251 - Matching URLs for reloading : [file:/home/egor/git/Java/dwh2024/target/classes/]
2024-07-22 14:08:46 DEBUG DevToolsSettings:251 - Included patterns for restart : []
2024-07-22 14:08:46 DEBUG DevToolsSettings:251 - Excluded patterns for restart : [/spring-boot-starter-[\w-]+/, /spring-boot/(bin|build|out)/, /spring-boot-starter/(bin|build|out)/, /spring-boot-devtools/(bin|build|out)/, /spring-boot-actuator/(bin|build|out)/, /spring-boot-autoconfigure/(bin|build|out)/]
2024-07-22 14:08:46 INFO  DevToolsPropertyDefaultsPostProcessor:252 - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-07-22 14:08:46 INFO  DevToolsPropertyDefaultsPostProcessor:252 - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-07-22 14:08:46 DEBUG AnnotationConfigServletWebServerApplicationContext:671 - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@723ada59
2024-07-22 14:08:46 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2024-07-22 14:08:46 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory'
2024-07-22 14:08:47 DEBUG ClassPathBeanDefinitionScanner:476 - Identified candidate component class: file [/home/egor/git/Java/dwh2024/target/classes/org/dwh/load/LoaderService.class]
2024-07-22 14:08:47 DEBUG ClassPathBeanDefinitionScanner:476 - Identified candidate component class: file [/home/egor/git/Java/dwh2024/target/classes/org/dwh/read/ReaderService.class]
2024-07-22 14:08:47 DEBUG ClassPathBeanDefinitionScanner:476 - Identified candidate component class: file [/home/egor/git/Java/dwh2024/target/classes/org/dwh/wokrer/RunAfterStartup.class]
2024-07-22 14:08:47 INFO  RepositoryConfigurationDelegate:139 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-22 14:08:47 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.AutoConfigurationPackages'
2024-07-22 14:08:47 DEBUG AutoConfigurationPackages:213 - @EnableAutoConfiguration was declared on a class in the package 'org.dwh'. Automatic @Repository and @Entity scanning is enabled.
2024-07-22 14:08:47 DEBUG RepositoryConfigurationDelegate:149 - Scanning for JPA repositories in packages org.dwh.
2024-07-22 14:08:47 DEBUG RepositoryComponentProvider:476 - Identified candidate component class: file [/home/egor/git/Java/dwh2024/target/classes/org/dwh/store/EntityExampleRepository.class]
2024-07-22 14:08:47 INFO  RepositoryConfigurationDelegate:208 - Finished Spring Data repository scanning in 31 ms. Found 1 JPA repository interface.
2024-07-22 14:08:47 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'propertySourcesPlaceholderConfigurer'
2024-07-22 14:08:47 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'emBeanDefinitionRegistrarPostProcessor'
2024-07-22 14:08:47 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor'
2024-07-22 14:08:47 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$DatabaseShutdownExecutorEntityManagerFactoryDependsOnPostProcessor'
2024-07-22 14:08:47 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
2024-07-22 14:08:47 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'preserveErrorControllerTargetClassPostProcessor'
2024-07-22 14:08:47 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2024-07-22 14:08:47 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
2024-07-22 14:08:47 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2024-07-22 14:08:47 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2024-07-22 14:08:47 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2024-07-22 14:08:47 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor'
2024-07-22 14:08:47 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinder'
2024-07-22 14:08:47 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'jdbcConnectionDetailsHikariBeanPostProcessor'
2024-07-22 14:08:47 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2024-07-22 14:08:47 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'persistenceExceptionTranslationPostProcessor'
2024-07-22 14:08:47 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'persistenceExceptionTranslationPostProcessor' via factory method to bean named 'environment'
2024-07-22 14:08:47 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'webServerFactoryCustomizerBeanPostProcessor'
2024-07-22 14:08:47 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'errorPageRegistrarBeanPostProcessor'
2024-07-22 14:08:47 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'hypermediaRepresentionModelProcessorConfigurator'
2024-07-22 14:08:47 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2024-07-22 14:08:47 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
2024-07-22 14:08:47 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'transactionAttributeSource'
2024-07-22 14:08:47 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'transactionInterceptor'
2024-07-22 14:08:47 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'transactionInterceptor' via factory method to bean named 'transactionAttributeSource'
2024-07-22 14:08:47 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionAttributeSource'
2024-07-22 14:08:47 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionInterceptor'
2024-07-22 14:08:47 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'hypermediaRestTemplateBeanPostProcessor'
2024-07-22 14:08:47 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'projectionDefinitionRegistrar'
2024-07-22 14:08:47 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'annotatedEventHandlerInvoker'
2024-07-22 14:08:47 DEBUG UiApplicationContextUtils:86 - Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@832d419]
2024-07-22 14:08:47 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'tomcatServletWebServerFactory'
2024-07-22 14:08:47 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat'
2024-07-22 14:08:48 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'websocketServletWebServerCustomizer'
2024-07-22 14:08:48 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration'
2024-07-22 14:08:48 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'servletWebServerFactoryCustomizer'
2024-07-22 14:08:48 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration'
2024-07-22 14:08:48 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2024-07-22 14:08:48 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.context.properties.BoundConfigurationProperties'
2024-07-22 14:08:48 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'servletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2024-07-22 14:08:48 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'sslBundleRegistry'
2024-07-22 14:08:48 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration'
2024-07-22 14:08:48 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'spring.ssl-org.springframework.boot.autoconfigure.ssl.SslProperties'
2024-07-22 14:08:48 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration' via constructor to bean named 'spring.ssl-org.springframework.boot.autoconfigure.ssl.SslProperties'
2024-07-22 14:08:48 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'sslPropertiesSslBundleRegistrar'
2024-07-22 14:08:48 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'fileWatcher'
2024-07-22 14:08:48 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'sslPropertiesSslBundleRegistrar' via factory method to bean named 'fileWatcher'
2024-07-22 14:08:48 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'tomcatServletWebServerFactoryCustomizer'
2024-07-22 14:08:48 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'tomcatServletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2024-07-22 14:08:48 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'tomcatWebServerFactoryCustomizer'
2024-07-22 14:08:48 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration'
2024-07-22 14:08:48 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'environment'
2024-07-22 14:08:48 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2024-07-22 14:08:48 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'localeCharsetMappingsCustomizer'
2024-07-22 14:08:48 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration'
2024-07-22 14:08:48 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2024-07-22 14:08:48 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'errorPageCustomizer'
2024-07-22 14:08:48 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration'
2024-07-22 14:08:48 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2024-07-22 14:08:48 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'dispatcherServletRegistration'
2024-07-22 14:08:48 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration'
2024-07-22 14:08:48 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'dispatcherServlet'
2024-07-22 14:08:48 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration'
2024-07-22 14:08:48 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
2024-07-22 14:08:48 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'dispatcherServlet' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
2024-07-22 14:08:48 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'dispatcherServlet'
2024-07-22 14:08:48 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
2024-07-22 14:08:48 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'multipartConfigElement'
2024-07-22 14:08:48 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration'
2024-07-22 14:08:48 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
2024-07-22 14:08:48 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration' via constructor to bean named 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
2024-07-22 14:08:48 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'errorPageCustomizer' via factory method to bean named 'dispatcherServletRegistration'
2024-07-22 14:08:48 DEBUG TomcatServletWebServerFactory:81 - Code archive: /home/egor/.m2/repository/org/springframework/boot/spring-boot/3.2.3/spring-boot-3.2.3.jar
2024-07-22 14:08:48 DEBUG TomcatServletWebServerFactory:125 - Code archive: /home/egor/.m2/repository/org/springframework/boot/spring-boot/3.2.3/spring-boot-3.2.3.jar
2024-07-22 14:08:48 DEBUG TomcatServletWebServerFactory:149 - None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
2024-07-22 14:08:48 INFO  TomcatWebServer:109 - Tomcat initialized with port 8080 (http)
2024-07-22 14:08:48 DEBUG ServletWebServerApplicationContext:290 - Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
2024-07-22 14:08:48 INFO  ServletWebServerApplicationContext:296 - Root WebApplicationContext: initialization completed in 1390 ms
2024-07-22 14:08:48 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'requestContextFilter'
2024-07-22 14:08:48 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'formContentFilter'
2024-07-22 14:08:48 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration'
2024-07-22 14:08:48 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'characterEncodingFilter'
2024-07-22 14:08:48 DEBUG ServletContextInitializerBeans:234 - Mapping filters: characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105
2024-07-22 14:08:48 DEBUG ServletContextInitializerBeans:234 - Mapping servlets: dispatcherServlet urls=[/]
2024-07-22 14:08:48 DEBUG OrderedRequestContextFilter:240 - Filter 'requestContextFilter' configured for use
2024-07-22 14:08:48 DEBUG OrderedCharacterEncodingFilter:240 - Filter 'characterEncodingFilter' configured for use
2024-07-22 14:08:48 DEBUG OrderedFormContentFilter:240 - Filter 'formContentFilter' configured for use
2024-07-22 14:08:48 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'dataSourceScriptDatabaseInitializer'
2024-07-22 14:08:48 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration'
2024-07-22 14:08:48 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'dataSource'
2024-07-22 14:08:48 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari'
2024-07-22 14:08:48 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
2024-07-22 14:08:48 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'jdbcConnectionDetails'
2024-07-22 14:08:48 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration'
2024-07-22 14:08:48 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'jdbcConnectionDetails' via factory method to bean named 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
2024-07-22 14:08:48 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'dataSource' via factory method to bean named 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
2024-07-22 14:08:48 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'dataSource' via factory method to bean named 'jdbcConnectionDetails'
2024-07-22 14:08:48 DEBUG HikariConfig:968 - Driver class org.postgresql.Driver found in Thread context class loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader@28a53dbe
2024-07-22 14:08:48 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties'
2024-07-22 14:08:48 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'dataSourceScriptDatabaseInitializer' via factory method to bean named 'dataSource'
2024-07-22 14:08:48 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'dataSourceScriptDatabaseInitializer' via factory method to bean named 'spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties'
2024-07-22 14:08:48 DEBUG DataSourceUtils:117 - Fetching JDBC Connection from DataSource
2024-07-22 14:08:48 DEBUG HikariConfig:1100 - HikariPool-1 - configuration:
2024-07-22 14:08:48 DEBUG HikariConfig:1132 - allowPoolSuspension.............false
2024-07-22 14:08:48 DEBUG HikariConfig:1132 - autoCommit......................true
2024-07-22 14:08:48 DEBUG HikariConfig:1132 - catalog.........................none
2024-07-22 14:08:48 DEBUG HikariConfig:1132 - connectionInitSql...............none
2024-07-22 14:08:48 DEBUG HikariConfig:1132 - connectionTestQuery.............none
2024-07-22 14:08:48 DEBUG HikariConfig:1132 - connectionTimeout...............30000
2024-07-22 14:08:48 DEBUG HikariConfig:1132 - dataSource......................none
2024-07-22 14:08:48 DEBUG HikariConfig:1132 - dataSourceClassName.............none
2024-07-22 14:08:48 DEBUG HikariConfig:1132 - dataSourceJNDI..................none
2024-07-22 14:08:48 DEBUG HikariConfig:1132 - dataSourceProperties............{password=<masked>}
2024-07-22 14:08:48 DEBUG HikariConfig:1132 - driverClassName................."org.postgresql.Driver"
2024-07-22 14:08:48 DEBUG HikariConfig:1132 - exceptionOverrideClassName......none
2024-07-22 14:08:48 DEBUG HikariConfig:1132 - healthCheckProperties...........{}
2024-07-22 14:08:48 DEBUG HikariConfig:1132 - healthCheckRegistry.............none
2024-07-22 14:08:48 DEBUG HikariConfig:1132 - idleTimeout.....................600000
2024-07-22 14:08:48 DEBUG HikariConfig:1132 - initializationFailTimeout.......1
2024-07-22 14:08:48 DEBUG HikariConfig:1132 - isolateInternalQueries..........false
2024-07-22 14:08:48 DEBUG HikariConfig:1132 - jdbcUrl.........................jdbc:postgresql://localhost:5555/dwh
2024-07-22 14:08:48 DEBUG HikariConfig:1132 - keepaliveTime...................0
2024-07-22 14:08:48 DEBUG HikariConfig:1132 - leakDetectionThreshold..........0
2024-07-22 14:08:48 DEBUG HikariConfig:1132 - maxLifetime.....................1800000
2024-07-22 14:08:48 DEBUG HikariConfig:1132 - maximumPoolSize.................10
2024-07-22 14:08:48 DEBUG HikariConfig:1132 - metricRegistry..................none
2024-07-22 14:08:48 DEBUG HikariConfig:1132 - metricsTrackerFactory...........none
2024-07-22 14:08:48 DEBUG HikariConfig:1132 - minimumIdle.....................10
2024-07-22 14:08:48 DEBUG HikariConfig:1132 - password........................<masked>
2024-07-22 14:08:48 DEBUG HikariConfig:1132 - poolName........................"HikariPool-1"
2024-07-22 14:08:48 DEBUG HikariConfig:1132 - readOnly........................false
2024-07-22 14:08:48 DEBUG HikariConfig:1132 - registerMbeans..................false
2024-07-22 14:08:48 DEBUG HikariConfig:1132 - scheduledExecutor...............none
2024-07-22 14:08:48 DEBUG HikariConfig:1132 - schema..........................none
2024-07-22 14:08:48 DEBUG HikariConfig:1132 - threadFactory...................internal
2024-07-22 14:08:48 DEBUG HikariConfig:1132 - transactionIsolation............default
2024-07-22 14:08:48 DEBUG HikariConfig:1132 - username........................"postgres"
2024-07-22 14:08:48 DEBUG HikariConfig:1132 - validationTimeout...............5000
2024-07-22 14:08:48 INFO  HikariDataSource:110 - HikariPool-1 - Starting...
2024-07-22 14:08:48 INFO  HikariPool:565 - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@700effc0
2024-07-22 14:08:48 INFO  HikariDataSource:123 - HikariPool-1 - Start completed.
2024-07-22 14:08:48 DEBUG DataSourceUtils:117 - Fetching JDBC Connection from DataSource
2024-07-22 14:08:48 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'inMemoryDatabaseShutdownExecutor'
2024-07-22 14:08:48 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration'
2024-07-22 14:08:48 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'inMemoryDatabaseShutdownExecutor' via factory method to bean named 'dataSource'
2024-07-22 14:08:48 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'inMemoryDatabaseShutdownExecutor' via factory method to bean named 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
2024-07-22 14:08:48 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'entityManagerFactory'
2024-07-22 14:08:48 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration'
2024-07-22 14:08:48 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties'
2024-07-22 14:08:48 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'spring.jpa.hibernate-org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties'
2024-07-22 14:08:48 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'dataSource'
2024-07-22 14:08:48 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties'
2024-07-22 14:08:48 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@2c565212'
2024-07-22 14:08:48 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'spring.jpa.hibernate-org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties'
2024-07-22 14:08:48 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'hikariPoolDataSourceMetadataProvider'
2024-07-22 14:08:48 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration'
2024-07-22 14:08:48 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'entityManagerFactoryBuilder'
2024-07-22 14:08:48 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'jpaVendorAdapter'
2024-07-22 14:08:48 DEBUG logging:38 - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2024-07-22 14:08:48 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'entityManagerFactoryBuilder' via factory method to bean named 'jpaVendorAdapter'
2024-07-22 14:08:48 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'persistenceManagedTypes'
2024-07-22 14:08:48 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'persistenceManagedTypes' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@2c565212'
2024-07-22 14:08:48 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'persistenceManagedTypes' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@723ada59'
2024-07-22 14:08:48 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'entityManagerFactory' via factory method to bean named 'entityManagerFactoryBuilder'
2024-07-22 14:08:48 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'entityManagerFactory' via factory method to bean named 'persistenceManagedTypes'
2024-07-22 14:08:48 DEBUG HikariPool:414 - HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2024-07-22 14:08:48 DEBUG LocalContainerEntityManagerFactoryBean:384 - Building JPA container EntityManagerFactory for persistence unit 'default'
2024-07-22 14:08:48 DEBUG HikariPool:738 - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7581722e
2024-07-22 14:08:48 DEBUG HikariPool:738 - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7b4692ee
2024-07-22 14:08:48 DEBUG LogHelper:102 - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@28a53dbe
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (HikariPool-1)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/home/egor/git/Java/dwh2024/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.dwh.store.EntityExample
		org.dwh.store.entity.AbstractBaseEntity]
	Mapping files names []
	Properties []
2024-07-22 14:08:48 DEBUG IntegratorServiceImpl:51 - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2024-07-22 14:08:48 DEBUG IntegratorServiceImpl:51 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-07-22 14:08:48 DEBUG HikariPool:738 - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7f79195e
2024-07-22 14:08:48 DEBUG HikariPool:738 - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3a7b98d5
2024-07-22 14:08:48 INFO  Version:44 - HHH000412: Hibernate ORM core version 6.4.4.Final
2024-07-22 14:08:48 DEBUG HikariPool:738 - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@44958db6
2024-07-22 14:08:48 DEBUG Environment:163 - HHH000206: 'hibernate.properties' not found
2024-07-22 14:08:48 DEBUG HikariPool:738 - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@b0ba628
2024-07-22 14:08:48 DEBUG factory:170 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-07-22 14:08:48 DEBUG factory:170 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-07-22 14:08:48 DEBUG factory:170 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-07-22 14:08:48 DEBUG factory:170 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-07-22 14:08:48 DEBUG factory:170 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-07-22 14:08:48 DEBUG factory:170 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-07-22 14:08:48 DEBUG factory:170 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-07-22 14:08:48 DEBUG factory:170 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-07-22 14:08:48 DEBUG factory:170 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-07-22 14:08:48 DEBUG factory:170 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-07-22 14:08:48 DEBUG factory:170 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-07-22 14:08:48 DEBUG factory:170 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-07-22 14:08:48 DEBUG HikariPool:738 - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3c0fedfe
2024-07-22 14:08:48 DEBUG RegionFactoryInitiator:122 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-07-22 14:08:48 INFO  RegionFactoryInitiator:50 - HHH000026: Second-level cache disabled
2024-07-22 14:08:48 DEBUG HikariPool:738 - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5a54679a
2024-07-22 14:08:48 DEBUG HikariPool:738 - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@32c4b95b
2024-07-22 14:08:48 DEBUG HikariPool:414 - HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@41e1fccf
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@41e1fccf
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@41e1fccf
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@72803e40
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@72803e40
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@725b8067
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@725b8067
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@3ff8cb60
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@3ff8cb60
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@71315fd4
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@71315fd4
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@71315fd4
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration binary -> org.hibernate.type.BasicTypeReference@2301d8c
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2301d8c
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration [B -> org.hibernate.type.BasicTypeReference@2301d8c
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2c46fd15
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2c46fd15
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration image -> org.hibernate.type.BasicTypeReference@559c9036
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration blob -> org.hibernate.type.BasicTypeReference@2ea8aaae
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@2ea8aaae
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@2cf61e8a
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@3743e054
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration short -> org.hibernate.type.BasicTypeReference@6efdbaa
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration short -> org.hibernate.type.BasicTypeReference@6efdbaa
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@6efdbaa
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration integer -> org.hibernate.type.BasicTypeReference@6df9ec03
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration int -> org.hibernate.type.BasicTypeReference@6df9ec03
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@6df9ec03
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration long -> org.hibernate.type.BasicTypeReference@7167ad78
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration long -> org.hibernate.type.BasicTypeReference@7167ad78
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@7167ad78
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration float -> org.hibernate.type.BasicTypeReference@590eb240
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration float -> org.hibernate.type.BasicTypeReference@590eb240
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@590eb240
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration double -> org.hibernate.type.BasicTypeReference@21c41040
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration double -> org.hibernate.type.BasicTypeReference@21c41040
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@21c41040
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@3ff798f
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@3ff798f
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@4f3f08e5
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@4f3f08e5
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration character -> org.hibernate.type.BasicTypeReference@630f2ff0
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration char -> org.hibernate.type.BasicTypeReference@630f2ff0
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@630f2ff0
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@624865c1
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration string -> org.hibernate.type.BasicTypeReference@1a034b06
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@1a034b06
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@2dcc0083
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration characters -> org.hibernate.type.BasicTypeReference@3726da65
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@3726da65
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration [C -> org.hibernate.type.BasicTypeReference@3726da65
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@16e1c72d
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration text -> org.hibernate.type.BasicTypeReference@163ae58c
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@5bbf27d0
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration clob -> org.hibernate.type.BasicTypeReference@5acb3b30
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@5acb3b30
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@420b47eb
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@420b47eb
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@35cdca3
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@21fffabf
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@22ee570b
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@3ac278a2
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@5f9e029d
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@16a31d3
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@516c68fa
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@516c68fa
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@78420d1d
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@78420d1d
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@57e76262
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@57e76262
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@75325e4
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@75325e4
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@354ab64c
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@354ab64c
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5d087f1d
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3190f2ac
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2f728d7f
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2f728d7f
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@4feab60b
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5104c87c
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@67b74562
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@5c95259e
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@5c95259e
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@46559ae9
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@31e5ed77
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration date -> org.hibernate.type.BasicTypeReference@6ca4227c
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@6ca4227c
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration time -> org.hibernate.type.BasicTypeReference@19e853a3
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@19e853a3
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@730000a5
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@730000a5
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@730000a5
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@6d90d5e7
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@6d90d5e7
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@6d90d5e7
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@20eaadeb
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@7bc4871e
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration instant -> org.hibernate.type.BasicTypeReference@8b2b5eb
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@8b2b5eb
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@636676f7
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@636676f7
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@636676f7
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@16160a85
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@4935932e
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration class -> org.hibernate.type.BasicTypeReference@54356a0e
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@54356a0e
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration currency -> org.hibernate.type.BasicTypeReference@4b47fb1
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@4b47fb1
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@4b47fb1
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration locale -> org.hibernate.type.BasicTypeReference@22d01f80
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@22d01f80
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@47995417
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@47995417
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@380333f0
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@380333f0
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@1fed8ab6
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@1fed8ab6
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration url -> org.hibernate.type.BasicTypeReference@3d63aad4
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@3d63aad4
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration vector -> org.hibernate.type.BasicTypeReference@30577883
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@11ea51ca
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:371 - Adding type registration object -> org.hibernate.type.JavaObjectType@1bdd15bd
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:371 - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@1bdd15bd
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:371 - Adding type registration null -> org.hibernate.type.NullType@2ee67a48
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@63144b64
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@20a81be2
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@369028b8
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@2bb93018
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@6ab70160
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@a2060df
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@3dc25ccb
2024-07-22 14:08:48 DEBUG BasicTypeRegistry:396 - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@5f99929b
2024-07-22 14:08:48 DEBUG BootstrapContextImpl:291 - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@236b1afe] into BootstrapContext; was [null]
2024-07-22 14:08:48 DEBUG ClassLoaderAccessImpl:45 - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@236b1afe) [was null]
2024-07-22 14:08:48 DEBUG BootstrapContextImpl:301 - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@3864585a] into BootstrapContext; was [null]
2024-07-22 14:08:48 DEBUG BootstrapContextImpl:296 - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@47fd1294] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@19c88081]
2024-07-22 14:08:48 INFO  SpringPersistenceUnitInfo:87 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-22 14:08:48 DEBUG BootstrapContextImpl:291 - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@236b1afe]
2024-07-22 14:08:48 DEBUG ClassLoaderAccessImpl:45 - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@236b1afe]
2024-07-22 14:08:48 DEBUG JdbcEnvironmentInitiator:353 - Database ->
       name : PostgreSQL
    version : 11.22
      major : 11
      minor : 22
2024-07-22 14:08:48 DEBUG JdbcEnvironmentInitiator:364 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.7.3
      major : 42
      minor : 7
2024-07-22 14:08:48 DEBUG JdbcEnvironmentInitiator:388 - JDBC version : 4.2
2024-07-22 14:08:49 WARN  Dialect:353 - HHH000511: The 11.22.0 version for [org.hibernate.dialect.PostgreSQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 12.0.0. Check the community dialects project for available legacy versions.
2024-07-22 14:08:49 DEBUG dialect:94 - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 11.22
2024-07-22 14:08:49 DEBUG IdentifierHelperBuilder:116 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2024-07-22 14:08:49 DEBUG lob:61 - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2024-07-22 14:08:49 DEBUG DdlTypeRegistry:64 - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@686b6f53) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@b1fc232)
2024-07-22 14:08:49 DEBUG DdlTypeRegistry:64 - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7722c085) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@75c272f0)
2024-07-22 14:08:49 DEBUG JdbcTypeRegistry:82 - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2024-07-22 14:08:49 DEBUG JdbcTypeRegistry:82 - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-22 14:08:49 DEBUG BasicTypeRegistry:371 - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@b59573
2024-07-22 14:08:49 DEBUG BasicTypeRegistry:371 - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@b59573
2024-07-22 14:08:49 DEBUG BasicTypeRegistry:375 - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@1bdd15bd`
2024-07-22 14:08:49 DEBUG BasicTypeRegistry:371 - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-07-22 14:08:49 DEBUG BasicTypeRegistry:371 - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-07-22 14:08:49 DEBUG BasicTypeRegistry:371 - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-07-22 14:08:49 DEBUG BasicTypeRegistry:371 - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-22 14:08:49 DEBUG BasicTypeRegistry:371 - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-22 14:08:49 DEBUG BasicTypeRegistry:371 - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-22 14:08:49 DEBUG BasicTypeRegistry:371 - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-22 14:08:49 DEBUG BasicTypeRegistry:371 - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-22 14:08:49 DEBUG BasicTypeRegistry:371 - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-22 14:08:49 DEBUG BasicTypeRegistry:371 - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-07-22 14:08:49 DEBUG BasicTypeRegistry:371 - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-22 14:08:49 DEBUG BasicTypeRegistry:371 - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-22 14:08:49 DEBUG TypeConfiguration$Scope:194 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4401e551] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@57365849]
2024-07-22 14:08:49 DEBUG Namespace:64 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-07-22 14:08:49 DEBUG AnnotationMetadataSourceProcessorImpl:282 - Skipping explicit MappedSuperclass org.dwh.store.entity.AbstractBaseEntity, the class will be discovered analyzing the implementing class
2024-07-22 14:08:49 DEBUG EntityBinder:214 - Binding entity from annotated class: org.dwh.store.EntityExample
2024-07-22 14:08:49 DEBUG EntityBinder:1308 - Import with entity name EntityExample
2024-07-22 14:08:49 DEBUG EntityBinder:1857 - Bind entity org.dwh.store.EntityExample on table example
2024-07-22 14:08:49 DEBUG AnnotatedColumn:261 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-07-22 14:08:49 DEBUG AnnotatedColumn:261 - Binding column: AnnotatedColumn()
2024-07-22 14:08:49 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [org.dwh.store.EntityExample] is safe
2024-07-22 14:08:49 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.dwh.store.EntityExample
2024-07-22 14:08:49 DEBUG PropertyBinder:252 - MetadataSourceProcessor property id with lazy=false
2024-07-22 14:08:49 DEBUG AbstractPropertyHolder:107 - Attempting to locate auto-apply AttributeConverter for property [org.dwh.store.EntityExample:id]
2024-07-22 14:08:49 DEBUG BasicValueBinder:1212 - building BasicValue for id
2024-07-22 14:08:49 DEBUG BasicValue:294 - Skipping column re-registration: example.id
2024-07-22 14:08:49 DEBUG PropertyBinder:392 - Building property id
2024-07-22 14:08:49 DEBUG BinderHelper:75 - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, global_seq, ...)
2024-07-22 14:08:49 DEBUG AnnotatedColumn:261 - Binding column: AnnotatedColumn()
2024-07-22 14:08:49 DEBUG PropertyBinder:252 - MetadataSourceProcessor property CLOSE with lazy=false
2024-07-22 14:08:49 DEBUG AbstractPropertyHolder:107 - Attempting to locate auto-apply AttributeConverter for property [org.dwh.store.EntityExample:CLOSE]
2024-07-22 14:08:49 DEBUG BasicValueBinder:1212 - building BasicValue for CLOSE
2024-07-22 14:08:49 DEBUG BasicValue:294 - Skipping column re-registration: example.close
2024-07-22 14:08:49 DEBUG PropertyBinder:392 - Building property CLOSE
2024-07-22 14:08:49 DEBUG AnnotatedColumn:261 - Binding column: AnnotatedColumn()
2024-07-22 14:08:49 DEBUG PropertyBinder:252 - MetadataSourceProcessor property DATE with lazy=false
2024-07-22 14:08:49 DEBUG AbstractPropertyHolder:107 - Attempting to locate auto-apply AttributeConverter for property [org.dwh.store.EntityExample:DATE]
2024-07-22 14:08:49 DEBUG BasicValueBinder:1212 - building BasicValue for DATE
2024-07-22 14:08:49 DEBUG BasicValue:294 - Skipping column re-registration: example.date
2024-07-22 14:08:49 DEBUG PropertyBinder:392 - Building property DATE
2024-07-22 14:08:49 DEBUG AnnotatedColumn:261 - Binding column: AnnotatedColumn()
2024-07-22 14:08:49 DEBUG PropertyBinder:252 - MetadataSourceProcessor property HIGH with lazy=false
2024-07-22 14:08:49 DEBUG AbstractPropertyHolder:107 - Attempting to locate auto-apply AttributeConverter for property [org.dwh.store.EntityExample:HIGH]
2024-07-22 14:08:49 DEBUG BasicValueBinder:1212 - building BasicValue for HIGH
2024-07-22 14:08:49 DEBUG BasicValue:294 - Skipping column re-registration: example.high
2024-07-22 14:08:49 DEBUG PropertyBinder:392 - Building property HIGH
2024-07-22 14:08:49 DEBUG AnnotatedColumn:261 - Binding column: AnnotatedColumn()
2024-07-22 14:08:49 DEBUG PropertyBinder:252 - MetadataSourceProcessor property LOW with lazy=false
2024-07-22 14:08:49 DEBUG AbstractPropertyHolder:107 - Attempting to locate auto-apply AttributeConverter for property [org.dwh.store.EntityExample:LOW]
2024-07-22 14:08:49 DEBUG BasicValueBinder:1212 - building BasicValue for LOW
2024-07-22 14:08:49 DEBUG BasicValue:294 - Skipping column re-registration: example.low
2024-07-22 14:08:49 DEBUG PropertyBinder:392 - Building property LOW
2024-07-22 14:08:49 DEBUG AnnotatedColumn:261 - Binding column: AnnotatedColumn()
2024-07-22 14:08:49 DEBUG PropertyBinder:252 - MetadataSourceProcessor property OPEN with lazy=false
2024-07-22 14:08:49 DEBUG AbstractPropertyHolder:107 - Attempting to locate auto-apply AttributeConverter for property [org.dwh.store.EntityExample:OPEN]
2024-07-22 14:08:49 DEBUG BasicValueBinder:1212 - building BasicValue for OPEN
2024-07-22 14:08:49 DEBUG BasicValue:294 - Skipping column re-registration: example.open
2024-07-22 14:08:49 DEBUG PropertyBinder:392 - Building property OPEN
2024-07-22 14:08:49 DEBUG AnnotatedColumn:261 - Binding column: AnnotatedColumn()
2024-07-22 14:08:49 DEBUG PropertyBinder:252 - MetadataSourceProcessor property PER with lazy=false
2024-07-22 14:08:49 DEBUG AbstractPropertyHolder:107 - Attempting to locate auto-apply AttributeConverter for property [org.dwh.store.EntityExample:PER]
2024-07-22 14:08:49 DEBUG BasicValueBinder:1212 - building BasicValue for PER
2024-07-22 14:08:49 DEBUG BasicValue:294 - Skipping column re-registration: example.per
2024-07-22 14:08:49 DEBUG PropertyBinder:392 - Building property PER
2024-07-22 14:08:49 DEBUG AnnotatedColumn:261 - Binding column: AnnotatedColumn()
2024-07-22 14:08:49 DEBUG PropertyBinder:252 - MetadataSourceProcessor property TICKER with lazy=false
2024-07-22 14:08:49 DEBUG AbstractPropertyHolder:107 - Attempting to locate auto-apply AttributeConverter for property [org.dwh.store.EntityExample:TICKER]
2024-07-22 14:08:49 DEBUG BasicValueBinder:1212 - building BasicValue for TICKER
2024-07-22 14:08:49 DEBUG BasicValue:294 - Skipping column re-registration: example.ticker
2024-07-22 14:08:49 DEBUG PropertyBinder:392 - Building property TICKER
2024-07-22 14:08:49 DEBUG AnnotatedColumn:261 - Binding column: AnnotatedColumn()
2024-07-22 14:08:49 DEBUG PropertyBinder:252 - MetadataSourceProcessor property TIME with lazy=false
2024-07-22 14:08:49 DEBUG AbstractPropertyHolder:107 - Attempting to locate auto-apply AttributeConverter for property [org.dwh.store.EntityExample:TIME]
2024-07-22 14:08:49 DEBUG BasicValueBinder:1212 - building BasicValue for TIME
2024-07-22 14:08:49 DEBUG BasicValue:294 - Skipping column re-registration: example.time
2024-07-22 14:08:49 DEBUG PropertyBinder:392 - Building property TIME
2024-07-22 14:08:49 DEBUG AnnotatedColumn:261 - Binding column: AnnotatedColumn()
2024-07-22 14:08:49 DEBUG PropertyBinder:252 - MetadataSourceProcessor property VOL with lazy=false
2024-07-22 14:08:49 DEBUG AbstractPropertyHolder:107 - Attempting to locate auto-apply AttributeConverter for property [org.dwh.store.EntityExample:VOL]
2024-07-22 14:08:49 DEBUG BasicValueBinder:1212 - building BasicValue for VOL
2024-07-22 14:08:49 DEBUG BasicValue:294 - Skipping column re-registration: example.vol
2024-07-22 14:08:49 DEBUG PropertyBinder:392 - Building property VOL
2024-07-22 14:08:49 DEBUG ClassLoaderServiceImpl:261 - HHH000194: Package not found or wo package-info.java: org.dwh.store
2024-07-22 14:08:49 DEBUG BasicValueBinder:1290 - Starting `BasicValueBinder#fillSimpleValue` for id
2024-07-22 14:08:49 DEBUG BasicValueBinder:1290 - Starting `BasicValueBinder#fillSimpleValue` for CLOSE
2024-07-22 14:08:49 DEBUG BasicValueBinder:1290 - Starting `BasicValueBinder#fillSimpleValue` for DATE
2024-07-22 14:08:49 DEBUG BasicValueBinder:1290 - Starting `BasicValueBinder#fillSimpleValue` for HIGH
2024-07-22 14:08:49 DEBUG BasicValueBinder:1290 - Starting `BasicValueBinder#fillSimpleValue` for LOW
2024-07-22 14:08:49 DEBUG BasicValueBinder:1290 - Starting `BasicValueBinder#fillSimpleValue` for OPEN
2024-07-22 14:08:49 DEBUG BasicValueBinder:1290 - Starting `BasicValueBinder#fillSimpleValue` for PER
2024-07-22 14:08:49 DEBUG BasicValueBinder:1290 - Starting `BasicValueBinder#fillSimpleValue` for TICKER
2024-07-22 14:08:49 DEBUG BasicValueBinder:1290 - Starting `BasicValueBinder#fillSimpleValue` for TIME
2024-07-22 14:08:49 DEBUG BasicValueBinder:1290 - Starting `BasicValueBinder#fillSimpleValue` for VOL
2024-07-22 14:08:49 DEBUG PrimaryKey:41 - Forcing column [id] to be non-null as it is part of the primary key for table [example]
2024-07-22 14:08:49 DEBUG SessionFactoryImpl:218 - Building session factory
2024-07-22 14:08:49 DEBUG SessionFactoryServiceRegistryImpl:105 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-07-22 14:08:49 DEBUG SessionFactoryImpl:236 - Instantiating SessionFactory with settings: {java.specification.version=17, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@2537df8a, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=UTF-8, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=/home/egor/git/Java/dwh2024/target/classes:/home/egor/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/3.2.3/spring-boot-starter-data-jpa-3.2.3.jar:/home/egor/.m2/repository/org/springframework/boot/spring-boot-starter-aop/3.2.3/spring-boot-starter-aop-3.2.3.jar:/home/egor/.m2/repository/org/springframework/spring-aop/6.1.4/spring-aop-6.1.4.jar:/home/egor/.m2/repository/org/aspectj/aspectjweaver/1.9.21/aspectjweaver-1.9.21.jar:/home/egor/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/3.2.3/spring-boot-starter-jdbc-3.2.3.jar:/home/egor/.m2/repository/com/zaxxer/HikariCP/5.0.1/HikariCP-5.0.1.jar:/home/egor/.m2/repository/org/springframework/spring-jdbc/6.1.4/spring-jdbc-6.1.4.jar:/home/egor/.m2/repository/org/hibernate/orm/hibernate-core/6.4.4.Final/hibernate-core-6.4.4.Final.jar:/home/egor/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/home/egor/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/home/egor/.m2/repository/org/jboss/logging/jboss-logging/3.5.3.Final/jboss-logging-3.5.3.Final.jar:/home/egor/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/home/egor/.m2/repository/io/smallrye/jandex/3.1.2/jandex-3.1.2.jar:/home/egor/.m2/repository/com/fasterxml/classmate/1.6.0/classmate-1.6.0.jar:/home/egor/.m2/repository/net/bytebuddy/byte-buddy/1.14.12/byte-buddy-1.14.12.jar:/home/egor/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.4/jaxb-runtime-4.0.4.jar:/home/egor/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.4/jaxb-core-4.0.4.jar:/home/egor/.m2/repository/org/eclipse/angus/angus-activation/2.0.1/angus-activation-2.0.1.jar:/home/egor/.m2/repository/org/glassfish/jaxb/txw2/4.0.4/txw2-4.0.4.jar:/home/egor/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.2/istack-commons-runtime-4.1.2.jar:/home/egor/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/home/egor/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/home/egor/.m2/repository/org/springframework/data/spring-data-jpa/3.2.3/spring-data-jpa-3.2.3.jar:/home/egor/.m2/repository/org/springframework/data/spring-data-commons/3.2.3/spring-data-commons-3.2.3.jar:/home/egor/.m2/repository/org/springframework/spring-orm/6.1.4/spring-orm-6.1.4.jar:/home/egor/.m2/repository/org/springframework/spring-tx/6.1.4/spring-tx-6.1.4.jar:/home/egor/.m2/repository/org/springframework/spring-beans/6.1.4/spring-beans-6.1.4.jar:/home/egor/.m2/repository/jakarta/annotation/jakarta.annotation-api/2.1.1/jakarta.annotation-api-2.1.1.jar:/home/egor/.m2/repository/org/springframework/spring-aspects/6.1.4/spring-aspects-6.1.4.jar:/home/egor/.m2/repository/org/springframework/boot/spring-boot-starter-data-rest/3.2.3/spring-boot-starter-data-rest-3.2.3.jar:/home/egor/.m2/repository/org/springframework/data/spring-data-rest-webmvc/4.2.3/spring-data-rest-webmvc-4.2.3.jar:/home/egor/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.15.4/jackson-databind-2.15.4.jar:/home/egor/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.15.4/jackson-annotations-2.15.4.jar:/home/egor/.m2/repository/org/springframework/boot/spring-boot-starter/3.2.3/spring-boot-starter-3.2.3.jar:/home/egor/.m2/repository/org/springframework/boot/spring-boot-starter-logging/3.2.3/spring-boot-starter-logging-3.2.3.jar:/home/egor/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.21.1/log4j-to-slf4j-2.21.1.jar:/home/egor/.m2/repository/org/apache/logging/log4j/log4j-api/2.21.1/log4j-api-2.21.1.jar:/home/egor/.m2/repository/org/slf4j/jul-to-slf4j/2.0.12/jul-to-slf4j-2.0.12.jar:/home/egor/.m2/repository/org/yaml/snakeyaml/2.2/snakeyaml-2.2.jar:/home/egor/.m2/repository/com/jayway/jsonpath/json-path/2.9.0/json-path-2.9.0.jar:/home/egor/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.1/jakarta.xml.bind-api-4.0.1.jar:/home/egor/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.2/jakarta.activation-api-2.1.2.jar:/home/egor/.m2/repository/net/minidev/json-smart/2.5.0/json-smart-2.5.0.jar:/home/egor/.m2/repository/net/minidev/accessors-smart/2.5.0/accessors-smart-2.5.0.jar:/home/egor/.m2/repository/org/ow2/asm/asm/9.3/asm-9.3.jar:/home/egor/.m2/repository/org/springframework/spring-core/6.1.4/spring-core-6.1.4.jar:/home/egor/.m2/repository/org/springframework/spring-jcl/6.1.4/spring-jcl-6.1.4.jar:/home/egor/.m2/repository/org/springframework/boot/spring-boot-starter-web/3.2.3/spring-boot-starter-web-3.2.3.jar:/home/egor/.m2/repository/org/springframework/boot/spring-boot-starter-json/3.2.3/spring-boot-starter-json-3.2.3.jar:/home/egor/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.15.4/jackson-datatype-jdk8-2.15.4.jar:/home/egor/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.15.4/jackson-datatype-jsr310-2.15.4.jar:/home/egor/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.15.4/jackson-module-parameter-names-2.15.4.jar:/home/egor/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/3.2.3/spring-boot-starter-tomcat-3.2.3.jar:/home/egor/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/10.1.19/tomcat-embed-core-10.1.19.jar:/home/egor/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/10.1.19/tomcat-embed-el-10.1.19.jar:/home/egor/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/10.1.19/tomcat-embed-websocket-10.1.19.jar:/home/egor/.m2/repository/org/springframework/spring-web/6.1.4/spring-web-6.1.4.jar:/home/egor/.m2/repository/io/micrometer/micrometer-observation/1.12.3/micrometer-observation-1.12.3.jar:/home/egor/.m2/repository/io/micrometer/micrometer-commons/1.12.3/micrometer-commons-1.12.3.jar:/home/egor/.m2/repository/org/springframework/spring-webmvc/6.1.4/spring-webmvc-6.1.4.jar:/home/egor/.m2/repository/org/springframework/spring-expression/6.1.4/spring-expression-6.1.4.jar:/home/egor/.m2/repository/org/springframework/boot/spring-boot-devtools/3.2.3/spring-boot-devtools-3.2.3.jar:/home/egor/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/3.2.3/spring-boot-autoconfigure-3.2.3.jar:/home/egor/.m2/repository/org/springframework/boot/spring-boot/3.2.3/spring-boot-3.2.3.jar:/home/egor/.m2/repository/org/springframework/spring-context/6.1.4/spring-context-6.1.4.jar:/home/egor/.m2/repository/org/springdoc/springdoc-openapi-ui/1.6.8/springdoc-openapi-ui-1.6.8.jar:/home/egor/.m2/repository/org/springdoc/springdoc-openapi-webmvc-core/1.6.8/springdoc-openapi-webmvc-core-1.6.8.jar:/home/egor/.m2/repository/org/springdoc/springdoc-openapi-common/1.6.8/springdoc-openapi-common-1.6.8.jar:/home/egor/.m2/repository/io/swagger/core/v3/swagger-core/2.2.0/swagger-core-2.2.0.jar:/home/egor/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.15.4/jackson-dataformat-yaml-2.15.4.jar:/home/egor/.m2/repository/io/swagger/core/v3/swagger-annotations/2.2.0/swagger-annotations-2.2.0.jar:/home/egor/.m2/repository/io/swagger/core/v3/swagger-models/2.2.0/swagger-models-2.2.0.jar:/home/egor/.m2/repository/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar:/home/egor/.m2/repository/org/webjars/swagger-ui/4.10.3/swagger-ui-4.10.3.jar:/home/egor/.m2/repository/org/webjars/webjars-locator-core/0.55/webjars-locator-core-0.55.jar:/home/egor/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.15.4/jackson-core-2.15.4.jar:/home/egor/.m2/repository/io/github/classgraph/classgraph/4.8.143/classgraph-4.8.143.jar:/home/egor/.m2/repository/org/springdoc/springdoc-openapi-data-rest/1.6.8/springdoc-openapi-data-rest-1.6.8.jar:/home/egor/.m2/repository/org/springdoc/springdoc-openapi-hateoas/1.6.8/springdoc-openapi-hateoas-1.6.8.jar:/home/egor/.m2/repository/org/springframework/hateoas/spring-hateoas/2.2.0/spring-hateoas-2.2.0.jar:/home/egor/.m2/repository/org/springframework/data/spring-data-rest-core/4.2.3/spring-data-rest-core-4.2.3.jar:/home/egor/.m2/repository/org/springframework/plugin/spring-plugin-core/3.0.0/spring-plugin-core-3.0.0.jar:/home/egor/.m2/repository/org/atteo/evo-inflector/1.3/evo-inflector-1.3.jar:/home/egor/.m2/repository/org/projectlombok/lombok/1.18.30/lombok-1.18.30.jar:/home/egor/.m2/repository/org/postgresql/postgresql/42.7.3/postgresql-42.7.3.jar:/home/egor/.m2/repository/org/checkerframework/checker-qual/3.42.0/checker-qual-3.42.0.jar:/home/egor/.m2/repository/com/opencsv/opencsv/5.9/opencsv-5.9.jar:/home/egor/.m2/repository/org/apache/commons/commons-lang3/3.13.0/commons-lang3-3.13.0.jar:/home/egor/.m2/repository/org/apache/commons/commons-text/1.11.0/commons-text-1.11.0.jar:/home/egor/.m2/repository/commons-beanutils/commons-beanutils/1.9.4/commons-beanutils-1.9.4.jar:/home/egor/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar:/home/egor/.m2/repository/commons-collections/commons-collections/3.2.2/commons-collections-3.2.2.jar:/home/egor/.m2/repository/org/apache/commons/commons-collections4/4.4/commons-collections4-4.4.jar:/home/egor/.m2/repository/org/slf4j/slf4j-api/2.0.12/slf4j-api-2.0.12.jar:/home/egor/.m2/repository/org/slf4j/slf4j-reload4j/2.0.13/slf4j-reload4j-2.0.13.jar:/home/egor/.m2/repository/ch/qos/reload4j/reload4j/1.2.22/reload4j-1.2.22.jar, java.vm.vendor=Amazon.com Inc., sun.arch.data.model=64, java.vendor.url=https://aws.amazon.com/corretto/, catalina.useNaming=false, user.timezone=Asia/Yekaterinburg, jakarta.persistence.sharedCache.mode=UNSPECIFIED, java.vm.specification.version=17, os.name=Linux, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=/home/egor/.jdks/corretto-17.0.10/lib, sun.java.command=org.dwh.Main, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@481d0beb, jdk.debug=release, sun.cpu.endian=little, hibernate.cdi.extensions=true, user.home=/home/egor, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2024-01-16, java.home=/home/egor/.jdks/corretto-17.0.10, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.10+8-LTS, user.name=egor, path.separator=:, os.version=6.7.12+bpo-amd64, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=Corretto-17.0.10.8.1, LOG_FILE=application.log, java.vendor.url.bug=https://github.com/corretto/corretto-17/issues/, java.io.tmpdir=/tmp, com.zaxxer.hikari.pool_number=1, catalina.home=/tmp/tomcat.8080.2292626359111814165, java.version=17.0.10, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=/home/egor/git/Java/dwh2024, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=43618, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=/tmp/tomcat.8080.2292626359111814165, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@76895bcf, native.encoding=UTF-8, java.library.path=/usr/java/packages/lib:/usr/lib64:/lib64:/lib:/usr/lib, java.vendor=Amazon.com Inc., java.vm.info=mixed mode, sharing, java.vm.version=17.0.10+8-LTS, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=61.0, LOGGED_APPLICATION_NAME=[demo] }
2024-07-22 14:08:49 DEBUG SessionFactoryImpl:250 - Session factory constructed with filter configurations : {}
2024-07-22 14:08:49 DEBUG TypeSafeActivator:93 - Unable to acquire Bean Validation ValidatorFactory, skipping activation
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@7bcd5cd7] under count; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@768969e8] under every; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@258a1007] under any; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@95e4780] under sinh; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4d9f5a34] under cosh; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4a27d5a3] under tanh; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6873127d] under pi; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@136a3ab4] under log; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:307 - Registering alternate key : length -> character_length
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@113b04b8] under position; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@4d664665] under overlay; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@35cf7959] under trim; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@7355119d] under cast; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4cf22e6e] under collate; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@893e575] under extract; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@70d3dc1a] under ifnull; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@74cc29ce] under pad; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@6d0b36a9] under str; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@294cdd0e] under format; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@90adfd6] under timestampadd; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@781a6e49] under timestampdiff; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:307 - Registering alternate key : dateadd -> timestampadd
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:307 - Registering alternate key : datediff -> timestampdiff
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1d585605] under current_date; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@26ce083a] under current_time; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@64e4d0ee] under current_timestamp; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:307 - Registering alternate key : current date -> current_date
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:307 - Registering alternate key : current time -> current_time
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:307 - Registering alternate key : current timestamp -> current_timestamp
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@ae4f49d] under local_date; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@555363ba] under local_time; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@30a3ef2] under local_datetime; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@412beddd] under offset_datetime; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:307 - Registering alternate key : local date -> local_date
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:307 - Registering alternate key : local time -> local_time
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:307 - Registering alternate key : local datetime -> local_datetime
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:307 - Registering alternate key : offset datetime -> offset_datetime
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6c46a979] under instant; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:307 - Registering alternate key : current_instant -> instant
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@37e621e7] under sql; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@136a3ab4
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@277f376a] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4a27d5a3
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@95e4780
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4d9f5a34
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6873127d
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@3be338f3] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@555363ba
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@30a3ef2
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@31038a43] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:307 - Registering alternate key : length -> character_length
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@63a9ed09] under bit_length; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@2739ea50] under octet_length; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:307 - Registering alternate key : char -> chr
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1c64144b] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@113b04b8
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3118c416] under bitand; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1df5b699] under bitor; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@75f6a41d] under bitxor; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@498c30a4] under bitnot; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:307 - Registering alternate key : every -> bool_and
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:307 - Registering alternate key : any -> bool_or
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3ec375f7] under median; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4e24d64f] under insert; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@37f29169] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@4d664665
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@7f8e8d96] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@2fc2cc6] under listagg; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@43409507] under array; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@3e05175e] under array_list; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@36b8bd0] under array_agg; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@3956f87f] under array_position; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@6d1f4150] under array_positions; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@76fe2174] under array_positions_list; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2ce958d0] under array_length; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@7bdbbaea] under array_concat; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@7c3879a9] under array_prepend; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@1cd8aa8] under array_append; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@a2577b2] under array_contains; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@13d8edd8] under array_contains_nullable; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@4356c7c8] under array_overlaps; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@341d3eac] under array_overlaps_nullable; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@62bc77ee] under array_get; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@d5c7856] under array_set; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@6991b58f] under array_remove_index; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3e3bb767] under array_slice; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayTrimEmulation@3e1b0cbb] under array_trim; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@42efeb81] under array_fill; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@19aba0a8] under array_fill_list; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@9373d1] under array_to_string; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@57a59f8c] under mode; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@2549ddf4] under percentile_cont; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@7b1c8cb6] under percentile_disc; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@132302b5] under rank; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@5e657784] under dense_rank; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@7d40136e] under percent_rank; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@5b96120f] under cume_dist; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@33ccca68] under min; prior registration was NamedSqmFunctionTemplate(min)
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@3f40d9e6] under max; prior registration was NamedSqmFunctionTemplate(max)
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@1b37b469] under round; prior registration was NamedSqmFunctionTemplate(round)
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@b7d0d3e] under trunc; prior registration was null
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:307 - Registering alternate key : truncate -> trunc
2024-07-22 14:08:49 DEBUG SqmFunctionRegistry:90 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7b1e4aa0] under date_trunc; prior registration was null
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - abs(NUMERIC arg)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Double acos(NUMERIC arg)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Double acosh(NUMERIC arg)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Boolean any(BOOLEAN predicate)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - array( ... )
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - array_agg(arg)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - array_append( ... )
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - array_concat( ... )
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - array_fill(OBJECT element, INTEGER elementCount)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - array_fill_list(OBJECT element, INTEGER elementCount)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - array_get(ARRAY array, INTEGER index)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Integer array_length(ARRAY array)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - array_list( ... )
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - int[] array_positions(ARRAY array, OBJECT element)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - List array_positions_list(ARRAY array, OBJECT element)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - array_prepend( ... )
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - array_remove( ... )
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - array_remove_index( ... )
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - array_replace(ARRAY array, OBJECT old, OBJECT new)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - array_set( ... )
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - array_slice(ARRAY array, INTEGER start, INTEGER end)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - String array_to_string( ... )
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - array_trim( ... )
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Integer ascii(STRING arg)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Double asin(NUMERIC arg)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Double asinh(NUMERIC arg)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Double atan(NUMERIC arg)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Double atan2(NUMERIC arg0, NUMERIC arg1)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Double atanh(NUMERIC arg)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - avg(arg)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - bit_and(arg)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Integer bit_length(STRING_OR_CLOB arg)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - bit_or(arg)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - bitand(arg0, arg1)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - bitnot(arg)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - bitor(arg0, arg1)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - bitxor(arg0, arg1)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Boolean bool_and(BOOLEAN predicate)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Boolean bool_or(BOOLEAN predicate)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - cast(arg as Type)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Double cbrt(NUMERIC arg)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - ceiling(NUMERIC arg)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Character char(INTEGER arg)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Integer character_length(STRING_OR_CLOB arg)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Character chr(INTEGER arg)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - coalesce(arg0[, arg1[, ...]])
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - String collate(STRING string as COLLATION collation)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - (STRING string0[, STRING string1[, ...]])
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Double corr(NUMERIC arg0, NUMERIC arg1)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Double cos(NUMERIC arg)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Double cosh(NUMERIC arg)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Double cot(NUMERIC arg)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Long count([distinct ]{arg|*})
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Double cume_dist([arg0[, ...]])
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Date current date
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Time current time
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Timestamp current timestamp
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Date current_date
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Instant current_instant
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Time current_time
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Timestamp current_timestamp
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - date_trunc(STRING field, TEMPORAL datetime)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - basicType@5(java.lang.Long,-5)|basicType@6(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Double degrees(NUMERIC arg)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Long dense_rank([arg0[, ...]])
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Boolean every(BOOLEAN predicate)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Double exp(NUMERIC arg)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - first_valueANY value
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - floor(NUMERIC arg)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - String format(TEMPORAL datetime as STRING pattern)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - ifnull(arg0, arg1)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - String initcap(arg)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Instant instant
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - lagANY value[, INTEGER offset[, ANY default]]
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - last_valueANY value
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - leadANY value[, INTEGER offset[, ANY default]]
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - String left(STRING string, INTEGER length)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Integer length(STRING_OR_CLOB arg)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - String listagg(STRING arg0, STRING arg1)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Double ln(NUMERIC arg)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - LocalDate local date
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - LocalDateTime local datetime
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - LocalTime local time
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - LocalDate local_date
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - LocalDateTime local_datetime
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - LocalTime local_time
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Time localtime
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Timestamp localtimestamp
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Integer locate(STRING pattern, STRING string[, INTEGER start])
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Double log(NUMERIC arg0[, NUMERIC arg1])
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Double log10(NUMERIC arg)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - String lower(STRING string)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - String lpad(STRING string, INTEGER length[, STRING padding])
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - String ltrim(STRING string[, STRING characters])
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - max(COMPARABLE arg)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - String md5(arg)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Double median(NUMERIC arg)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - min(COMPARABLE arg)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Integer mod(INTEGER arg0, INTEGER arg1)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - mode()
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - nth_valueANY value, INTEGER nth
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - nullif(arg0, arg1)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Integer octet_length(STRING_OR_CLOB arg)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - OffsetDateTime offset datetime
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - OffsetDateTime offset_datetime
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - String overlay(string placing replacement from start[ for length])
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Double percent_rank([arg0[, ...]])
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - percentile_cont(NUMERIC arg)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - percentile_disc(NUMERIC arg)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Double pi
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Integer position(STRING pattern in STRING string)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Double power(NUMERIC arg0, NUMERIC arg1)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Double radians(NUMERIC arg)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Long rank([arg0[, ...]])
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - String repeat(STRING string, INTEGER times)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - String replace(STRING string, STRING pattern, STRING replacement)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - String right(STRING string, INTEGER length)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - round(NUMERIC number[, INTEGER places])
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Long row_number()
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - String rpad(STRING string, INTEGER length[, STRING padding])
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - String rtrim(STRING string[, STRING characters])
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Integer sign(NUMERIC arg)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Double sin(NUMERIC arg)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Double sinh(NUMERIC arg)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - String soundex(arg)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Object sql
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Double sqrt(NUMERIC arg)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Double stddev(NUMERIC arg)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Double stddev_pop(NUMERIC arg)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Double stddev_samp(NUMERIC arg)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - String str(arg)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - String substr(STRING string, INTEGER start[, INTEGER length])
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - sum(arg)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Double tan(NUMERIC arg)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Double tanh(NUMERIC arg)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - basicType@5(java.lang.Long,-5)|basicType@6(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - String translate(STRING arg0, STRING arg1, STRING arg2)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - trunc( ... )
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - truncate( ... )
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - String upper(STRING string)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Double var_pop(NUMERIC arg)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Double var_samp(NUMERIC arg)
2024-07-22 14:08:49 DEBUG HQL_FUNCTIONS:100 - Double variance(NUMERIC arg)
2024-07-22 14:08:49 DEBUG cache:48 - Starting QueryInterpretationCache(2048)
2024-07-22 14:08:49 DEBUG SessionFactoryServiceRegistryImpl:105 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-07-22 14:08:49 DEBUG EntityCopyObserverFactoryInitiator:39 - Configured EntityCopyObserver strategy: disallow
2024-07-22 14:08:49 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [org.dwh.store.EntityExample] is safe
2024-07-22 14:08:49 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.dwh.store.EntityExample
2024-07-22 14:08:49 DEBUG BytecodeProviderImpl:235 - HHH000513: Unable to create the ReflectionOptimizer for [org.dwh.store.EntityExample]: private accessor [CLOSE]
2024-07-22 14:08:49 DEBUG creation:92 - Starting post-init callbacks
2024-07-22 14:08:49 DEBUG creation:242 - Starting PostInitCallbackEntry : Entity(org.dwh.store.EntityExample) `staticFetchableList` generator
2024-07-22 14:08:49 DEBUG create:33 - Created new SQL alias : ee1_0
2024-07-22 14:08:49 DEBUG create:98 - Registration of TableGroup [StandardTableGroup(org.dwh.store.EntityExample)] with identifierForTableGroup [org.dwh.store.EntityExample] for NavigablePath [org.dwh.store.EntityExample] 
2024-07-22 14:08:49 DEBUG AST:67 - DomainResult Graph:
 \-EntityResultImpl [org.dwh.store.EntityExample]
 |  +-BasicFetch [org.dwh.store.EntityExample.CLOSE]
 |  +-BasicFetch [org.dwh.store.EntityExample.DATE]
 |  +-BasicFetch [org.dwh.store.EntityExample.HIGH]
 |  +-BasicFetch [org.dwh.store.EntityExample.LOW]
 |  +-BasicFetch [org.dwh.store.EntityExample.OPEN]
 |  +-BasicFetch [org.dwh.store.EntityExample.PER]
 |  +-BasicFetch [org.dwh.store.EntityExample.TICKER]
 |  +-BasicFetch [org.dwh.store.EntityExample.TIME]
 |  \-BasicFetch [org.dwh.store.EntityExample.VOL]

2024-07-22 14:08:49 DEBUG tree:46 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ee1 : org.dwh.store.EntityExample) {
          primaryTableReference : example as ee1_0
        }
      }
    }

2024-07-22 14:08:49 DEBUG AbstractEntityPersister:2992 - Static SQL for entity: org.dwh.store.EntityExample
2024-07-22 14:08:49 DEBUG AbstractEntityPersister:2997 -  Version select: select id from example where id=?
2024-07-22 14:08:49 DEBUG AbstractEntityPersister:393 -  Insert (0): insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:49 DEBUG AbstractEntityPersister:393 -  Update (0): update example set close=?,date=?,high=?,low=?,open=?,per=?,ticker=?,time=?,vol=? where id=?
2024-07-22 14:08:49 DEBUG AbstractEntityPersister:393 -  Delete (0): delete from example where id=?
2024-07-22 14:08:49 INFO  JtaPlatformInitiator:58 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-22 14:08:49 DEBUG TypeConfiguration$Scope:206 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4401e551] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@4838d179]
2024-07-22 14:08:49 DEBUG NamedObjectRepository:243 - Checking 0 named HQL queries
2024-07-22 14:08:49 DEBUG NamedObjectRepository:267 - Checking 0 named SQL queries
2024-07-22 14:08:49 DEBUG Table:107 - No alter strings for table : example
2024-07-22 14:08:49 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2b33d319
2024-07-22 14:08:49 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 753180c1-d63e-4b19-b985-b71846f104ad (<unnamed>)
2024-07-22 14:08:49 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2024-07-22 14:08:49 DEBUG SessionFactoryImpl:334 - Instantiated SessionFactory
2024-07-22 14:08:49 INFO  LocalContainerEntityManagerFactoryBean:437 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-22 14:08:49 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'main'
2024-07-22 14:08:49 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'loaderService'
2024-07-22 14:08:49 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'readerService'
2024-07-22 14:08:49 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'entityExampleRepository'
2024-07-22 14:08:49 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'jpa.named-queries#0'
2024-07-22 14:08:49 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'jpa.EntityExampleRepository.fragments#0'
2024-07-22 14:08:49 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'jpaSharedEM_entityManagerFactory'
2024-07-22 14:08:49 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'jpaMappingContext'
2024-07-22 14:08:49 DEBUG JpaMetamodelMappingContextFactoryBean:65 - Initializing JpaMetamodelMappingContext…
2024-07-22 14:08:49 DEBUG JpaMetamodelMappingContextFactoryBean:72 - Finished initializing JpaMetamodelMappingContext
2024-07-22 14:08:49 DEBUG SharedEntityManagerCreator$SharedEntityManagerInvocationHandler:310 - Creating new EntityManager for shared EntityManager invocation
2024-07-22 14:08:50 DEBUG StatisticsInitiator:87 - Statistics initialized [enabled=false]
2024-07-22 14:08:50 DEBUG SharedEntityManagerCreator$SharedEntityManagerInvocationHandler:310 - Creating new EntityManager for shared EntityManager invocation
2024-07-22 14:08:50 DEBUG CachedIntrospectionResults:166 - Not strongly caching class [org.dwh.store.EntityExample] because it is not cache-safe
2024-07-22 14:08:50 DEBUG RepositoryFactorySupport:272 - Initializing repository instance for org.dwh.store.EntityExampleRepository…
2024-07-22 14:08:50 DEBUG SharedEntityManagerCreator$SharedEntityManagerInvocationHandler:310 - Creating new EntityManager for shared EntityManager invocation
2024-07-22 14:08:50 DEBUG RepositoryFactorySupport:369 - Finished creation of repository instance for org.dwh.store.EntityExampleRepository.
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'readerService' via constructor to bean named 'entityExampleRepository'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'runAfterStartup'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar.methodValidationExcludeFilter'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$ThreadPoolTaskExecutorBuilderConfiguration'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'threadPoolTaskExecutorBuilder'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'threadPoolTaskExecutorBuilder' via factory method to bean named 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$TaskExecutorBuilderConfiguration'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'taskExecutorBuilder'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'taskExecutorBuilder' via factory method to bean named 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$SimpleAsyncTaskExecutorBuilderConfiguration'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$SimpleAsyncTaskExecutorBuilderConfiguration' via constructor to bean named 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'simpleAsyncTaskExecutorBuilder'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$TaskExecutorConfiguration'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'error'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'beanNameViewResolver'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@723ada59'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'conventionErrorViewResolver'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'errorAttributes'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'basicErrorController'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'basicErrorController' via factory method to bean named 'errorAttributes'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@2c565212'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@2c565212'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'resourceHandlerRegistrationCustomizer'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$ResourceChainCustomizerConfiguration'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'resourceHandlerRegistrationCustomizer' via factory method to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'openEntityManagerInViewInterceptorConfigurer'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration' via constructor to bean named 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'openEntityManagerInViewInterceptor'
2024-07-22 14:08:50 WARN  JpaBaseConfiguration$JpaWebConfiguration:232 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'openEntityManagerInViewInterceptorConfigurer' via factory method to bean named 'openEntityManagerInViewInterceptor'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'hypermediaWebMvcConfigurer'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.hateoas.config.WebMvcHateoasConfiguration'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'hypermediaWebMvcConverters'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.hateoas.config.HateoasConfiguration'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.hateoas.mediatype.hal.HalMediaTypeConfiguration'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean '_relProvider'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'relProviderPluginRegistry'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'relProviderPluginRegistry' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@723ada59'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name '_relProvider' via factory method to bean named 'relProviderPluginRegistry'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'messageResolver'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'org.springframework.hateoas.mediatype.hal.HalMediaTypeConfiguration' via constructor to bean named '_relProvider'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'org.springframework.hateoas.mediatype.hal.HalMediaTypeConfiguration' via constructor to bean named 'messageResolver'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'org.springframework.hateoas.mediatype.hal.HalMediaTypeConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@2c565212'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.hateoas.mediatype.hal.forms.HalFormsMediaTypeConfiguration'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'org.springframework.hateoas.mediatype.hal.forms.HalFormsMediaTypeConfiguration' via constructor to bean named '_relProvider'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'org.springframework.hateoas.mediatype.hal.forms.HalFormsMediaTypeConfiguration' via constructor to bean named 'messageResolver'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'org.springframework.hateoas.mediatype.hal.forms.HalFormsMediaTypeConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@2c565212'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'hypermediaWebMvcConverters' via factory method to bean named 'org.springframework.hateoas.mediatype.hal.HalMediaTypeConfiguration'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'hypermediaWebMvcConverters' via factory method to bean named 'org.springframework.hateoas.mediatype.hal.forms.HalFormsMediaTypeConfiguration'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'applicationJsonHalConfiguration'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.hateoas.HypermediaAutoConfiguration'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'jacksonObjectMapper'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'standardJacksonObjectMapperBuilderCustomizer'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'parameterNamesModule'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'jsonMixinModule'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonMixinConfiguration'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'jsonMixinModuleEntries'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'jsonMixinModuleEntries' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@723ada59'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'jsonMixinModule' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@723ada59'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'jsonMixinModule' via factory method to bean named 'jsonMixinModuleEntries'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'jsonComponentModule'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'jacksonGeoModule'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'pageModule'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@723ada59'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'standardJacksonObjectMapperBuilderCustomizer'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'jacksonObjectMapper' via factory method to bean named 'jacksonObjectMapperBuilder'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'hypermediaWebMvcConfigurer' via factory method to bean named 'hypermediaWebMvcConverters'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@723ada59'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'welcomePageHandlerMapping'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'mvcConversionService'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'jsonSchemaConverter'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'persistentEntities'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'associationLinks'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'resourceMappings'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'repositories'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'repositoryRestConfiguration'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'springBootRepositoryRestConfigurer'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.rest.RepositoryRestMvcAutoConfiguration'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'spring.data.rest-org.springframework.boot.autoconfigure.data.rest.RepositoryRestProperties'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'springBootRepositoryRestConfigurer' via factory method to bean named 'spring.data.rest-org.springframework.boot.autoconfigure.data.rest.RepositoryRestProperties'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'resourceMappings' via factory method to bean named 'repositories'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'resourceMappings' via factory method to bean named 'persistentEntities'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'resourceMappings' via factory method to bean named 'repositoryRestConfiguration'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'associationLinks' via factory method to bean named 'resourceMappings'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'associationLinks' via factory method to bean named 'repositoryRestConfiguration'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'repositoryInvokerFactory'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'jsonSchemaConverter' via factory method to bean named 'persistentEntities'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'jsonSchemaConverter' via factory method to bean named 'associationLinks'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'jsonSchemaConverter' via factory method to bean named 'repositoryInvokerFactory'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'jsonSchemaConverter' via factory method to bean named 'repositoryRestConfiguration'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'linkCollector'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'selfLinkProvider'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'entityLinks'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'backendIdConverterRegistry'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'entityLinks' via factory method to bean named 'repositories'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'entityLinks' via factory method to bean named 'resourceMappings'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'entityLinks' via factory method to bean named 'backendIdConverterRegistry'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'entityLinks' via factory method to bean named 'repositoryRestConfiguration'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'selfLinkProvider' via factory method to bean named 'persistentEntities'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'selfLinkProvider' via factory method to bean named 'entityLinks'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'mvcConversionService'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'mvcResourceUrlProvider'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@723ada59'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcConversionService'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'welcomePageNotAcceptableHandlerMapping'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'welcomePageNotAcceptableHandlerMapping' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@723ada59'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'welcomePageNotAcceptableHandlerMapping' via factory method to bean named 'mvcConversionService'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'welcomePageNotAcceptableHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'localeResolver'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'themeResolver'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'flashMapManager'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'mvcValidator'
2024-07-22 14:08:50 DEBUG OptionalValidatorFactoryBean:42 - Failed to set up a Bean Validation provider
jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
	at jakarta.validation.Validation$GenericBootstrapImpl.configure(Validation.java:291)
	at org.springframework.validation.beanvalidation.LocalValidatorFactoryBean.afterPropertiesSet(LocalValidatorFactoryBean.java:270)
	at org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean.afterPropertiesSet(OptionalValidatorFactoryBean.java:39)
	at org.springframework.boot.autoconfigure.validation.ValidatorAdapter.afterPropertiesSet(ValidatorAdapter.java:85)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1833)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:959)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.dwh.Main.main(Main.java:14)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'mvcContentNegotiationManager'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'requestMappingHandlerMapping'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcConversionService'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2024-07-22 14:08:50 DEBUG Mappings:294 - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
	{ [/error]}: error(HttpServletRequest)
2024-07-22 14:08:50 DEBUG RequestMappingHandlerMapping:366 - 2 mappings in 'requestMappingHandlerMapping'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'mvcPatternParser'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'mvcUrlPathHelper'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'mvcPathMatcher'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'viewControllerHandlerMapping'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcConversionService'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'beanNameHandlerMapping'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcConversionService'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2024-07-22 14:08:50 DEBUG Mappings:86 - 'beanNameHandlerMapping' {}
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'routerFunctionMapping'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcConversionService'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcResourceUrlProvider'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'messageConverters'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'stringHttpMessageConverter'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'stringHttpMessageConverter' via factory method to bean named 'environment'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'mappingJackson2HttpMessageConverter'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'mappingJackson2HttpMessageConverter' via factory method to bean named 'jacksonObjectMapper'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'jacksonHttpMessageConverter'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'jacksonHttpMessageConverter' via factory method to bean named 'repositoryRestConfiguration'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'linkCollector'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'selfLinkProvider'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'linkCollector' via factory method to bean named 'persistentEntities'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'linkCollector' via factory method to bean named 'selfLinkProvider'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'linkCollector' via factory method to bean named 'associationLinks'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'excerptProjector'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'excerptProjector' via factory method to bean named 'resourceMappings'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'representationModelProcessorInvoker'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'profileResourceProcessor'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'profileResourceProcessor' via factory method to bean named 'repositoryRestConfiguration'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'representationModelProcessorInvoker' via factory method to bean named 'profileResourceProcessor'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'halJacksonHttpMessageConverter'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'halJacksonHttpMessageConverter' via factory method to bean named 'linkCollector'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'halJacksonHttpMessageConverter' via factory method to bean named 'repositoryRestConfiguration'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'halFormsJacksonHttpMessageConverter'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'halFormsJacksonHttpMessageConverter' via factory method to bean named 'linkCollector'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'uriListHttpMessageConverter'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'alpsJsonHttpMessageConverter'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'alpsConverter'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'enumTranslator'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'enumTranslator' via factory method to bean named 'messageResolver'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'alpsConverter' via factory method to bean named 'repositories'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'alpsConverter' via factory method to bean named 'persistentEntities'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'alpsConverter' via factory method to bean named 'entityLinks'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'alpsConverter' via factory method to bean named 'enumTranslator'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'alpsConverter' via factory method to bean named 'associationLinks'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'alpsConverter' via factory method to bean named 'repositoryRestConfiguration'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'alpsJsonHttpMessageConverter' via factory method to bean named 'alpsConverter'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'resourceHandlerMapping'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcConversionService'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2024-07-22 14:08:50 DEBUG Mappings:176 - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'defaultServletHandlerMapping'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'requestMappingHandlerAdapter'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'sortResolver'
2024-07-22 14:08:50 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'pageableResolver'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'pagedResourcesAssemblerArgumentResolver'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'slicedResourcesAssemblerArgumentResolver'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'applicationTaskExecutor'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'applicationTaskExecutor' via factory method to bean named 'taskExecutorBuilder'
2024-07-22 14:08:51 DEBUG ThreadPoolTaskExecutor:264 - Initializing ExecutorService 'applicationTaskExecutor'
2024-07-22 14:08:51 DEBUG RequestMappingHandlerAdapter:634 - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'handlerFunctionAdapter'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'mvcUriComponentsContributor'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'mvcConversionService'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'requestMappingHandlerAdapter'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'httpRequestHandlerAdapter'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'simpleControllerHandlerAdapter'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'handlerExceptionResolver'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'handlerExceptionResolver' via factory method to bean named 'mvcContentNegotiationManager'
2024-07-22 14:08:51 DEBUG ExceptionHandlerExceptionResolver:305 - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'persistentEntityArgumentResolver'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'defaultMessageConverters'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'defaultMessageConverters' via factory method to bean named 'jacksonHttpMessageConverter'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'defaultMessageConverters' via factory method to bean named 'halJacksonHttpMessageConverter'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'defaultMessageConverters' via factory method to bean named 'halFormsJacksonHttpMessageConverter'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'defaultMessageConverters' via factory method to bean named 'alpsJsonHttpMessageConverter'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'defaultMessageConverters' via factory method to bean named 'uriListHttpMessageConverter'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'defaultMessageConverters' via factory method to bean named 'repositoryRestConfiguration'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'repoRequestArgumentResolver'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'resourceMetadataHandlerMethodArgumentResolver'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'baseUri'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'baseUri' via factory method to bean named 'repositoryRestConfiguration'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'resourceMetadataHandlerMethodArgumentResolver' via factory method to bean named 'repositories'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'resourceMetadataHandlerMethodArgumentResolver' via factory method to bean named 'resourceMappings'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'resourceMetadataHandlerMethodArgumentResolver' via factory method to bean named 'baseUri'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'repoRequestArgumentResolver' via factory method to bean named 'repositories'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'repoRequestArgumentResolver' via factory method to bean named 'resourceMetadataHandlerMethodArgumentResolver'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'repoRequestArgumentResolver' via factory method to bean named 'repositoryInvokerFactory'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'backendIdHandlerMethodArgumentResolver'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'backendIdHandlerMethodArgumentResolver' via factory method to bean named 'backendIdConverterRegistry'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'backendIdHandlerMethodArgumentResolver' via factory method to bean named 'resourceMetadataHandlerMethodArgumentResolver'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'backendIdHandlerMethodArgumentResolver' via factory method to bean named 'baseUri'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'persistentEntityArgumentResolver' via factory method to bean named 'defaultMessageConverters'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'persistentEntityArgumentResolver' via factory method to bean named 'repoRequestArgumentResolver'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'persistentEntityArgumentResolver' via factory method to bean named 'associationLinks'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'persistentEntityArgumentResolver' via factory method to bean named 'backendIdHandlerMethodArgumentResolver'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'persistentEntityArgumentResolver' via factory method to bean named 'persistentEntities'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'persistentEntityResourceAssemblerArgumentResolver'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'representationModelAssemblersArgumentResolver'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'pagedResourcesAssembler'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'slicedResourcesAssembler'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'representationModelAssemblersArgumentResolver' via factory method to bean named 'pagedResourcesAssembler'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'representationModelAssemblersArgumentResolver' via factory method to bean named 'slicedResourcesAssembler'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'representationModelAssemblersArgumentResolver' via factory method to bean named 'persistentEntityResourceAssemblerArgumentResolver'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'eTagArgumentResolver'
2024-07-22 14:08:51 DEBUG ExceptionHandlerExceptionResolver:305 - ControllerAdvice beans: 1 @ExceptionHandler, 0 ResponseBodyAdvice
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'mvcViewResolver'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'mvcViewResolver' via factory method to bean named 'mvcContentNegotiationManager'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'viewNameTranslator'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'defaultViewResolver'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'viewResolver'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'viewResolver' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@2c565212'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'viewResolver'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'applicationAvailability'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari' via constructor to bean named 'dataSource'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizationAutoConfiguration'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'platformTransactionManagerCustomizers'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'transactionExecutionListeners'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$PersistenceManagedTypesConfiguration'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'transactionManager'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'lifecycleProcessor'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'lifecycleProcessor' via factory method to bean named 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.data.jpa.util.JpaMetamodelCacheCleanup'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.data.jpa.repository.support.JpaEvaluationContextExtension'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'data-jpa.repository-aot-processor#0'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'halLinkDisocoverer'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'halFormsLinkDiscoverer'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'halFormsTemplatePropertyWriter'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'defaultRelProvider'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'annotationRelProvider'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'linkDiscoverers'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'linkDiscovererRegistry'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'linkDiscoverers' via factory method to bean named 'linkDiscovererRegistry'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.hateoas.config.WebMvcEntityLinksConfiguration'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'webMvcEntityLinks'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'webMvcLinkBuilderFactory'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'entityLinksPluginRegistry'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'entityLinksPluginRegistry' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@723ada59'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'delegatingEntityLinks'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'delegatingEntityLinks' via factory method to bean named 'entityLinksPluginRegistry'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.hateoas.config.RestTemplateHateoasConfiguration'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.data.rest.webmvc.RestControllerConfiguration'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'org.springframework.data.rest.webmvc.RestControllerConfiguration' via constructor to bean named 'repositoryRestConfiguration'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'org.springframework.data.rest.webmvc.RestControllerConfiguration' via constructor to bean named 'resourceMappings'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'org.springframework.data.rest.webmvc.RestControllerConfiguration' via constructor to bean named 'repositories'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'org.springframework.data.rest.webmvc.RestControllerConfiguration' via constructor to bean named 'entityLinks'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'repositoryController'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'repositoryEntityController'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'httpHeadersPreparer'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'auditableBeanWrapperFactory'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'auditableBeanWrapperFactory' via factory method to bean named 'persistentEntities'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'httpHeadersPreparer' via factory method to bean named 'auditableBeanWrapperFactory'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'repositoryEntityController' via factory method to bean named 'httpHeadersPreparer'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'repositoryPropertyReferenceController'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'repositoryPropertyReferenceController' via factory method to bean named 'repositoryInvokerFactory'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'repositorySearchController'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'repositorySearchController' via factory method to bean named 'httpHeadersPreparer'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'repositorySchemaController'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'jsonSchemaConverter'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'repositorySchemaController' via factory method to bean named 'jsonSchemaConverter'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'alpsController'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'profileController'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'repositoryRelProvider'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'defaultConversionService'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'defaultConversionService' via factory method to bean named 'persistentEntities'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'defaultConversionService' via factory method to bean named 'repositoryInvokerFactory'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'validatingRepositoryEventListener'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'jpaHelper'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'metadataConfiguration'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'repositoryExporterHandlerAdapter'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'repositoryExporterHandlerAdapter' via factory method to bean named 'defaultMessageConverters'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'repositoryExporterHandlerAdapter' via factory method to bean named 'alpsJsonHttpMessageConverter'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'repositoryExporterHandlerAdapter' via factory method to bean named 'selfLinkProvider'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'repositoryExporterHandlerAdapter' via factory method to bean named 'persistentEntityArgumentResolver'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'repositoryExporterHandlerAdapter' via factory method to bean named 'persistentEntityResourceAssemblerArgumentResolver'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'repositoryExporterHandlerAdapter' via factory method to bean named 'repoRequestArgumentResolver'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'repositoryExporterHandlerAdapter' via factory method to bean named 'repositoryRestConfiguration'
2024-07-22 14:08:51 DEBUG RepositoryRestHandlerAdapter:634 - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 0 RequestBodyAdvice, 2 ResponseBodyAdvice
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'restHandlerMapping'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'restHandlerMapping' via factory method to bean named 'repositories'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'restHandlerMapping' via factory method to bean named 'resourceMappings'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'restHandlerMapping' via factory method to bean named 'repositoryRestConfiguration'
2024-07-22 14:08:51 DEBUG Mappings:294 - 
	o.s.d.r.w.RepositoryController:
	{OPTIONS [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForRepositories()
	{HEAD [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForRepositories()
	{GET [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listRepositories()
2024-07-22 14:08:51 DEBUG Mappings:294 - 
	o.s.d.r.w.RepositoryEntityController:
	{GET [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getCollectionResource(RootResourceInformation,DefaultedPageable,Sort,RepresentationModelAssemblers)
	{GET [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler,HttpHeaders)
	{OPTIONS [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForCollectionResource(RootResourceInformation)
	{HEAD [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headCollectionResource(RootResourceInformation,DefaultedPageable)
	{GET [/{repository}], produces [application/x-spring-data-compact+json || text/uri-list]}: getCollectionResourceCompact(RootResourceInformation,DefaultedPageable,Sort,RepresentationModelAssemblers)
	{POST [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: postCollectionResource(RootResourceInformation,PersistentEntityResource,PersistentEntityResourceAssembler,String)
	{OPTIONS [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForItemResource(RootResourceInformation)
	{HEAD [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler)
	{PUT [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: putItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{PATCH [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: patchItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{DELETE [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deleteItemResource(RootResourceInformation,Serializable,ETag,PersistentEntityResourceAssembler,String)
2024-07-22 14:08:51 DEBUG Mappings:294 - 
	o.s.d.r.w.RepositoryPropertyReferenceController:
	{GET [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,String,RepresentationModelAssemblers)
	{GET [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,RepresentationModelAssemblers)
	{DELETE [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReference(RootResourceInformation,Serializable,String)
	{GET [/{repository}/{id}/{property}], produces [text/uri-list]}: followPropertyReferenceCompact(RootResourceInformation,Serializable,String,HttpHeaders,RepresentationModelAssemblers)
	{[PATCH, PUT, POST] [/{repository}/{id}/{property}], consumes [application/json || application/x-spring-data-compact+json || text/uri-list], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: createPropertyReference(RootResourceInformation,HttpMethod,CollectionModel,Serializable,String)
	{DELETE [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReferenceId(RootResourceInformation,Serializable,String,String)
2024-07-22 14:08:51 DEBUG Mappings:294 - 
	o.s.d.r.w.RepositorySearchController:
	{OPTIONS [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearches(RootResourceInformation)
	{HEAD [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearches(RootResourceInformation)
	{GET [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listSearches(RootResourceInformation)
	{GET [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: executeSearch(RootResourceInformation,MultiValueMap,String,DefaultedPageable,Sort,HttpHeaders,RepresentationModelAssemblers)
	{GET [/{repository}/search/{search}], produces [application/x-spring-data-compact+json]}: executeSearchCompact(RootResourceInformation,HttpHeaders,MultiValueMap,String,String,DefaultedPageable,Sort,RepresentationModelAssemblers)
	{OPTIONS [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearch(RootResourceInformation,String)
	{HEAD [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearch(RootResourceInformation,String)
2024-07-22 14:08:51 DEBUG RepositoryRestHandlerMapping:366 - 27 mappings in org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping
2024-07-22 14:08:51 DEBUG Mappings:294 - 
	o.s.d.r.w.RepositorySchemaController:
	{GET [/profile/{repository}], produces [application/schema+json]}: schema(RootResourceInformation)
2024-07-22 14:08:51 DEBUG Mappings:294 - 
	o.s.d.r.w.a.AlpsController:
	{OPTIONS [/profile/{repository}], produces [application/alps+json]}: alpsOptions()
	{GET [/profile/{repository}], produces [application/alps+json || */*]}: descriptor(RootResourceInformation)
2024-07-22 14:08:51 DEBUG Mappings:294 - 
	o.s.d.r.w.ProfileController:
	{OPTIONS [/profile]}: profileOptions()
	{GET [/profile]}: listAllFormsOfMetadata()
2024-07-22 14:08:51 DEBUG BasePathAwareHandlerMapping:366 - 5 mappings in org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'repositoryRestExceptionHandler'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'offsetResolver'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'spring.hateoas-org.springframework.boot.autoconfigure.hateoas.HateoasProperties'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration' via constructor to bean named 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'jdbcTemplate'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'dataSource'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'namedParameterJdbcTemplate'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'namedParameterJdbcTemplate' via factory method to bean named 'jdbcTemplate'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcClientAutoConfiguration'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'jdbcClient'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'jdbcClient' via factory method to bean named 'namedParameterJdbcTemplate'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$ThreadPoolTaskSchedulerBuilderConfiguration'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'threadPoolTaskSchedulerBuilder'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'threadPoolTaskSchedulerBuilder' via factory method to bean named 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$TaskSchedulerBuilderConfiguration'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'taskSchedulerBuilder'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'taskSchedulerBuilder' via factory method to bean named 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$SimpleAsyncTaskSchedulerBuilderConfiguration'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$SimpleAsyncTaskSchedulerBuilderConfiguration' via constructor to bean named 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'simpleAsyncTaskSchedulerBuilder'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'transactionTemplate'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'transactionTemplate' via factory method to bean named 'transactionManager'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.client.RestClientAutoConfiguration'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'httpMessageConvertersRestClientCustomizer'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'restClientSsl'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'restClientSsl' via factory method to bean named 'sslBundleRegistry'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'restClientBuilderConfigurer'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'multipartResolver'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartConfiguration'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartConfiguration' via constructor to bean named 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'restartingClassPathChangedEventListener'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'fileSystemWatcherFactory'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'restartingClassPathChangedEventListener' via factory method to bean named 'fileSystemWatcherFactory'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'classPathFileSystemWatcher'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'classPathRestartStrategy'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'classPathFileSystemWatcher' via factory method to bean named 'fileSystemWatcherFactory'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'classPathFileSystemWatcher' via factory method to bean named 'classPathRestartStrategy'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'conditionEvaluationDeltaLoggingListener'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$LiveReloadConfiguration'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'optionalLiveReloadServer'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'liveReloadServer' via factory method to bean named 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'optionalLiveReloadServer' via factory method to bean named 'liveReloadServer'
2024-07-22 14:08:51 DEBUG LiveReloadServer:113 - Starting live reload server on port 35729
2024-07-22 14:08:51 INFO  OptionalLiveReloadServer:59 - LiveReload server is running on port 35729
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'liveReloadServerEventListener'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:948 - Autowiring by type from bean name 'liveReloadServerEventListener' via factory method to bean named 'optionalLiveReloadServer'
2024-07-22 14:08:51 DEBUG DefaultListableBeanFactory:225 - Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration'
2024-07-22 14:08:51 DEBUG EventListenerMethodProcessor:202 - 1 @EventListener methods processed on bean 'runAfterStartup': {public void org.dwh.wokrer.RunAfterStartup.runAfterStartup() throws java.net.MalformedURLException=@org.springframework.context.event.EventListener(classes={org.springframework.boot.context.event.ApplicationReadyEvent.class}, condition="", id="", value={org.springframework.boot.context.event.ApplicationReadyEvent.class})}
2024-07-22 14:08:51 DEBUG DefaultLifecycleProcessor:468 - Starting beans in phase -2147483647
2024-07-22 14:08:51 DEBUG DefaultLifecycleProcessor:294 - Successfully started bean 'springBootLoggingLifecycle'
2024-07-22 14:08:51 DEBUG DefaultLifecycleProcessor:468 - Starting beans in phase 2147481599
2024-07-22 14:08:51 INFO  TomcatWebServer:241 - Tomcat started on port 8080 (http) with context path ''
2024-07-22 14:08:51 DEBUG DefaultLifecycleProcessor:294 - Successfully started bean 'webServerStartStop'
2024-07-22 14:08:51 DEBUG DefaultLifecycleProcessor:468 - Starting beans in phase 2147482623
2024-07-22 14:08:51 DEBUG DefaultLifecycleProcessor:294 - Successfully started bean 'webServerGracefulShutdown'
2024-07-22 14:08:51 DEBUG DefaultLifecycleProcessor:468 - Starting beans in phase 2147483647
2024-07-22 14:08:51 DEBUG ConditionEvaluationReportLogger:72 - 


============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   AopAutoConfiguration matched:
      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration matched:
      - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   ApplicationAvailabilityAutoConfiguration#applicationAvailability matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.availability.ApplicationAvailability; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)
      - @ConditionalOnMissingBean (types: io.r2dbc.spi.ConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration matched:
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.PooledDataSourceAvailable PooledDataSource found supported DataSource; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.ExplicitType @ConditionalOnProperty (spring.datasource.type) did not find property 'type' (DataSourceAutoConfiguration.PooledDataSourceCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource,javax.sql.XADataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration#jdbcConnectionDetails matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.jdbc.JdbcConnectionDetails; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnProperty (spring.datasource.type=com.zaxxer.hikari.HikariDataSource) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceInitializationConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jdbc.datasource.init.DatabasePopulator' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer,org.springframework.boot.autoconfigure.sql.init.SqlR2dbcScriptDatabaseInitializer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceJmxConfiguration matched:
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   DataSourceJmxConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DataSourcePoolMetadataProvidersConfiguration.HikariPoolDataSourceMetadataProviderConfiguration matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.transaction.TransactionManager' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DevToolsDataSourceAutoConfiguration matched:
      - Devtools devtools enabled. (OnEnabledDevToolsCondition)
      - DevTools DataSource Condition found auto-configured DataSource (DevToolsDataSourceAutoConfiguration.DevToolsDataSourceCondition)

   DevToolsDataSourceAutoConfiguration.DatabaseShutdownExecutorEntityManagerFactoryDependsOnPostProcessor matched:
      - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.orm.jpa.AbstractEntityManagerFactoryBean; SearchStrategy: all) found bean '&entityManagerFactory' (OnBeanCondition)

   DispatcherServletAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRegistration' (OnClassCondition)
      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRegistration' (OnClassCondition)
      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:
      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnWarDeployment the application is not deployed as a WAR file. (OnWarDeploymentCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   ErrorMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ErrorMvcAutoConfiguration#basicErrorController matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration#errorAttributes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:
      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)
      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:
      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GenericCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)

   HibernateJpaAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean', 'jakarta.persistence.EntityManager', 'org.hibernate.engine.spi.SessionImplementor' (OnClassCondition)

   HibernateJpaConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   HttpEncodingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (server.servlet.encoding.enabled) matched (OnPropertyCondition)

   HttpEncodingAutoConfiguration#characterEncodingFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)

   HttpMessageConvertersAutoConfiguration#messageConverters matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HypermediaAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.hateoas.EntityModel', 'org.springframework.web.bind.annotation.RequestMapping', 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter', 'org.springframework.plugin.core.Plugin' (OnClassCondition)
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   HypermediaAutoConfiguration#applicationJsonHalConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnProperty (spring.hateoas.use-hal-as-default-json-media-type) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.hateoas.mediatype.hal.HalConfiguration; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jackson) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter,org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcClientAutoConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate; SearchStrategy: all) found a single bean 'namedParameterJdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.simple.JdbcClient; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   JdbcTemplateConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.jdbc.core.JdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,jakarta.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactoryBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#jpaVendorAdapter matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.JpaVendorAdapter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#transactionManager matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.JpaWebConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.jpa.open-in-view=true) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor,org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.PersistenceManagedTypesConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,jakarta.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.PersistenceManagedTypesConfiguration#persistenceManagedTypes matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.persistenceunit.PersistenceManagedTypes; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaRepositoriesAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)
      - @ConditionalOnProperty (spring.data.jpa.repositories.enabled=true) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean,org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JtaAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.transaction.Transaction' (OnClassCondition)
      - @ConditionalOnProperty (spring.jta.enabled) matched (OnPropertyCondition)

   LifecycleAutoConfiguration#defaultLifecycleProcessor matched:
      - @ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration matched:
      - Initialized Restarter Condition available and initialized (OnInitializedRestarterCondition)

   LocalDevToolsAutoConfiguration.LiveReloadConfiguration matched:
      - @ConditionalOnProperty (spring.devtools.livereload.enabled) matched (OnPropertyCondition)

   LocalDevToolsAutoConfiguration.LiveReloadConfiguration#liveReloadServer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.livereload.LiveReloadServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration matched:
      - @ConditionalOnProperty (spring.devtools.restart.enabled) matched (OnPropertyCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#classPathFileSystemWatcher matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.classpath.ClassPathFileSystemWatcher; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#classPathRestartStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.classpath.ClassPathRestartStrategy; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#conditionEvaluationDeltaLoggingListener matched:
      - @ConditionalOnProperty (spring.devtools.restart.log-condition-evaluation-delta) matched (OnPropertyCondition)

   MultipartAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'jakarta.servlet.MultipartConfigElement' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.servlet.multipart.enabled) matched (OnPropertyCondition)

   MultipartAutoConfiguration#multipartConfigElement matched:
      - @ConditionalOnMissingBean (types: jakarta.servlet.MultipartConfigElement; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration#multipartResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NamedParameterJdbcTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.JdbcTemplate; SearchStrategy: all) found a single bean 'jdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NoOpCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)

   PersistenceExceptionTranslationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor matched:
      - @ConditionalOnProperty (spring.dao.exceptiontranslation.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)

   RepositoryRestMvcAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestClient' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (NotReactiveWebApplicationCondition)

   RestClientAutoConfiguration#httpMessageConvertersRestClientCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.HttpMessageConvertersRestClientCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration#restClientBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.client.RestClient$Builder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration#restClientBuilderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestClientBuilderConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration#restClientSsl matched:
      - @ConditionalOnBean (types: org.springframework.boot.ssl.SslBundles; SearchStrategy: all) found bean 'sslBundleRegistry'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestClientSsl; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (NotReactiveWebApplicationCondition)

   RestTemplateAutoConfiguration#restTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ServletWebServerFactoryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRequest' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:
      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedTomcat matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)

   SimpleCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)

   SqlInitializationAutoConfiguration matched:
      - @ConditionalOnProperty (spring.sql.init.enabled) matched (OnPropertyCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on SqlInitializationAutoConfiguration.SqlInitializationModeCondition.ModeIsNever @ConditionalOnProperty (spring.sql.init.mode=never) did not find property 'mode' (SqlInitializationAutoConfiguration.SqlInitializationModeCondition)

   SslAutoConfiguration#sslBundleRegistry matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.ssl.SslBundleRegistry,org.springframework.boot.ssl.SslBundles; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)

   TaskExecutorConfigurations.SimpleAsyncTaskExecutorBuilderConfiguration#simpleAsyncTaskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskExecutorConfigurations.TaskExecutorBuilderConfiguration#taskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration matched:
      - @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration#applicationTaskExecutor matched:
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskExecutorConfigurations.ThreadPoolTaskExecutorBuilderConfiguration#threadPoolTaskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder,org.springframework.boot.task.ThreadPoolTaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)

   TaskSchedulingConfigurations.SimpleAsyncTaskSchedulerBuilderConfiguration#simpleAsyncTaskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskSchedulingConfigurations.TaskSchedulerBuilderConfiguration#taskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingConfigurations.ThreadPoolTaskSchedulerBuilderConfiguration#threadPoolTaskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder,org.springframework.boot.task.ThreadPoolTaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found bean 'transactionManager'; @ConditionalOnMissingBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found a single bean 'transactionManager' (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration#transactionTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.support.TransactionOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionManagerCustomizationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionManagerCustomizationAutoConfiguration#platformTransactionManagerCustomizers matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration#formContentFilter matched:
      - @ConditionalOnProperty (spring.mvc.formcontent.filter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.FormContentFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#flashMapManager matched:
      - @ConditionalOnMissingBean (names: flashMapManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#localeResolver matched:
      - @ConditionalOnMissingBean (names: localeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#themeResolver matched:
      - @ConditionalOnMissingBean (names: themeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration matched:
      - @ConditionalOnEnabledResourceChain found class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#defaultViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.InternalResourceViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#requestContextFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.context.request.RequestContextListener,org.springframework.web.filter.RequestContextFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#viewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.ViewResolver; SearchStrategy: all) found beans 'defaultViewResolver', 'beanNameViewResolver', 'mvcViewResolver'; @ConditionalOnMissingBean (names: viewResolver types: org.springframework.web.servlet.view.ContentNegotiatingViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebSocketServletAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'jakarta.websocket.server.ServerContainer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:
      - @ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   ActiveMQAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   AopAutoConfiguration.ClassProxyingConfiguration:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)

   ArtemisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)

   BatchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)

   Cache2kCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.cache2k.Cache2kBuilder' (OnClassCondition)

   CacheAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cache.interceptor.CacheAspectSupport; SearchStrategy: all) did not find any beans of type org.springframework.cache.interceptor.CacheAspectSupport (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)

   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)

   CaffeineCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   CassandraAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)

   CassandraRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   ClientHttpConnectorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CodecsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CouchbaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   DataSourceAutoConfiguration.EmbeddedDatabaseConfiguration:
      Did not match:
         - EmbeddedDataSource spring.datasource.url is set (DataSourceAutoConfiguration.EmbeddedDatabaseCondition)

   DataSourceCheckpointRestoreConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.crac.Resource' (OnClassCondition)

   DataSourceConfiguration.Dbcp2:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourceConfiguration.Generic:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.type) did not find property 'spring.datasource.type' (OnPropertyCondition)

   DataSourceConfiguration.OracleUcp:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSourceImpl', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourceConfiguration.Tomcat:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceJmxConfiguration.TomcatDataSourceJmxConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSourceProxy' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.CommonsDbcp2PoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.OracleUcpPoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSource', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.TomcatDataSourcePoolMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration#transactionManager:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found beans of type 'org.springframework.transaction.TransactionManager' transactionManager (OnBeanCondition)

   DevToolsR2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)

   ElasticsearchClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'co.elastic.clients.elasticsearch.ElasticsearchClient' (OnClassCondition)

   ElasticsearchDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.elc.ElasticsearchTemplate' (OnClassCondition)

   ElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.repository.ElasticsearchRepository' (OnClassCondition)

   ElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClientBuilder' (OnClassCondition)

   EmbeddedLdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.ee10.webapp.WebAppContext' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration#tomcatVirtualThreadsProtocolHandlerCustomizer:
      Did not match:
         - @ConditionalOnThreading did not find VIRTUAL (OnThreadingCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   ErrorWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   FlywayAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FreeMarkerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'freemarker.template.Configuration' (OnClassCondition)

   GraphQlAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.querydsl.core.Query' (OnClassCondition)

   GraphQlRSocketAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.querydsl.core.Query' (OnClassCondition)

   GraphQlWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GroovyTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)

   GsonAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   GsonHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   H2ConsoleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.h2.server.web.JakartaWebServlet' (OnClassCondition)

   HazelcastAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastJpaDependencyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HttpHandlerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   HypermediaAutoConfiguration.HypermediaConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.hateoas.client.LinkDiscoverers; SearchStrategy: all) found beans of type 'org.springframework.hateoas.client.LinkDiscoverers' linkDiscoverers (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   InfinispanCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)

   InfluxDbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   IntegrationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)

   JCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)

   JdbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)

   JerseyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)

   JmsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.Message' (OnClassCondition)

   JmxAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.jmx.enabled=true) did not find property 'enabled' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)

   JndiConnectionFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)

   JndiDataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.jndi-name) did not find property 'jndi-name' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   JndiJtaConfiguration:
      Did not match:
         - @ConditionalOnJndi JNDI environment is not available (OnJndiCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.transaction.jta.JtaTransactionManager' (OnClassCondition)

   JooqAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)

   JpaRepositoriesAutoConfiguration#entityManagerFactoryBootstrapExecutorCustomizer:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.LazyBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=lazy) did not find property 'bootstrap-mode'; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.DeferredBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=deferred) did not find property 'bootstrap-mode' (JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition)

   JsonbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.json.bind.Jsonb' (OnClassCondition)

   JsonbHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.json.bind.Jsonb' (OnClassCondition)

   KafkaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)

   LdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)

   LdapRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)

   LiquibaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)

   MailSenderAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.mail.internet.MimeMessage' (OnClassCondition)

   MailSenderValidatorAutoConfiguration:
      Did not match:
         - @ConditionalOnSingleCandidate did not find required type 'org.springframework.mail.javamail.JavaMailSenderImpl' (OnBeanCondition)

   MessageSourceAutoConfiguration:
      Did not match:
         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)

   MongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MustacheAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)

   Neo4jAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   NettyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.util.NettyRuntime' (OnClassCondition)

   OAuth2AuthorizationServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.authorization.OAuth2Authorization' (OnClassCondition)

   OAuth2AuthorizationServerJwtAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.authorization.OAuth2Authorization' (OnClassCondition)

   OAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)

   OAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.resource.authentication.BearerTokenAuthenticationToken' (OnClassCondition)

   ProjectInfoAutoConfiguration#buildProperties:
      Did not match:
         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)

   ProjectInfoAutoConfiguration#gitProperties:
      Did not match:
         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)

   PulsarAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.pulsar.client.api.PulsarClient' (OnClassCondition)

   PulsarReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.pulsar.client.api.PulsarClient' (OnClassCondition)

   QuartzAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   R2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.R2dbcEntityTemplate' (OnClassCondition)

   R2dbcInitializationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.r2dbc.spi.ConnectionFactory', 'org.springframework.r2dbc.connection.init.DatabasePopulator' (OnClassCondition)

   R2dbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.r2dbc.connection.R2dbcTransactionManager' (OnClassCondition)

   RSocketGraphQlClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   RSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketRequesterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)

   RSocketServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer' (OnClassCondition)

   RSocketStrategiesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.buffer.PooledByteBufAllocator' (OnClassCondition)

   RabbitAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)

   ReactiveElasticsearchClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'co.elastic.clients.transport.ElasticsearchTransport' (OnClassCondition)

   ReactiveElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.elc.ReactiveElasticsearchClient' (OnClassCondition)

   ReactiveMultipartAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   ReactiveOAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveOAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveUserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)

   ReactiveWebServerFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Hooks' (OnClassCondition)

   RedisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)

   RedisCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)

   RedisReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)

   RemoteDevToolsAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.devtools.remote.secret) did not find property 'secret' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'jakarta.servlet.Filter', 'org.springframework.http.server.ServerHttpRequest' (OnClassCondition)

   Saml2RelyingPartyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)

   SecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)

   SecurityFilterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)

   SendGridAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)

   ServletWebServerFactoryAutoConfiguration.ForwardedHeaderFilterConfiguration:
      Did not match:
         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)

   ServletWebServerFactoryConfiguration.EmbeddedJetty:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.ee10.webapp.WebAppContext' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedUndertow:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   SessionAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)

   SpringApplicationAdminJmxAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.application.admin.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   SpringDataWebAutoConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.data.web.PageableHandlerMethodArgumentResolver; SearchStrategy: all) found beans of type 'org.springframework.data.web.PageableHandlerMethodArgumentResolver' pageableResolver (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'org.springframework.data.web.PageableHandlerMethodArgumentResolver', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
         - found 'session' scope (OnWebApplicationCondition)

   TaskExecutorConfigurations.SimpleAsyncTaskExecutorBuilderConfiguration#simpleAsyncTaskExecutorBuilderVirtualThreads:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder; SearchStrategy: all) found beans of type 'org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder' simpleAsyncTaskExecutorBuilder (OnBeanCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration#applicationTaskExecutorVirtualThreads:
      Did not match:
         - @ConditionalOnThreading did not find VIRTUAL (OnThreadingCondition)

   TaskSchedulingAutoConfiguration#scheduledBeanLazyInitializationExcludeFilter:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   TaskSchedulingConfigurations.SimpleAsyncTaskSchedulerBuilderConfiguration#simpleAsyncTaskSchedulerBuilderVirtualThreads:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder; SearchStrategy: all) found beans of type 'org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder' simpleAsyncTaskSchedulerBuilder (OnBeanCondition)

   TaskSchedulingConfigurations.TaskSchedulerConfiguration:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   ThymeleafAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.thymeleaf.spring6.SpringTemplateEngine' (OnClassCondition)

   TransactionAutoConfiguration#transactionalOperator:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.transaction.ReactiveTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.AspectJTransactionManagementConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.transaction.aspectj.AbstractTransactionAspect; SearchStrategy: all) did not find any beans of type org.springframework.transaction.aspectj.AbstractTransactionAspect (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)

   ValidationAutoConfiguration:
      Did not match:
         - @ConditionalOnResource did not find resource 'classpath:META-INF/services/jakarta.validation.spi.ValidationProvider' (OnResourceCondition)
      Matched:
         - @ConditionalOnClass found required class 'jakarta.validation.executable.ExecutableValidator' (OnClassCondition)

   WebClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   WebMvcAutoConfiguration#hiddenHttpMethodFilter:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.hiddenmethod.filter.enabled) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ProblemDetailsErrorHandlingConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.problemdetails.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#beanNameViewResolver:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.view.BeanNameViewResolver' beanNameViewResolver (OnBeanCondition)

   WebServiceTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.oxm.Marshaller' (OnClassCondition)

   WebServicesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)

   WebSessionIdResolverAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Mono' (OnClassCondition)

   WebSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)

   WebSocketReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.ee10.websocket.jakarta.server.config.JakartaWebSocketServletContainerInitializer' (OnClassCondition)

   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)

   XADataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.jdbc.XADataSourceWrapper; SearchStrategy: all) did not find any beans of type org.springframework.boot.jdbc.XADataSourceWrapper (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'jakarta.transaction.TransactionManager', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration

    org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration

    org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration

    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration

    org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration

    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration



2024-07-22 14:08:51 INFO  Main:56 - Started Main in 4.864 seconds (process running for 5.326)
2024-07-22 14:08:51 DEBUG ApplicationAvailabilityBean:77 - Application availability state LivenessState changed to CORRECT
2024-07-22 14:08:51 DEBUG Restarter:251 - Creating new Restarter for thread Thread[main,5,main]
2024-07-22 14:08:51 DEBUG Restarter:251 - Immediately restarting application
2024-07-22 14:08:51 DEBUG Restarter:251 - Starting application org.dwh.Main with URLs [file:/home/egor/git/Java/dwh2024/target/classes/]
2024-07-22 14:08:51 DEBUG RunAfterStartup:21 - This is a debug message
2024-07-22 14:08:51 INFO  RunAfterStartup:22 - This is an info message
2024-07-22 14:08:51 WARN  RunAfterStartup:23 - This is a warn message
2024-07-22 14:08:51 ERROR RunAfterStartup:24 - This is an error message
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(2106505287<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@67ea819b]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120822
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120822, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(2106505287<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230104, TICKER=IMOEX, VOL=12513772613, HIGH=2174.23, LOW=2157.18, TIME=0, id=120822, CLOSE=2172.68, PER=D, OPEN=2157.18}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(2106505287<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1054542528<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@66583b5e]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120823
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120823, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1054542528<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230105, TICKER=IMOEX, VOL=11572472226, HIGH=2179.56, LOW=2162.06, TIME=0, id=120823, CLOSE=2168.42, PER=D, OPEN=2171.54}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1054542528<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1042075296<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@71550c85]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120824
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120824, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1042075296<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230106, TICKER=IMOEX, VOL=9795860282, HIGH=2171.94, LOW=2154.16, TIME=0, id=120824, CLOSE=2156.67, PER=D, OPEN=2170.4}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1042075296<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1077468407<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@23adb845]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120825
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120825, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1077468407<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230107, TICKER=IMOEX, VOL=7629262703, HIGH=2160.08, LOW=2153.32, TIME=0, id=120825, CLOSE=2156.39, PER=D, OPEN=2157.32}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1077468407<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1057571600<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@2d7d3c0e]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120826
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120826, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1057571600<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230110, TICKER=IMOEX, VOL=18229374864, HIGH=2169.71, LOW=2162.01, TIME=0, id=120826, CLOSE=2163.5, PER=D, OPEN=2163.43}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1057571600<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1606034485<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@3bb8ef36]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120827
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120827, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1606034485<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230111, TICKER=IMOEX, VOL=14437502211, HIGH=2162.92, LOW=2145.14, TIME=0, id=120827, CLOSE=2159.51, PER=D, OPEN=2162.7}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1606034485<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(118694175<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@3c191fa8]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120828
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120828, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(118694175<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230112, TICKER=IMOEX, VOL=35199068295, HIGH=2190.4, LOW=2153.55, TIME=0, id=120828, CLOSE=2186.98, PER=D, OPEN=2156.28}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(118694175<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(77614986<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@6d11819d]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120829
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120829, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(77614986<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230113, TICKER=IMOEX, VOL=21247673022, HIGH=2194.8, LOW=2177.36, TIME=0, id=120829, CLOSE=2185.93, PER=D, OPEN=2193.53}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(77614986<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(910720634<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@40f24674]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120830
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120830, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(910720634<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230114, TICKER=IMOEX, VOL=27608131425, HIGH=2204.18, LOW=2179.82, TIME=0, id=120830, CLOSE=2199.94, PER=D, OPEN=2188.6}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(910720634<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(361247234<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@5b536976]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120831
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120831, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(361247234<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230117, TICKER=IMOEX, VOL=27004230302, HIGH=2224.9, LOW=2204.46, TIME=0, id=120831, CLOSE=2224.9, PER=D, OPEN=2204.64}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(361247234<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1819376075<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@796920b1]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120832
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120832, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1819376075<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230118, TICKER=IMOEX, VOL=31405275404, HIGH=2226.49, LOW=2196.84, TIME=0, id=120832, CLOSE=2196.84, PER=D, OPEN=2225.26}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1819376075<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1003711299<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@36c7e95f]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120833
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120833, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1003711299<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230119, TICKER=IMOEX, VOL=24354621288, HIGH=2206.66, LOW=2177.65, TIME=0, id=120833, CLOSE=2196.26, PER=D, OPEN=2188.9}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1003711299<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1375341895<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@18ffe476]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120834
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120834, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1375341895<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230120, TICKER=IMOEX, VOL=25527858714, HIGH=2193.93, LOW=2162.11, TIME=0, id=120834, CLOSE=2168.83, PER=D, OPEN=2190.02}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1375341895<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(97776757<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@13e7a46c]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120835
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120835, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(97776757<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230121, TICKER=IMOEX, VOL=18771183436, HIGH=2173.71, LOW=2154.37, TIME=0, id=120835, CLOSE=2166.69, PER=D, OPEN=2167.61}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(97776757<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(345727170<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@280e9cfc]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120836
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120836, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(345727170<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230124, TICKER=IMOEX, VOL=20458882720, HIGH=2186.85, LOW=2164.89, TIME=0, id=120836, CLOSE=2185.31, PER=D, OPEN=2167.92}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(345727170<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1608913887<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@4a3d56a1]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120837
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120837, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1608913887<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230125, TICKER=IMOEX, VOL=28998336156, HIGH=2199.29, LOW=2172.75, TIME=0, id=120837, CLOSE=2172.75, PER=D, OPEN=2191.64}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1608913887<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(41364323<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@4287995f]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120838
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120838, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(41364323<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230126, TICKER=IMOEX, VOL=22598835046, HIGH=2176.61, LOW=2160.76, TIME=0, id=120838, CLOSE=2170.15, PER=D, OPEN=2168.48}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(41364323<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(207500956<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@75ab30bb]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120839
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120839, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(207500956<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230127, TICKER=IMOEX, VOL=22688381374, HIGH=2183.77, LOW=2166.92, TIME=0, id=120839, CLOSE=2166.92, PER=D, OPEN=2181.96}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(207500956<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1216638070<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@74f69424]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120840
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120840, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1216638070<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230128, TICKER=IMOEX, VOL=22212005108, HIGH=2189.35, LOW=2167.33, TIME=0, id=120840, CLOSE=2189.35, PER=D, OPEN=2174.85}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1216638070<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1368132664<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@77dbcc]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120841
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120841, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1368132664<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230131, TICKER=IMOEX, VOL=25330739987, HIGH=2204.41, LOW=2189.12, TIME=0, id=120841, CLOSE=2204.41, PER=D, OPEN=2193.99}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1368132664<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1690074198<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@2f5e3045]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120842
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120842, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1690074198<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230201, TICKER=IMOEX, VOL=33453607956, HIGH=2225.6, LOW=2202.76, TIME=0, id=120842, CLOSE=2225.6, PER=D, OPEN=2203.57}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1690074198<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1132615075<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@7f3a431c]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120843
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120843, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1132615075<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230202, TICKER=IMOEX, VOL=39301388253, HIGH=2247.12, LOW=2224.95, TIME=0, id=120843, CLOSE=2230.15, PER=D, OPEN=2232.02}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1132615075<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(675892454<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@7a734b9e]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120844
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120844, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(675892454<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230203, TICKER=IMOEX, VOL=32801716728, HIGH=2249.56, LOW=2228.56, TIME=0, id=120844, CLOSE=2243.54, PER=D, OPEN=2243.04}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(675892454<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(209164426<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@118c5b2c]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120845
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120845, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(209164426<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230204, TICKER=IMOEX, VOL=43309276904, HIGH=2253.7, LOW=2216.63, TIME=0, id=120845, CLOSE=2248.3, PER=D, OPEN=2239.1}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(209164426<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1665342220<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@5052c7b2]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120846
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120846, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1665342220<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230207, TICKER=IMOEX, VOL=41996751982, HIGH=2276.5, LOW=2243.77, TIME=0, id=120846, CLOSE=2272.37, PER=D, OPEN=2245.93}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1665342220<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(29010276<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@5f6a911a]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120847
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120847, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(29010276<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230208, TICKER=IMOEX, VOL=41020470817, HIGH=2290.51, LOW=2262.3, TIME=0, id=120847, CLOSE=2267.69, PER=D, OPEN=2281.69}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(29010276<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1498426418<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@dca7c4f]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120848
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120848, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1498426418<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230209, TICKER=IMOEX, VOL=36339368570, HIGH=2283.49, LOW=2244.52, TIME=0, id=120848, CLOSE=2251.97, PER=D, OPEN=2273.59}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1498426418<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(71651501<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@16824825]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120849
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120849, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(71651501<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230210, TICKER=IMOEX, VOL=36676073920, HIGH=2269.96, LOW=2241.02, TIME=0, id=120849, CLOSE=2262.45, PER=D, OPEN=2258.97}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(71651501<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1060414980<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@13bb63aa]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120850
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120850, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1060414980<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230211, TICKER=IMOEX, VOL=20722191586, HIGH=2264.39, LOW=2249.62, TIME=0, id=120850, CLOSE=2261.58, PER=D, OPEN=2253.51}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1060414980<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1827335412<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@53a5e51]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120851
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120851, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1827335412<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230214, TICKER=IMOEX, VOL=18330885936, HIGH=2271.0, LOW=2261.37, TIME=0, id=120851, CLOSE=2264.27, PER=D, OPEN=2262.65}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1827335412<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1898786780<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@6ff88d6c]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120852
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120852, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1898786780<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230215, TICKER=IMOEX, VOL=31013851411, HIGH=2256.96, LOW=2225.94, TIME=0, id=120852, CLOSE=2232.23, PER=D, OPEN=2256.59}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1898786780<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(432206546<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@2dcd3ab4]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120853
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120853, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(432206546<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230216, TICKER=IMOEX, VOL=42696988341, HIGH=2216.69, LOW=2164.7, TIME=0, id=120853, CLOSE=2166.46, PER=D, OPEN=2216.69}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(432206546<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1068571713<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@73256eb8]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120854
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120854, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1068571713<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230217, TICKER=IMOEX, VOL=33114594123, HIGH=2186.64, LOW=2150.17, TIME=0, id=120854, CLOSE=2153.96, PER=D, OPEN=2169.39}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1068571713<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(2044748292<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@31e76be5]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120855
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120855, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(2044748292<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230218, TICKER=IMOEX, VOL=23600899785, HIGH=2180.96, LOW=2147.31, TIME=0, id=120855, CLOSE=2168.88, PER=D, OPEN=2157.5}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(2044748292<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1989591667<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@7e8d61e1]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120856
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120856, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1989591667<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230221, TICKER=IMOEX, VOL=31016215640, HIGH=2186.39, LOW=2140.78, TIME=0, id=120856, CLOSE=2183.57, PER=D, OPEN=2172.53}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1989591667<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(390278274<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@2fe85206]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120857
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120857, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(390278274<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230222, TICKER=IMOEX, VOL=49446562564, HIGH=2227.82, LOW=2184.51, TIME=0, id=120857, CLOSE=2212.42, PER=D, OPEN=2184.6}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(390278274<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(162804053<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@5ff77a5b]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120858
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120858, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(162804053<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230223, TICKER=IMOEX, VOL=20591028972, HIGH=2215.58, LOW=2194.99, TIME=0, id=120858, CLOSE=2212.4, PER=D, OPEN=2215.43}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(162804053<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(95574508<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@63580b7e]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120859
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120859, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(95574508<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230225, TICKER=IMOEX, VOL=18884075081, HIGH=2223.23, LOW=2202.25, TIME=0, id=120859, CLOSE=2208.03, PER=D, OPEN=2209.1}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(95574508<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1233497709<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@2559762f]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120860
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120860, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1233497709<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230228, TICKER=IMOEX, VOL=36413144034, HIGH=2241.1, LOW=2188.95, TIME=0, id=120860, CLOSE=2241.1, PER=D, OPEN=2194.39}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1233497709<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(950744010<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@13472b57]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120861
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120861, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(950744010<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230301, TICKER=IMOEX, VOL=37037934005, HIGH=2258.68, LOW=2239.59, TIME=0, id=120861, CLOSE=2253.16, PER=D, OPEN=2246.26}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(950744010<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(170833577<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@204fc4b3]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120862
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120862, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(170833577<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230302, TICKER=IMOEX, VOL=39998084854, HIGH=2287.48, LOW=2255.45, TIME=0, id=120862, CLOSE=2279.65, PER=D, OPEN=2258.89}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(170833577<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1759552995<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@42fd2fc9]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120863
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120863, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1759552995<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230303, TICKER=IMOEX, VOL=50700148754, HIGH=2286.27, LOW=2235.43, TIME=0, id=120863, CLOSE=2254.3, PER=D, OPEN=2284.87}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1759552995<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1778995657<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@105dee58]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120864
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120864, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1778995657<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230304, TICKER=IMOEX, VOL=26691515809, HIGH=2273.52, LOW=2249.81, TIME=0, id=120864, CLOSE=2272.2, PER=D, OPEN=2250.12}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1778995657<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1674577719<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@790ad649]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120865
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120865, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1674577719<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230307, TICKER=IMOEX, VOL=33805510005, HIGH=2297.86, LOW=2283.4, TIME=0, id=120865, CLOSE=2294.12, PER=D, OPEN=2286.2}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1674577719<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1064936754<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@2c04a7bf]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120866
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120866, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1064936754<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230308, TICKER=IMOEX, VOL=24577188303, HIGH=2298.93, LOW=2281.46, TIME=0, id=120866, CLOSE=2295.6, PER=D, OPEN=2294.32}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1064936754<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1291236884<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@42c5976c]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120867
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120867, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1291236884<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230310, TICKER=IMOEX, VOL=28737624061, HIGH=2302.1, LOW=2278.95, TIME=0, id=120867, CLOSE=2290.14, PER=D, OPEN=2295.03}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1291236884<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1257339290<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@ecf5e7]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120868
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120868, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1257339290<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230311, TICKER=IMOEX, VOL=28406887151, HIGH=2283.18, LOW=2266.33, TIME=0, id=120868, CLOSE=2276.25, PER=D, OPEN=2272.61}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1257339290<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(799395429<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@1e0be23e]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120869
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120869, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(799395429<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230314, TICKER=IMOEX, VOL=40548601017, HIGH=2289.7, LOW=2250.14, TIME=0, id=120869, CLOSE=2269.47, PER=D, OPEN=2279.13}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(799395429<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(797824369<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@447d4ebf]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120870
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120870, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(797824369<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230315, TICKER=IMOEX, VOL=37207686073, HIGH=2290.32, LOW=2261.65, TIME=0, id=120870, CLOSE=2290.32, PER=D, OPEN=2266.78}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(797824369<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(2143045013<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@365cd2a7]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120871
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120871, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(2143045013<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230316, TICKER=IMOEX, VOL=40744048851, HIGH=2295.06, LOW=2257.0, TIME=0, id=120871, CLOSE=2262.07, PER=D, OPEN=2287.16}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(2143045013<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1231892589<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@97ba477]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120872
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120872, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1231892589<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230317, TICKER=IMOEX, VOL=35340044256, HIGH=2269.01, LOW=2236.77, TIME=0, id=120872, CLOSE=2258.22, PER=D, OPEN=2262.61}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1231892589<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1567000834<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@47487ad0]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120873
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120873, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1567000834<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230318, TICKER=IMOEX, VOL=107891118681, HIGH=2322.78, LOW=2275.48, TIME=0, id=120873, CLOSE=2322.78, PER=D, OPEN=2284.78}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1567000834<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1908419563<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@fad18b5]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120874
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120874, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1908419563<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230321, TICKER=IMOEX, VOL=85279239657, HIGH=2397.16, LOW=2332.8, TIME=0, id=120874, CLOSE=2397.16, PER=D, OPEN=2337.83}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1908419563<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(453722898<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@a09aa40]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120875
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120875, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(453722898<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230322, TICKER=IMOEX, VOL=74761682397, HIGH=2431.23, LOW=2383.08, TIME=0, id=120875, CLOSE=2398.15, PER=D, OPEN=2417.43}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(453722898<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1051689128<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@15adcd53]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120876
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120876, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1051689128<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230323, TICKER=IMOEX, VOL=34107041796, HIGH=2398.76, LOW=2374.46, TIME=0, id=120876, CLOSE=2393.88, PER=D, OPEN=2387.81}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1051689128<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(519241753<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@4b2da00b]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120877
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120877, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(519241753<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230324, TICKER=IMOEX, VOL=23549170562, HIGH=2396.5, LOW=2379.88, TIME=0, id=120877, CLOSE=2388.35, PER=D, OPEN=2386.7}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(519241753<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(202878414<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@130a2b26]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120878
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120878, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(202878414<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230325, TICKER=IMOEX, VOL=20819951078, HIGH=2394.03, LOW=2384.29, TIME=0, id=120878, CLOSE=2391.53, PER=D, OPEN=2386.53}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(202878414<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(59031548<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@4c6919d8]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120879
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120879, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(59031548<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230328, TICKER=IMOEX, VOL=46667998385, HIGH=2440.68, LOW=2400.84, TIME=0, id=120879, CLOSE=2440.68, PER=D, OPEN=2400.84}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(59031548<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1232036944<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@16226846]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120880
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120880, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1232036944<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230329, TICKER=IMOEX, VOL=41511360697, HIGH=2458.37, LOW=2421.39, TIME=0, id=120880, CLOSE=2442.19, PER=D, OPEN=2453.26}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1232036944<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1490297599<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@353d1448]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120881
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120881, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1490297599<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230330, TICKER=IMOEX, VOL=45320275043, HIGH=2468.48, LOW=2437.52, TIME=0, id=120881, CLOSE=2460.87, PER=D, OPEN=2449.96}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1490297599<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(744883983<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@4a07949e]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120882
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120882, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(744883983<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230331, TICKER=IMOEX, VOL=29463490073, HIGH=2467.97, LOW=2450.46, TIME=0, id=120882, CLOSE=2465.93, PER=D, OPEN=2458.06}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(744883983<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1156597215<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@7273b0fe]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120883
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120883, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1156597215<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230401, TICKER=IMOEX, VOL=49027793443, HIGH=2472.53, LOW=2424.45, TIME=0, id=120883, CLOSE=2450.67, PER=D, OPEN=2470.12}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1156597215<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1650279120<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@296ba729]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120884
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120884, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1650279120<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230404, TICKER=IMOEX, VOL=38023970921, HIGH=2482.54, LOW=2463.0, TIME=0, id=120884, CLOSE=2473.32, PER=D, OPEN=2474.37}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1650279120<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(236423313<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@4a7661db]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120885
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120885, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(236423313<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230405, TICKER=IMOEX, VOL=61354905797, HIGH=2511.49, LOW=2479.24, TIME=0, id=120885, CLOSE=2480.45, PER=D, OPEN=2483.47}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(236423313<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1108216095<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@2a375f6e]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120886
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120886, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1108216095<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230406, TICKER=IMOEX, VOL=45705249900, HIGH=2500.8, LOW=2465.77, TIME=0, id=120886, CLOSE=2500.8, PER=D, OPEN=2489.18}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1108216095<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(56973137<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@4391b300]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120887
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120887, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(56973137<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230407, TICKER=IMOEX, VOL=43265609089, HIGH=2521.81, LOW=2498.3, TIME=0, id=120887, CLOSE=2498.3, PER=D, OPEN=2504.06}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(56973137<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1619030939<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@2fb12f9c]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120888
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120888, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1619030939<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230408, TICKER=IMOEX, VOL=28867367552, HIGH=2511.95, LOW=2491.37, TIME=0, id=120888, CLOSE=2508.39, PER=D, OPEN=2504.04}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1619030939<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(403792413<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@29f76500]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120889
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120889, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(403792413<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230411, TICKER=IMOEX, VOL=50694941214, HIGH=2548.41, LOW=2523.2, TIME=0, id=120889, CLOSE=2547.35, PER=D, OPEN=2523.2}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(403792413<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(2096634528<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@57472ae0]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120890
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120890, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(2096634528<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230412, TICKER=IMOEX, VOL=82399290110, HIGH=2577.51, LOW=2515.83, TIME=0, id=120890, CLOSE=2533.69, PER=D, OPEN=2560.04}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(2096634528<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(840785284<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@b7c74e8]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120891
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120891, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(840785284<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230413, TICKER=IMOEX, VOL=39300737126, HIGH=2554.77, LOW=2520.65, TIME=0, id=120891, CLOSE=2538.47, PER=D, OPEN=2538.62}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(840785284<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1105742246<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@2fd0b614]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120892
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120892, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1105742246<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230414, TICKER=IMOEX, VOL=31325943978, HIGH=2557.58, LOW=2528.06, TIME=0, id=120892, CLOSE=2544.28, PER=D, OPEN=2546.98}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1105742246<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(344532107<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@7e32594a]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120893
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120893, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(344532107<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230415, TICKER=IMOEX, VOL=33765105934, HIGH=2554.85, LOW=2532.39, TIME=0, id=120893, CLOSE=2554.85, PER=D, OPEN=2546.93}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(344532107<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(845056394<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@65963640]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120894
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120894, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(845056394<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230418, TICKER=IMOEX, VOL=48623055906, HIGH=2596.45, LOW=2572.54, TIME=0, id=120894, CLOSE=2596.11, PER=D, OPEN=2572.54}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(845056394<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(974506765<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@5823b949]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120895
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120895, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(974506765<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230419, TICKER=IMOEX, VOL=55112510691, HIGH=2615.62, LOW=2586.05, TIME=0, id=120895, CLOSE=2615.62, PER=D, OPEN=2601.34}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(974506765<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(786637351<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@40d95ed9]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120896
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120896, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(786637351<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230420, TICKER=IMOEX, VOL=75062780398, HIGH=2629.01, LOW=2584.96, TIME=0, id=120896, CLOSE=2606.55, PER=D, OPEN=2617.91}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(786637351<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1845893967<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@6195f85b]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120897
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120897, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1845893967<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230421, TICKER=IMOEX, VOL=76052647220, HIGH=2640.78, LOW=2565.61, TIME=0, id=120897, CLOSE=2637.85, PER=D, OPEN=2600.71}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1845893967<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1604278292<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@6789b188]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120898
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120898, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1604278292<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230422, TICKER=IMOEX, VOL=57207992419, HIGH=2648.21, LOW=2626.94, TIME=0, id=120898, CLOSE=2639.95, PER=D, OPEN=2640.99}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1604278292<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(809132677<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@6756ae49]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120899
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120899, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(809132677<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230425, TICKER=IMOEX, VOL=40359092138, HIGH=2651.8, LOW=2609.4, TIME=0, id=120899, CLOSE=2635.43, PER=D, OPEN=2636.76}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(809132677<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(705856368<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@5cc23d7d]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120900
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120900, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(705856368<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230426, TICKER=IMOEX, VOL=32069854640, HIGH=2642.12, LOW=2619.67, TIME=0, id=120900, CLOSE=2626.86, PER=D, OPEN=2639.67}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(705856368<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1904827135<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@6c0474ec]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120901
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120901, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1904827135<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230427, TICKER=IMOEX, VOL=31796127488, HIGH=2631.13, LOW=2614.98, TIME=0, id=120901, CLOSE=2620.33, PER=D, OPEN=2625.62}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1904827135<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(492419097<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@549aed98]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120902
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120902, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(492419097<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230428, TICKER=IMOEX, VOL=57836207669, HIGH=2646.18, LOW=2617.04, TIME=0, id=120902, CLOSE=2646.18, PER=D, OPEN=2620.65}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(492419097<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1185104787<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@4f7079bc]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120903
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120903, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1185104787<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230429, TICKER=IMOEX, VOL=51137018779, HIGH=2657.9, LOW=2608.02, TIME=0, id=120903, CLOSE=2634.94, PER=D, OPEN=2653.93}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1185104787<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(689044750<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@13afbf94]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120904
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120904, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(689044750<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230503, TICKER=IMOEX, VOL=63421980955, HIGH=2635.53, LOW=2560.09, TIME=0, id=120904, CLOSE=2580.51, PER=D, OPEN=2623.29}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(689044750<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1495107362<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@2883fe72]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120905
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120905, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1495107362<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230504, TICKER=IMOEX, VOL=54463786540, HIGH=2586.17, LOW=2532.42, TIME=0, id=120905, CLOSE=2532.42, PER=D, OPEN=2585.4}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1495107362<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1156228159<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@1899fb77]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120906
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120906, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1156228159<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230505, TICKER=IMOEX, VOL=38660000110, HIGH=2547.2, LOW=2524.36, TIME=0, id=120906, CLOSE=2524.51, PER=D, OPEN=2524.97}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1156228159<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1008810096<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@6f2edf4c]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120907
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120907, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1008810096<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230506, TICKER=IMOEX, VOL=35444350761, HIGH=2555.39, LOW=2529.08, TIME=0, id=120907, CLOSE=2538.24, PER=D, OPEN=2544.47}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1008810096<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1377847544<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@1e16be08]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120908
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120908, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1377847544<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230509, TICKER=IMOEX, VOL=20324340008, HIGH=2538.23, LOW=2513.84, TIME=0, id=120908, CLOSE=2527.59, PER=D, OPEN=2528.74}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1377847544<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1052364976<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@496b9c5b]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120909
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120909, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1052364976<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230511, TICKER=IMOEX, VOL=70899882336, HIGH=2556.67, LOW=2483.79, TIME=0, id=120909, CLOSE=2548.63, PER=D, OPEN=2483.92}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1052364976<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(146479804<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@756bb848]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120910
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120910, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(146479804<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230512, TICKER=IMOEX, VOL=74649425279, HIGH=2610.8, LOW=2567.98, TIME=0, id=120910, CLOSE=2595.12, PER=D, OPEN=2573.41}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(146479804<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(737920910<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@1fd054c3]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120911
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120911, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(737920910<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230513, TICKER=IMOEX, VOL=37699975037, HIGH=2584.91, LOW=2552.05, TIME=0, id=120911, CLOSE=2565.17, PER=D, OPEN=2570.65}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(737920910<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1978216181<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@fc1a558]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120912
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120912, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1978216181<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230516, TICKER=IMOEX, VOL=43930838148, HIGH=2611.71, LOW=2581.64, TIME=0, id=120912, CLOSE=2611.07, PER=D, OPEN=2581.64}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1978216181<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1869035817<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@305eb8a0]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120913
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120913, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1869035817<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230517, TICKER=IMOEX, VOL=42600850257, HIGH=2655.73, LOW=2621.59, TIME=0, id=120913, CLOSE=2633.71, PER=D, OPEN=2645.94}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1869035817<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(637359895<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@240e90b1]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120914
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120914, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(637359895<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230518, TICKER=IMOEX, VOL=38920642889, HIGH=2646.61, LOW=2623.15, TIME=0, id=120914, CLOSE=2634.48, PER=D, OPEN=2637.51}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(637359895<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(875905945<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@482a809]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120915
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120915, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(875905945<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230519, TICKER=IMOEX, VOL=59105430926, HIGH=2658.57, LOW=2624.49, TIME=0, id=120915, CLOSE=2632.91, PER=D, OPEN=2650.12}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(875905945<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(950847249<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@9ea63cf]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120916
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120916, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(950847249<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230520, TICKER=IMOEX, VOL=58790715324, HIGH=2635.8, LOW=2612.47, TIME=0, id=120916, CLOSE=2626.16, PER=D, OPEN=2627.59}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(950847249<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(478478749<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@1aec9e9d]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120917
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120917, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(478478749<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230523, TICKER=IMOEX, VOL=42553485689, HIGH=2652.97, LOW=2622.35, TIME=0, id=120917, CLOSE=2633.26, PER=D, OPEN=2648.3}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(478478749<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(153386446<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@4bce58b2]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120918
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120918, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(153386446<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230524, TICKER=IMOEX, VOL=72019568545, HIGH=2648.69, LOW=2607.63, TIME=0, id=120918, CLOSE=2641.66, PER=D, OPEN=2641.05}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(153386446<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1415874793<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@5e81529c]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120919
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120919, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1415874793<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230525, TICKER=IMOEX, VOL=71788021943, HIGH=2659.68, LOW=2626.43, TIME=0, id=120919, CLOSE=2654.99, PER=D, OPEN=2643.73}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1415874793<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(698765531<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@50f1576]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120920
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120920, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(698765531<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230526, TICKER=IMOEX, VOL=66958508415, HIGH=2663.51, LOW=2631.03, TIME=0, id=120920, CLOSE=2649.98, PER=D, OPEN=2662.85}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(698765531<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1802539357<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@49a40967]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120921
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120921, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1802539357<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230527, TICKER=IMOEX, VOL=52544481185, HIGH=2685.14, LOW=2645.54, TIME=0, id=120921, CLOSE=2682.03, PER=D, OPEN=2650.38}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1802539357<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1253041650<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@3a7c53fa]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120922
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120922, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1253041650<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230530, TICKER=IMOEX, VOL=66128347323, HIGH=2732.0, LOW=2697.46, TIME=0, id=120922, CLOSE=2732.0, PER=D, OPEN=2697.46}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1253041650<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1677839448<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@23f0d8b8]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120923
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120923, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1677839448<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230531, TICKER=IMOEX, VOL=89971597547, HIGH=2748.6, LOW=2687.81, TIME=0, id=120923, CLOSE=2698.75, PER=D, OPEN=2712.04}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1677839448<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(745171211<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@57c3bf38]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120924
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120924, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(745171211<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230601, TICKER=IMOEX, VOL=58314595036, HIGH=2718.27, LOW=2676.27, TIME=0, id=120924, CLOSE=2717.64, PER=D, OPEN=2698.11}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(745171211<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(144239392<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@7a038c19]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120925
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120925, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(144239392<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230602, TICKER=IMOEX, VOL=43211683996, HIGH=2729.97, LOW=2709.33, TIME=0, id=120925, CLOSE=2721.73, PER=D, OPEN=2720.21}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(144239392<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1107971992<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@19dc1807]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120926
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120926, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1107971992<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230603, TICKER=IMOEX, VOL=66753535007, HIGH=2720.47, LOW=2684.59, TIME=0, id=120926, CLOSE=2719.48, PER=D, OPEN=2684.59}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1107971992<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(823590442<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@6bad4fd6]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120927
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120927, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(823590442<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230606, TICKER=IMOEX, VOL=77243686738, HIGH=2738.82, LOW=2679.3, TIME=0, id=120927, CLOSE=2694.14, PER=D, OPEN=2726.17}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(823590442<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1655368242<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@2022ba46]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120928
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120928, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1655368242<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230607, TICKER=IMOEX, VOL=76379214029, HIGH=2687.41, LOW=2628.0, TIME=0, id=120928, CLOSE=2681.25, PER=D, OPEN=2667.76}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1655368242<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1535036882<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@b27b1fe]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120929
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120929, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1535036882<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230608, TICKER=IMOEX, VOL=55920146858, HIGH=2711.72, LOW=2674.11, TIME=0, id=120929, CLOSE=2694.69, PER=D, OPEN=2690.94}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1535036882<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1256211440<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@25da0870]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120930
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120930, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1256211440<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230609, TICKER=IMOEX, VOL=38188859175, HIGH=2709.69, LOW=2688.31, TIME=0, id=120930, CLOSE=2709.69, PER=D, OPEN=2693.6}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1256211440<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1282670611<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@2fe57bd1]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120931
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120931, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1282670611<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230610, TICKER=IMOEX, VOL=39062501968, HIGH=2721.84, LOW=2705.24, TIME=0, id=120931, CLOSE=2708.04, PER=D, OPEN=2717.2}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1282670611<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1343833172<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@1372ac72]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120932
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120932, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:51 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:51 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1343833172<open>)]
2024-07-22 14:08:51 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:51 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:51 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:51 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230614, TICKER=IMOEX, VOL=52842178198, HIGH=2757.28, LOW=2715.15, TIME=0, id=120932, CLOSE=2757.28, PER=D, OPEN=2715.31}
2024-07-22 14:08:51 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:51 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1343833172<open>)] after transaction
2024-07-22 14:08:51 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:51 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:51 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(775068257<open>)] for JPA transaction
2024-07-22 14:08:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:51 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:51 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@40a73f9a]
2024-07-22 14:08:51 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:51 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:51 DEBUG SequenceStructure:108 - Sequence value obtained: 120933
2024-07-22 14:08:51 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120933, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(775068257<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230615, TICKER=IMOEX, VOL=59282911977, HIGH=2786.06, LOW=2758.35, TIME=0, id=120933, CLOSE=2765.18, PER=D, OPEN=2777.2}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(775068257<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(475943772<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@50e95e13]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 120934
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120934, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(475943772<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230616, TICKER=IMOEX, VOL=70656176142, HIGH=2809.42, LOW=2764.89, TIME=0, id=120934, CLOSE=2800.17, PER=D, OPEN=2776.77}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(475943772<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(287059854<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@23f2d2b0]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 120935
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120935, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(287059854<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230617, TICKER=IMOEX, VOL=45797616801, HIGH=2813.74, LOW=2783.71, TIME=0, id=120935, CLOSE=2800.79, PER=D, OPEN=2809.28}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(287059854<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(138286692<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@64417dc8]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 120936
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120936, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(138286692<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230620, TICKER=IMOEX, VOL=68461308059, HIGH=2816.57, LOW=2783.69, TIME=0, id=120936, CLOSE=2815.07, PER=D, OPEN=2808.04}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(138286692<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(469577097<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@2693ae39]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 120937
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120937, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(469577097<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230621, TICKER=IMOEX, VOL=57023096018, HIGH=2814.72, LOW=2778.0, TIME=0, id=120937, CLOSE=2803.69, PER=D, OPEN=2810.14}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(469577097<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1944952500<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@443a074]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 120938
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120938, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1944952500<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230622, TICKER=IMOEX, VOL=45157380131, HIGH=2821.88, LOW=2794.68, TIME=0, id=120938, CLOSE=2819.3, PER=D, OPEN=2808.87}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1944952500<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(600914490<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@53b1ea93]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 120939
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120939, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(600914490<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230623, TICKER=IMOEX, VOL=34397622202, HIGH=2820.43, LOW=2805.92, TIME=0, id=120939, CLOSE=2815.83, PER=D, OPEN=2817.3}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(600914490<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1286096126<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@6e07ab34]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 120940
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120940, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1286096126<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230624, TICKER=IMOEX, VOL=44113808958, HIGH=2795.06, LOW=2767.82, TIME=0, id=120940, CLOSE=2795.06, PER=D, OPEN=2790.04}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1286096126<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1523925067<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@7fbb060a]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 120941
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120941, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1523925067<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230627, TICKER=IMOEX, VOL=55624443319, HIGH=2784.28, LOW=2741.33, TIME=0, id=120941, CLOSE=2757.13, PER=D, OPEN=2771.52}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1523925067<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1906789618<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@5eeb2fb]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 120942
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120942, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1906789618<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230628, TICKER=IMOEX, VOL=53762191394, HIGH=2785.33, LOW=2743.07, TIME=0, id=120942, CLOSE=2776.63, PER=D, OPEN=2759.61}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1906789618<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1454505095<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@6a25d8a6]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 120943
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120943, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1454505095<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230629, TICKER=IMOEX, VOL=51943848818, HIGH=2787.52, LOW=2766.93, TIME=0, id=120943, CLOSE=2780.92, PER=D, OPEN=2781.1}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1454505095<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1841912766<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@34b37e8]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 120944
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120944, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1841912766<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230630, TICKER=IMOEX, VOL=46908083129, HIGH=2804.8, LOW=2783.53, TIME=0, id=120944, CLOSE=2796.41, PER=D, OPEN=2790.27}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1841912766<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1243661411<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@389e7885]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 120945
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120945, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1243661411<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230701, TICKER=IMOEX, VOL=44467843000, HIGH=2800.12, LOW=2779.61, TIME=0, id=120945, CLOSE=2797.37, PER=D, OPEN=2796.0}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1243661411<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1409789421<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@52c7f17f]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 120946
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120946, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1409789421<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230704, TICKER=IMOEX, VOL=53464165683, HIGH=2804.93, LOW=2790.81, TIME=0, id=120946, CLOSE=2793.93, PER=D, OPEN=2795.58}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1409789421<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(2024048762<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@27bc1b65]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 120947
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120947, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(2024048762<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230705, TICKER=IMOEX, VOL=50008259491, HIGH=2808.22, LOW=2776.79, TIME=0, id=120947, CLOSE=2808.22, PER=D, OPEN=2798.02}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(2024048762<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(263458903<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@3f154bf]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 120948
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120948, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(263458903<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230706, TICKER=IMOEX, VOL=40919411599, HIGH=2813.76, LOW=2795.4, TIME=0, id=120948, CLOSE=2805.0, PER=D, OPEN=2795.4}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(263458903<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1384916965<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@4554fe1c]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 120949
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120949, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1384916965<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230707, TICKER=IMOEX, VOL=49081716977, HIGH=2837.49, LOW=2813.38, TIME=0, id=120949, CLOSE=2819.6, PER=D, OPEN=2816.74}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1384916965<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(2098697367<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@6c0ffb3a]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 120950
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120950, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(2098697367<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230708, TICKER=IMOEX, VOL=35298822309, HIGH=2832.82, LOW=2814.38, TIME=0, id=120950, CLOSE=2832.51, PER=D, OPEN=2823.89}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(2098697367<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(221825304<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@42242233]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 120951
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120951, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(221825304<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230711, TICKER=IMOEX, VOL=87982411081, HIGH=2864.32, LOW=2838.52, TIME=0, id=120951, CLOSE=2856.76, PER=D, OPEN=2838.85}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(221825304<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1091374470<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@42e60929]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 120952
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120952, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1091374470<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230712, TICKER=IMOEX, VOL=54658841880, HIGH=2867.36, LOW=2851.01, TIME=0, id=120952, CLOSE=2860.33, PER=D, OPEN=2865.64}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1091374470<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(508506615<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@7eab1bc2]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 120953
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120953, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(508506615<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230713, TICKER=IMOEX, VOL=49243265925, HIGH=2897.28, LOW=2870.61, TIME=0, id=120953, CLOSE=2896.83, PER=D, OPEN=2870.61}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(508506615<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(847698728<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@73ebe878]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 120954
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120954, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(847698728<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230714, TICKER=IMOEX, VOL=49945899336, HIGH=2912.15, LOW=2873.0, TIME=0, id=120954, CLOSE=2885.63, PER=D, OPEN=2899.98}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(847698728<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(729626046<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@5e9bdf2d]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 120955
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120955, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(729626046<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230715, TICKER=IMOEX, VOL=39994062891, HIGH=2902.72, LOW=2874.44, TIME=0, id=120955, CLOSE=2902.72, PER=D, OPEN=2882.96}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(729626046<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1552053866<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@73496e75]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 120956
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120956, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1552053866<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230718, TICKER=IMOEX, VOL=53257288785, HIGH=2917.72, LOW=2880.11, TIME=0, id=120956, CLOSE=2917.61, PER=D, OPEN=2889.09}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1552053866<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1613321607<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@2ec6b4d9]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 120957
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120957, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1613321607<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230719, TICKER=IMOEX, VOL=77156128343, HIGH=2955.81, LOW=2922.74, TIME=0, id=120957, CLOSE=2954.52, PER=D, OPEN=2923.69}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1613321607<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1394008629<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@71e4562b]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 120958
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120958, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1394008629<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230720, TICKER=IMOEX, VOL=58694687222, HIGH=2966.72, LOW=2938.66, TIME=0, id=120958, CLOSE=2943.43, PER=D, OPEN=2959.41}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1394008629<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1471293077<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@7325a370]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 120959
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120959, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1471293077<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230721, TICKER=IMOEX, VOL=61333694672, HIGH=2947.29, LOW=2905.02, TIME=0, id=120959, CLOSE=2917.48, PER=D, OPEN=2947.08}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1471293077<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(375127535<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@6d2f8814]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 120960
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120960, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(375127535<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230722, TICKER=IMOEX, VOL=45077238805, HIGH=2925.54, LOW=2889.78, TIME=0, id=120960, CLOSE=2923.54, PER=D, OPEN=2890.45}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(375127535<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1088348050<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@90f3182]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 120961
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120961, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1088348050<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230725, TICKER=IMOEX, VOL=44527494706, HIGH=2947.17, LOW=2925.1, TIME=0, id=120961, CLOSE=2937.47, PER=D, OPEN=2929.23}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1088348050<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(383054324<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@77a946bd]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 120962
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120962, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(383054324<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230726, TICKER=IMOEX, VOL=53238260846, HIGH=2975.36, LOW=2943.74, TIME=0, id=120962, CLOSE=2975.36, PER=D, OPEN=2948.87}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(383054324<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(482755492<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@764d6297]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 120963
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120963, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(482755492<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230727, TICKER=IMOEX, VOL=56825939145, HIGH=2982.47, LOW=2954.9, TIME=0, id=120963, CLOSE=2970.42, PER=D, OPEN=2974.21}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(482755492<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(497968138<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@41a06349]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 120964
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120964, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(497968138<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230728, TICKER=IMOEX, VOL=61871662319, HIGH=2992.47, LOW=2975.52, TIME=0, id=120964, CLOSE=2987.85, PER=D, OPEN=2975.52}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(497968138<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(698735943<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@84fc7a8]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 120965
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120965, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(698735943<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230729, TICKER=IMOEX, VOL=51925664852, HIGH=3008.61, LOW=2978.12, TIME=0, id=120965, CLOSE=3008.61, PER=D, OPEN=2986.35}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(698735943<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(41141048<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@6f32071f]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 120966
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120966, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(41141048<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230801, TICKER=IMOEX, VOL=97179543240, HIGH=3073.5, LOW=3026.93, TIME=0, id=120966, CLOSE=3073.5, PER=D, OPEN=3026.93}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(41141048<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(189228517<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@bd02955]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 120967
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120967, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(189228517<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230802, TICKER=IMOEX, VOL=103501354441, HIGH=3114.56, LOW=3055.25, TIME=0, id=120967, CLOSE=3093.64, PER=D, OPEN=3085.97}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(189228517<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(153241972<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@166bb338]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 120968
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120968, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(153241972<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230803, TICKER=IMOEX, VOL=67992425373, HIGH=3123.45, LOW=3080.63, TIME=0, id=120968, CLOSE=3106.46, PER=D, OPEN=3096.72}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(153241972<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1542941627<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@67e12764]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 120969
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120969, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1542941627<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230804, TICKER=IMOEX, VOL=90777814431, HIGH=3150.28, LOW=3094.27, TIME=0, id=120969, CLOSE=3147.8, PER=D, OPEN=3111.7}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1542941627<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(722720491<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@58d0ff4b]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 120970
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120970, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(722720491<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230805, TICKER=IMOEX, VOL=150935161509, HIGH=3194.83, LOW=3073.69, TIME=0, id=120970, CLOSE=3092.44, PER=D, OPEN=3158.53}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(722720491<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1753775584<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@4748da30]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 120971
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120971, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1753775584<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230808, TICKER=IMOEX, VOL=71380603188, HIGH=3153.6, LOW=3084.08, TIME=0, id=120971, CLOSE=3084.08, PER=D, OPEN=3120.54}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1753775584<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(2105861129<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@6fe7848d]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 120972
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120972, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(2105861129<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230809, TICKER=IMOEX, VOL=75856292667, HIGH=3092.54, LOW=3026.72, TIME=0, id=120972, CLOSE=3085.31, PER=D, OPEN=3077.63}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(2105861129<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(183217957<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@40c632f5]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 120973
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120973, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(183217957<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230810, TICKER=IMOEX, VOL=52640508265, HIGH=3120.25, LOW=3083.77, TIME=0, id=120973, CLOSE=3099.52, PER=D, OPEN=3106.03}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(183217957<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(21612672<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@794dc2f8]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 120974
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120974, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(21612672<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230811, TICKER=IMOEX, VOL=76102625157, HIGH=3148.86, LOW=3115.85, TIME=0, id=120974, CLOSE=3148.86, PER=D, OPEN=3122.06}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(21612672<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1305418904<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@679c0bfb]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 120975
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120975, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1305418904<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230812, TICKER=IMOEX, VOL=58801620624, HIGH=3163.47, LOW=3138.04, TIME=0, id=120975, CLOSE=3155.51, PER=D, OPEN=3158.59}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1305418904<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1003347856<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@71d9a843]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 120976
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120976, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1003347856<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230815, TICKER=IMOEX, VOL=143756965640, HIGH=3225.78, LOW=3117.31, TIME=0, id=120976, CLOSE=3131.0, PER=D, OPEN=3186.47}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1003347856<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1253212748<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@3de6b6e1]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 120977
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120977, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1253212748<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230816, TICKER=IMOEX, VOL=101169255425, HIGH=3163.74, LOW=3068.66, TIME=0, id=120977, CLOSE=3115.25, PER=D, OPEN=3083.32}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1253212748<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1411704865<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@2c348ca0]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 120978
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120978, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1411704865<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230817, TICKER=IMOEX, VOL=101922738707, HIGH=3122.34, LOW=3015.57, TIME=0, id=120978, CLOSE=3049.46, PER=D, OPEN=3109.46}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1411704865<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(877621111<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@6e611dab]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 120979
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120979, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(877621111<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230818, TICKER=IMOEX, VOL=58011690736, HIGH=3076.31, LOW=3031.73, TIME=0, id=120979, CLOSE=3059.02, PER=D, OPEN=3069.81}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(877621111<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(777507506<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@7b4c613a]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 120980
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120980, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(777507506<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230819, TICKER=IMOEX, VOL=52519793191, HIGH=3111.22, LOW=3058.01, TIME=0, id=120980, CLOSE=3111.22, PER=D, OPEN=3077.78}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(777507506<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(848254870<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@e7f5bd6]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 120981
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120981, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(848254870<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230822, TICKER=IMOEX, VOL=67654848151, HIGH=3150.61, LOW=3122.37, TIME=0, id=120981, CLOSE=3139.93, PER=D, OPEN=3139.29}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(848254870<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1550962080<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@70fc46ed]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 120982
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120982, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1550962080<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230823, TICKER=IMOEX, VOL=82928197094, HIGH=3172.22, LOW=3124.19, TIME=0, id=120982, CLOSE=3164.25, PER=D, OPEN=3146.42}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1550962080<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(346592130<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@2af5886]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 120983
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120983, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(346592130<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230824, TICKER=IMOEX, VOL=77479462508, HIGH=3184.17, LOW=3113.24, TIME=0, id=120983, CLOSE=3146.2, PER=D, OPEN=3180.39}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(346592130<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(2102514848<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@69c15830]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 120984
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120984, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(2102514848<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230825, TICKER=IMOEX, VOL=40185059413, HIGH=3137.37, LOW=3108.17, TIME=0, id=120984, CLOSE=3137.37, PER=D, OPEN=3117.02}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(2102514848<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(756924070<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@31c8970b]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 120985
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120985, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(756924070<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230826, TICKER=IMOEX, VOL=39474596738, HIGH=3158.61, LOW=3132.07, TIME=0, id=120985, CLOSE=3157.33, PER=D, OPEN=3150.03}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(756924070<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1252071335<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@5dfbb755]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 120986
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120986, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1252071335<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230829, TICKER=IMOEX, VOL=63368701488, HIGH=3202.24, LOW=3161.36, TIME=0, id=120986, CLOSE=3198.72, PER=D, OPEN=3161.36}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1252071335<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(921754879<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@17e3444b]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 120987
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120987, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(921754879<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230830, TICKER=IMOEX, VOL=83824471651, HIGH=3218.4, LOW=3191.31, TIME=0, id=120987, CLOSE=3211.36, PER=D, OPEN=3205.06}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(921754879<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(70580772<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@74b8aabc]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 120988
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120988, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(70580772<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230831, TICKER=IMOEX, VOL=71328311195, HIGH=3220.85, LOW=3193.18, TIME=0, id=120988, CLOSE=3212.68, PER=D, OPEN=3214.11}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(70580772<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1301949197<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@11af2df8]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 120989
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120989, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1301949197<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230901, TICKER=IMOEX, VOL=69694153712, HIGH=3234.68, LOW=3211.94, TIME=0, id=120989, CLOSE=3227.99, PER=D, OPEN=3218.48}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1301949197<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(449263335<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@789bd0a1]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 120990
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120990, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(449263335<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230902, TICKER=IMOEX, VOL=54884878744, HIGH=3232.92, LOW=3214.95, TIME=0, id=120990, CLOSE=3231.35, PER=D, OPEN=3230.53}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(449263335<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1374366942<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@59bd1e2c]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 120991
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120991, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1374366942<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230905, TICKER=IMOEX, VOL=77901001459, HIGH=3268.97, LOW=3242.4, TIME=0, id=120991, CLOSE=3268.97, PER=D, OPEN=3242.49}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1374366942<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1530991002<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@46b76092]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 120992
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120992, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1530991002<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230906, TICKER=IMOEX, VOL=69924617171, HIGH=3287.34, LOW=3246.46, TIME=0, id=120992, CLOSE=3264.43, PER=D, OPEN=3273.39}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1530991002<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(2004278878<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@6438d071]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 120993
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120993, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(2004278878<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230907, TICKER=IMOEX, VOL=61770348807, HIGH=3270.84, LOW=3236.79, TIME=0, id=120993, CLOSE=3245.47, PER=D, OPEN=3270.84}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(2004278878<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1726231750<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@70bff1cb]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 120994
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120994, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1726231750<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230908, TICKER=IMOEX, VOL=110587023656, HIGH=3262.73, LOW=3145.25, TIME=0, id=120994, CLOSE=3169.07, PER=D, OPEN=3247.9}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1726231750<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1899393827<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@2c861227]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 120995
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120995, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1899393827<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230909, TICKER=IMOEX, VOL=72988143442, HIGH=3188.77, LOW=3114.39, TIME=0, id=120995, CLOSE=3142.88, PER=D, OPEN=3178.44}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1899393827<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1050726598<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@3f386edd]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 120996
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120996, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1050726598<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230912, TICKER=IMOEX, VOL=69196002434, HIGH=3153.61, LOW=3106.92, TIME=0, id=120996, CLOSE=3122.37, PER=D, OPEN=3145.26}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1050726598<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(208768640<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@2d8e8b70]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 120997
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120997, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(208768640<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230913, TICKER=IMOEX, VOL=63390522298, HIGH=3165.92, LOW=3117.7, TIME=0, id=120997, CLOSE=3165.92, PER=D, OPEN=3118.14}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(208768640<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(165122940<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@7f17709f]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 120998
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120998, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(165122940<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230914, TICKER=IMOEX, VOL=24887960181, HIGH=3169.8, LOW=3148.32, TIME=0, id=120998, CLOSE=3148.32, PER=D, OPEN=3157.98}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(165122940<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(500482897<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@59e85518]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 120999
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 120999, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(500482897<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230915, TICKER=IMOEX, VOL=76593640465, HIGH=3148.5, LOW=3072.82, TIME=0, id=120999, CLOSE=3139.49, PER=D, OPEN=3144.29}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(500482897<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(715823815<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@78fdcf20]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121000
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121000, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(715823815<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230916, TICKER=IMOEX, VOL=54150655809, HIGH=3155.45, LOW=3116.72, TIME=0, id=121000, CLOSE=3152.53, PER=D, OPEN=3126.57}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(715823815<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1117755479<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@733ce28b]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121001
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121001, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1117755479<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230919, TICKER=IMOEX, VOL=56363929560, HIGH=3177.23, LOW=3127.37, TIME=0, id=121001, CLOSE=3135.18, PER=D, OPEN=3165.06}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1117755479<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(750475252<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@6facb292]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121002
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121002, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(750475252<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230920, TICKER=IMOEX, VOL=90697414072, HIGH=3141.38, LOW=3054.25, TIME=0, id=121002, CLOSE=3083.85, PER=D, OPEN=3134.37}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(750475252<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1682305878<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@3f6e9e4c]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121003
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121003, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1682305878<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230921, TICKER=IMOEX, VOL=90414748564, HIGH=3091.05, LOW=3013.75, TIME=0, id=121003, CLOSE=3068.15, PER=D, OPEN=3061.18}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1682305878<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(781181901<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@59c0fee1]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121004
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121004, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(781181901<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230922, TICKER=IMOEX, VOL=75754918837, HIGH=3062.68, LOW=3009.89, TIME=0, id=121004, CLOSE=3019.22, PER=D, OPEN=3058.2}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(781181901<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1827460282<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@270b8bce]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121005
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121005, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1827460282<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230923, TICKER=IMOEX, VOL=70541006633, HIGH=3051.69, LOW=2988.04, TIME=0, id=121005, CLOSE=3049.07, PER=D, OPEN=3009.87}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1827460282<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1307196102<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@6fb71b11]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121006
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121006, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1307196102<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230926, TICKER=IMOEX, VOL=43781955521, HIGH=3056.23, LOW=3025.89, TIME=0, id=121006, CLOSE=3045.39, PER=D, OPEN=3051.85}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1307196102<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1795603121<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@53158a40]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121007
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121007, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1795603121<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230927, TICKER=IMOEX, VOL=52619557707, HIGH=3051.91, LOW=3001.92, TIME=0, id=121007, CLOSE=3051.91, PER=D, OPEN=3034.23}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1795603121<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1915705661<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@10cfb9dd]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121008
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121008, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1915705661<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230928, TICKER=IMOEX, VOL=46165613782, HIGH=3081.41, LOW=3052.59, TIME=0, id=121008, CLOSE=3067.61, PER=D, OPEN=3053.37}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1915705661<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1844729285<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@2af96c63]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121009
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121009, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1844729285<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230929, TICKER=IMOEX, VOL=51660123378, HIGH=3108.07, LOW=3076.64, TIME=0, id=121009, CLOSE=3108.07, PER=D, OPEN=3080.81}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1844729285<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(838731318<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@6a2a49df]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121010
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121010, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(838731318<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=230930, TICKER=IMOEX, VOL=66248378664, HIGH=3141.12, LOW=3106.97, TIME=0, id=121010, CLOSE=3133.26, PER=D, OPEN=3121.07}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(838731318<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1419194161<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@2afa32ee]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121011
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121011, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1419194161<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=231003, TICKER=IMOEX, VOL=68581714014, HIGH=3162.53, LOW=3125.58, TIME=0, id=121011, CLOSE=3132.33, PER=D, OPEN=3141.69}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1419194161<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(489705573<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@59056c74]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121012
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121012, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(489705573<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=231004, TICKER=IMOEX, VOL=51681873711, HIGH=3146.33, LOW=3103.63, TIME=0, id=121012, CLOSE=3143.88, PER=D, OPEN=3134.45}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(489705573<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1926473693<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@db53c88]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121013
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121013, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1926473693<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=231005, TICKER=IMOEX, VOL=43906185126, HIGH=3154.97, LOW=3130.03, TIME=0, id=121013, CLOSE=3134.25, PER=D, OPEN=3138.62}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1926473693<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1891805119<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@529f7c1b]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121014
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121014, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1891805119<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=231006, TICKER=IMOEX, VOL=41451215496, HIGH=3138.5, LOW=3112.96, TIME=0, id=121014, CLOSE=3131.76, PER=D, OPEN=3126.71}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1891805119<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(978972970<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@e8b5bce]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121015
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121015, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(978972970<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=231007, TICKER=IMOEX, VOL=39451036259, HIGH=3145.01, LOW=3121.0, TIME=0, id=121015, CLOSE=3144.89, PER=D, OPEN=3138.87}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(978972970<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1674338653<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@5926fbc7]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121016
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121016, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1674338653<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=231010, TICKER=IMOEX, VOL=56441761366, HIGH=3185.86, LOW=3164.63, TIME=0, id=121016, CLOSE=3174.02, PER=D, OPEN=3166.21}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1674338653<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(64172279<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@5c9c5793]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121017
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121017, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(64172279<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=231011, TICKER=IMOEX, VOL=39537131585, HIGH=3182.08, LOW=3162.61, TIME=0, id=121017, CLOSE=3177.03, PER=D, OPEN=3175.08}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(64172279<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1792628826<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@3006b931]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121018
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121018, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1792628826<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=231012, TICKER=IMOEX, VOL=66588523818, HIGH=3196.44, LOW=3168.29, TIME=0, id=121018, CLOSE=3194.12, PER=D, OPEN=3174.99}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1792628826<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(67713005<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@69a439f8]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121019
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121019, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(67713005<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=231013, TICKER=IMOEX, VOL=62571132736, HIGH=3178.5, LOW=3122.58, TIME=0, id=121019, CLOSE=3174.66, PER=D, OPEN=3130.04}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(67713005<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(201749258<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@1e29d282]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121020
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121020, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(201749258<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=231014, TICKER=IMOEX, VOL=50164539589, HIGH=3195.23, LOW=3176.17, TIME=0, id=121020, CLOSE=3192.33, PER=D, OPEN=3182.47}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(201749258<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(2007775980<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@7ec49ee6]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121021
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121021, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(2007775980<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=231017, TICKER=IMOEX, VOL=65631124360, HIGH=3235.66, LOW=3202.94, TIME=0, id=121021, CLOSE=3234.78, PER=D, OPEN=3204.81}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(2007775980<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(734822233<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@2e8cd0d]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121022
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121022, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(734822233<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=231018, TICKER=IMOEX, VOL=72134689040, HIGH=3252.55, LOW=3228.11, TIME=0, id=121022, CLOSE=3247.15, PER=D, OPEN=3239.37}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(734822233<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(2115497319<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@1bda62ce]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121023
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121023, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(2115497319<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=231019, TICKER=IMOEX, VOL=81000173319, HIGH=3262.54, LOW=3225.44, TIME=0, id=121023, CLOSE=3249.21, PER=D, OPEN=3252.31}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(2115497319<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1127356702<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@6a867efa]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121024
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121024, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1127356702<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=231020, TICKER=IMOEX, VOL=57116882589, HIGH=3260.45, LOW=3232.16, TIME=0, id=121024, CLOSE=3255.16, PER=D, OPEN=3245.26}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1127356702<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1623002632<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@49e60296]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121025
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121025, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1623002632<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=231021, TICKER=IMOEX, VOL=69423498349, HIGH=3269.71, LOW=3236.31, TIME=0, id=121025, CLOSE=3269.27, PER=D, OPEN=3257.85}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1623002632<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(2104148669<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@4c472dec]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121026
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121026, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(2104148669<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=231024, TICKER=IMOEX, VOL=66837797956, HIGH=3283.8, LOW=3248.39, TIME=0, id=121026, CLOSE=3263.68, PER=D, OPEN=3271.76}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(2104148669<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1358770891<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@3e6003e0]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121027
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121027, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1358770891<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=231025, TICKER=IMOEX, VOL=57753713995, HIGH=3266.59, LOW=3237.08, TIME=0, id=121027, CLOSE=3265.01, PER=D, OPEN=3256.29}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1358770891<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1631441586<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@14f70fc3]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121028
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121028, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1631441586<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=231026, TICKER=IMOEX, VOL=59050060810, HIGH=3269.76, LOW=3243.25, TIME=0, id=121028, CLOSE=3265.28, PER=D, OPEN=3265.18}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1631441586<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(355483456<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@5aa1df25]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121029
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121029, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(355483456<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=231027, TICKER=IMOEX, VOL=77921025120, HIGH=3283.49, LOW=3221.79, TIME=0, id=121029, CLOSE=3223.89, PER=D, OPEN=3272.71}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(355483456<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(889123346<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@cef2bdc]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121030
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121030, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(889123346<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=231028, TICKER=IMOEX, VOL=71895100528, HIGH=3241.55, LOW=3185.84, TIME=0, id=121030, CLOSE=3224.18, PER=D, OPEN=3219.49}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(889123346<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1222476894<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@60431974]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121031
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121031, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1222476894<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=231031, TICKER=IMOEX, VOL=46027902406, HIGH=3246.0, LOW=3219.7, TIME=0, id=121031, CLOSE=3227.07, PER=D, OPEN=3232.82}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1222476894<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(634737362<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@6cd15571]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121032
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121032, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(634737362<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=231101, TICKER=IMOEX, VOL=50922304376, HIGH=3226.88, LOW=3176.53, TIME=0, id=121032, CLOSE=3200.97, PER=D, OPEN=3221.08}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(634737362<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1800138373<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@581986d2]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121033
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121033, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1800138373<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=231102, TICKER=IMOEX, VOL=34151534845, HIGH=3214.83, LOW=3191.34, TIME=0, id=121033, CLOSE=3206.52, PER=D, OPEN=3192.96}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1800138373<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1883233476<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@241d3ea7]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121034
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121034, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1883233476<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=231103, TICKER=IMOEX, VOL=44661043464, HIGH=3228.46, LOW=3197.22, TIME=0, id=121034, CLOSE=3197.22, PER=D, OPEN=3216.92}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1883233476<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1160302871<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@78a5e6fd]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121035
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121035, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1160302871<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=231104, TICKER=IMOEX, VOL=45275913502, HIGH=3212.81, LOW=3182.17, TIME=0, id=121035, CLOSE=3208.63, PER=D, OPEN=3207.04}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1160302871<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(2074588157<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@605c3e63]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121036
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121036, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(2074588157<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=231107, TICKER=IMOEX, VOL=34629484182, HIGH=3237.09, LOW=3207.1, TIME=0, id=121036, CLOSE=3235.11, PER=D, OPEN=3207.47}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(2074588157<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(2061592618<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@391d4e3]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121037
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121037, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(2061592618<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=231108, TICKER=IMOEX, VOL=43602565076, HIGH=3246.65, LOW=3228.46, TIME=0, id=121037, CLOSE=3246.34, PER=D, OPEN=3239.98}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(2061592618<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(655251600<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@3c3a65a0]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121038
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121038, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(655251600<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=231109, TICKER=IMOEX, VOL=51595042504, HIGH=3257.32, LOW=3233.11, TIME=0, id=121038, CLOSE=3245.43, PER=D, OPEN=3238.81}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(655251600<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(698128264<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@6fae600c]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121039
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121039, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(698128264<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=231110, TICKER=IMOEX, VOL=41180868778, HIGH=3245.11, LOW=3222.34, TIME=0, id=121039, CLOSE=3239.92, PER=D, OPEN=3241.5}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(698128264<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(64424525<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@7b10d85a]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121040
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121040, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(64424525<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=231111, TICKER=IMOEX, VOL=45375928752, HIGH=3246.31, LOW=3229.1, TIME=0, id=121040, CLOSE=3242.06, PER=D, OPEN=3236.03}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(64424525<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(532381427<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@4272d104]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121041
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121041, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(532381427<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=231114, TICKER=IMOEX, VOL=46158296028, HIGH=3251.74, LOW=3235.06, TIME=0, id=121041, CLOSE=3248.27, PER=D, OPEN=3241.31}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(532381427<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(271565676<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@7be24bab]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121042
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121042, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(271565676<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=231115, TICKER=IMOEX, VOL=60477293840, HIGH=3236.48, LOW=3192.32, TIME=0, id=121042, CLOSE=3212.39, PER=D, OPEN=3236.48}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(271565676<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1976509714<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@387eae04]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121043
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121043, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1976509714<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=231116, TICKER=IMOEX, VOL=51319236577, HIGH=3221.22, LOW=3182.78, TIME=0, id=121043, CLOSE=3215.11, PER=D, OPEN=3195.43}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1976509714<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(409057462<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@792714d7]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121044
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121044, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(409057462<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=231117, TICKER=IMOEX, VOL=36721302547, HIGH=3215.93, LOW=3184.97, TIME=0, id=121044, CLOSE=3189.08, PER=D, OPEN=3209.33}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(409057462<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1499954845<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@381e5529]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121045
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121045, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1499954845<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=231118, TICKER=IMOEX, VOL=47102783136, HIGH=3208.17, LOW=3151.95, TIME=0, id=121045, CLOSE=3206.34, PER=D, OPEN=3172.78}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1499954845<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(157466390<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@3322a21a]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121046
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121046, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(157466390<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=231121, TICKER=IMOEX, VOL=38327738173, HIGH=3216.73, LOW=3194.4, TIME=0, id=121046, CLOSE=3207.36, PER=D, OPEN=3205.73}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(157466390<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(87943321<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@cf9d290]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121047
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121047, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(87943321<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=231122, TICKER=IMOEX, VOL=42284572626, HIGH=3219.11, LOW=3193.46, TIME=0, id=121047, CLOSE=3218.48, PER=D, OPEN=3198.73}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(87943321<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1958996514<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@6bf9910f]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121048
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121048, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1958996514<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=231123, TICKER=IMOEX, VOL=52978233723, HIGH=3239.17, LOW=3220.37, TIME=0, id=121048, CLOSE=3230.65, PER=D, OPEN=3221.9}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1958996514<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(854152374<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@692622ac]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121049
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121049, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(854152374<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=231124, TICKER=IMOEX, VOL=37275484221, HIGH=3238.81, LOW=3218.72, TIME=0, id=121049, CLOSE=3221.05, PER=D, OPEN=3233.09}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(854152374<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(2136044415<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@78ca30a9]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121050
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121050, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(2136044415<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=231125, TICKER=IMOEX, VOL=46289477525, HIGH=3231.77, LOW=3203.62, TIME=0, id=121050, CLOSE=3217.76, PER=D, OPEN=3223.75}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(2136044415<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(39243132<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@2dea1b0]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121051
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121051, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(39243132<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=231128, TICKER=IMOEX, VOL=68069996522, HIGH=3224.61, LOW=3178.2, TIME=0, id=121051, CLOSE=3191.05, PER=D, OPEN=3220.25}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(39243132<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(192491832<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@1bbf0642]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121052
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121052, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(192491832<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=231129, TICKER=IMOEX, VOL=52669439750, HIGH=3197.61, LOW=3157.55, TIME=0, id=121052, CLOSE=3196.36, PER=D, OPEN=3189.16}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(192491832<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(941771053<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@7804dab9]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121053
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121053, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(941771053<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=231130, TICKER=IMOEX, VOL=45013440561, HIGH=3200.33, LOW=3173.37, TIME=0, id=121053, CLOSE=3173.52, PER=D, OPEN=3196.75}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(941771053<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1291898916<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@524a7b1c]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121054
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121054, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1291898916<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=231201, TICKER=IMOEX, VOL=48879881178, HIGH=3176.53, LOW=3146.53, TIME=0, id=121054, CLOSE=3165.79, PER=D, OPEN=3176.5}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1291898916<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(615745524<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@3c127239]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121055
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121055, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(615745524<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=231202, TICKER=IMOEX, VOL=39399849253, HIGH=3162.97, LOW=3136.56, TIME=0, id=121055, CLOSE=3142.29, PER=D, OPEN=3155.87}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(615745524<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1687556414<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@2ba69891]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121056
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121056, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1687556414<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=231205, TICKER=IMOEX, VOL=47472192271, HIGH=3126.55, LOW=3096.28, TIME=0, id=121056, CLOSE=3114.41, PER=D, OPEN=3123.18}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1687556414<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(2013086117<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@3a0d9f28]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121057
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121057, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(2013086117<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=231206, TICKER=IMOEX, VOL=40616313023, HIGH=3134.57, LOW=3090.31, TIME=0, id=121057, CLOSE=3129.33, PER=D, OPEN=3102.3}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(2013086117<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(161204559<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@48a05965]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121058
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121058, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(161204559<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=231207, TICKER=IMOEX, VOL=56994161677, HIGH=3146.52, LOW=3077.94, TIME=0, id=121058, CLOSE=3079.5, PER=D, OPEN=3139.89}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(161204559<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1439423653<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@17454af2]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121059
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121059, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1439423653<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=231208, TICKER=IMOEX, VOL=58445034321, HIGH=3084.5, LOW=3041.11, TIME=0, id=121059, CLOSE=3073.63, PER=D, OPEN=3065.93}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1439423653<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1587904090<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@7fd8e79a]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121060
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121060, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1587904090<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=231209, TICKER=IMOEX, VOL=33718138747, HIGH=3100.22, LOW=3067.46, TIME=0, id=121060, CLOSE=3079.99, PER=D, OPEN=3079.88}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1587904090<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(458892129<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@79701c89]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121061
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121061, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(458892129<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=231212, TICKER=IMOEX, VOL=67482729976, HIGH=3082.3, LOW=3025.74, TIME=0, id=121061, CLOSE=3026.17, PER=D, OPEN=3081.88}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(458892129<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(634992465<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@331c3e08]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121062
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121062, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(634992465<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=231213, TICKER=IMOEX, VOL=49905501703, HIGH=3046.81, LOW=2992.5, TIME=0, id=121062, CLOSE=3019.89, PER=D, OPEN=3020.61}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(634992465<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(413267810<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@51c9a00b]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121063
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121063, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(413267810<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=231214, TICKER=IMOEX, VOL=32628833032, HIGH=3043.42, LOW=3002.38, TIME=0, id=121063, CLOSE=3032.22, PER=D, OPEN=3011.99}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(413267810<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(239852847<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@2e488a23]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121064
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121064, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(239852847<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=231215, TICKER=IMOEX, VOL=36584934144, HIGH=3057.08, LOW=3005.94, TIME=0, id=121064, CLOSE=3008.84, PER=D, OPEN=3046.43}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(239852847<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(2069464481<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@5cce646c]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121065
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121065, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(2069464481<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=231216, TICKER=IMOEX, VOL=68901058125, HIGH=3037.29, LOW=2959.29, TIME=0, id=121065, CLOSE=3033.89, PER=D, OPEN=2959.29}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(2069464481<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1875379915<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@286942fc]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121066
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121066, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1875379915<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=231219, TICKER=IMOEX, VOL=57321317708, HIGH=3090.04, LOW=3048.82, TIME=0, id=121066, CLOSE=3076.26, PER=D, OPEN=3052.14}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1875379915<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(500695526<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@26ede5d4]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121067
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121067, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(500695526<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=231220, TICKER=IMOEX, VOL=49073589110, HIGH=3091.26, LOW=3066.34, TIME=0, id=121067, CLOSE=3083.64, PER=D, OPEN=3084.12}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(500695526<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1897836989<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@13b7b023]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121068
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121068, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1897836989<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=231221, TICKER=IMOEX, VOL=51591671407, HIGH=3113.92, LOW=3088.74, TIME=0, id=121068, CLOSE=3104.66, PER=D, OPEN=3091.35}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1897836989<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(164600456<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@599f569c]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121069
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121069, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(164600456<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=231222, TICKER=IMOEX, VOL=57195576040, HIGH=3095.01, LOW=3050.0, TIME=0, id=121069, CLOSE=3073.57, PER=D, OPEN=3093.46}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(164600456<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(139072493<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@27e31e5d]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121070
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121070, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(139072493<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=231223, TICKER=IMOEX, VOL=58685100616, HIGH=3102.75, LOW=3075.56, TIME=0, id=121070, CLOSE=3092.58, PER=D, OPEN=3076.31}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(139072493<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1548877895<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@4257506]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121071
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121071, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1548877895<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=231226, TICKER=IMOEX, VOL=63938381786, HIGH=3108.14, LOW=3086.89, TIME=0, id=121071, CLOSE=3099.02, PER=D, OPEN=3095.42}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1548877895<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(918342214<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@4999f96d]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121072
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121072, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(918342214<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=231227, TICKER=IMOEX, VOL=45636778193, HIGH=3098.69, LOW=3080.92, TIME=0, id=121072, CLOSE=3094.72, PER=D, OPEN=3090.39}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(918342214<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1053810911<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@4fa20067]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121073
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121073, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1053810911<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=231228, TICKER=IMOEX, VOL=48749868157, HIGH=3112.19, LOW=3097.31, TIME=0, id=121073, CLOSE=3097.49, PER=D, OPEN=3100.99}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1053810911<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1314641094<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@6ce311b4]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121074
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121074, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1314641094<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=231229, TICKER=IMOEX, VOL=47431925893, HIGH=3101.99, LOW=3081.98, TIME=0, id=121074, CLOSE=3101.99, PER=D, OPEN=3099.56}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1314641094<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1205684973<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@10809b5c]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121075
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121075, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1205684973<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=231230, TICKER=IMOEX, VOL=31721834520, HIGH=3102.08, LOW=3086.26, TIME=0, id=121075, CLOSE=3099.11, PER=D, OPEN=3092.66}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1205684973<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(119815973<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@e4a3e34]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121076
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121076, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(119815973<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240104, TICKER=IMOEX, VOL=25099765853, HIGH=3132.76, LOW=3099.1, TIME=0, id=121076, CLOSE=3130.23, PER=D, OPEN=3099.78}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(119815973<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1023092736<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@6922acea]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121077
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121077, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1023092736<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240105, TICKER=IMOEX, VOL=21911294862, HIGH=3144.25, LOW=3133.93, TIME=0, id=121077, CLOSE=3136.07, PER=D, OPEN=3140.66}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1023092736<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1477304047<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@9c94146]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121078
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121078, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1477304047<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240106, TICKER=IMOEX, VOL=19753389601, HIGH=3142.8, LOW=3128.16, TIME=0, id=121078, CLOSE=3136.37, PER=D, OPEN=3138.27}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1477304047<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1690233342<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@2cb939b]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121079
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121079, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1690233342<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240109, TICKER=IMOEX, VOL=34329074106, HIGH=3158.82, LOW=3139.37, TIME=0, id=121079, CLOSE=3158.58, PER=D, OPEN=3140.12}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1690233342<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1570086542<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@8de1232]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121080
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121080, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1570086542<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240110, TICKER=IMOEX, VOL=47506553527, HIGH=3158.72, LOW=3143.03, TIME=0, id=121080, CLOSE=3155.55, PER=D, OPEN=3156.17}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1570086542<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1335060784<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@534d1ca3]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121081
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121081, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1335060784<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240111, TICKER=IMOEX, VOL=41490192876, HIGH=3174.28, LOW=3156.44, TIME=0, id=121081, CLOSE=3164.7, PER=D, OPEN=3158.35}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1335060784<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1603186077<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@3a729bac]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121082
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121082, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1603186077<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240112, TICKER=IMOEX, VOL=74539735595, HIGH=3181.25, LOW=3148.5, TIME=0, id=121082, CLOSE=3181.25, PER=D, OPEN=3158.3}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1603186077<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(287404761<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@15869bbf]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121083
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121083, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(287404761<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240113, TICKER=IMOEX, VOL=57864409631, HIGH=3196.98, LOW=3176.09, TIME=0, id=121083, CLOSE=3185.22, PER=D, OPEN=3182.5}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(287404761<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1350485716<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@5f4e6ad9]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121084
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121084, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1350485716<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240116, TICKER=IMOEX, VOL=54441165003, HIGH=3200.78, LOW=3176.73, TIME=0, id=121084, CLOSE=3184.88, PER=D, OPEN=3190.62}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1350485716<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1533601224<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@3d1f603f]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121085
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121085, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1533601224<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240117, TICKER=IMOEX, VOL=52110375519, HIGH=3187.14, LOW=3162.98, TIME=0, id=121085, CLOSE=3179.45, PER=D, OPEN=3186.77}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1533601224<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1012265839<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@4987104b]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121086
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121086, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1012265839<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240118, TICKER=IMOEX, VOL=45728506784, HIGH=3189.26, LOW=3169.99, TIME=0, id=121086, CLOSE=3185.23, PER=D, OPEN=3174.87}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1012265839<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(20982448<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@4c809e8f]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121087
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121087, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(20982448<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240119, TICKER=IMOEX, VOL=41501331242, HIGH=3193.54, LOW=3176.72, TIME=0, id=121087, CLOSE=3178.85, PER=D, OPEN=3188.71}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(20982448<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(720829953<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@9106cd4]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121088
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121088, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(720829953<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240120, TICKER=IMOEX, VOL=43778561629, HIGH=3179.21, LOW=3154.46, TIME=0, id=121088, CLOSE=3166.37, PER=D, OPEN=3176.13}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(720829953<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(2116679959<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@3f46d49d]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121089
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121089, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(2116679959<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240123, TICKER=IMOEX, VOL=40245676307, HIGH=3179.11, LOW=3157.37, TIME=0, id=121089, CLOSE=3172.15, PER=D, OPEN=3161.44}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(2116679959<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1150924593<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@797593d7]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121090
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121090, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1150924593<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240124, TICKER=IMOEX, VOL=43843170585, HIGH=3179.75, LOW=3166.66, TIME=0, id=121090, CLOSE=3175.74, PER=D, OPEN=3176.19}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1150924593<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(2062180299<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@3a092c9b]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121091
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121091, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(2062180299<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240125, TICKER=IMOEX, VOL=44125488170, HIGH=3183.7, LOW=3152.96, TIME=0, id=121091, CLOSE=3162.41, PER=D, OPEN=3176.59}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(2062180299<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1561132730<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@63b5342b]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121092
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121092, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1561132730<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240126, TICKER=IMOEX, VOL=43964617848, HIGH=3166.95, LOW=3143.89, TIME=0, id=121092, CLOSE=3157.74, PER=D, OPEN=3163.36}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1561132730<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(2035239100<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@2cc2b6ef]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121093
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121093, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(2035239100<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240127, TICKER=IMOEX, VOL=44434205521, HIGH=3171.95, LOW=3157.76, TIME=0, id=121093, CLOSE=3163.21, PER=D, OPEN=3164.55}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(2035239100<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1975741110<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@2daacc80]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121094
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121094, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1975741110<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240130, TICKER=IMOEX, VOL=45079333771, HIGH=3184.15, LOW=3169.57, TIME=0, id=121094, CLOSE=3176.61, PER=D, OPEN=3169.57}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1975741110<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1428548286<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@eee246d]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121095
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121095, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1428548286<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240131, TICKER=IMOEX, VOL=71104347653, HIGH=3196.15, LOW=3178.82, TIME=0, id=121095, CLOSE=3196.08, PER=D, OPEN=3181.75}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1428548286<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1006095421<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@4d5aab20]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121096
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121096, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1006095421<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240201, TICKER=IMOEX, VOL=63417125148, HIGH=3219.41, LOW=3198.83, TIME=0, id=121096, CLOSE=3214.19, PER=D, OPEN=3201.48}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1006095421<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1233525893<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@22871b1]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121097
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121097, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1233525893<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240202, TICKER=IMOEX, VOL=55302181736, HIGH=3233.21, LOW=3220.38, TIME=0, id=121097, CLOSE=3229.89, PER=D, OPEN=3220.43}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1233525893<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1902930824<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@38ef7c95]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121098
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121098, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1902930824<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240203, TICKER=IMOEX, VOL=57285681737, HIGH=3232.35, LOW=3215.0, TIME=0, id=121098, CLOSE=3226.35, PER=D, OPEN=3229.48}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1902930824<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1794466723<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@17ee6251]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121099
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121099, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1794466723<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240206, TICKER=IMOEX, VOL=78173299808, HIGH=3232.38, LOW=3218.91, TIME=0, id=121099, CLOSE=3226.79, PER=D, OPEN=3218.91}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1794466723<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1149640524<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@5442c347]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121100
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121100, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1149640524<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240207, TICKER=IMOEX, VOL=45528686817, HIGH=3238.4, LOW=3228.78, TIME=0, id=121100, CLOSE=3238.4, PER=D, OPEN=3234.44}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1149640524<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(2027029259<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@4aea94c9]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121101
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121101, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(2027029259<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240208, TICKER=IMOEX, VOL=69261121008, HIGH=3259.24, LOW=3240.16, TIME=0, id=121101, CLOSE=3256.58, PER=D, OPEN=3240.57}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(2027029259<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1555390665<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@73472aba]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121102
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121102, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1555390665<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240209, TICKER=IMOEX, VOL=90042247728, HIGH=3266.45, LOW=3236.79, TIME=0, id=121102, CLOSE=3241.81, PER=D, OPEN=3261.18}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1555390665<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(56123354<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@2b562065]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121103
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121103, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(56123354<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240210, TICKER=IMOEX, VOL=49456718531, HIGH=3242.38, LOW=3219.56, TIME=0, id=121103, CLOSE=3242.38, PER=D, OPEN=3231.3}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(56123354<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1634964809<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@3a33c823]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121104
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121104, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1634964809<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240213, TICKER=IMOEX, VOL=51206382677, HIGH=3248.5, LOW=3227.7, TIME=0, id=121104, CLOSE=3248.5, PER=D, OPEN=3241.57}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1634964809<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(482225371<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@420637ee]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121105
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121105, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(482225371<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240214, TICKER=IMOEX, VOL=45946893921, HIGH=3259.69, LOW=3245.02, TIME=0, id=121105, CLOSE=3254.6, PER=D, OPEN=3250.3}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(482225371<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1185668508<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@1f7b0384]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121106
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121106, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1185668508<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240215, TICKER=IMOEX, VOL=39167498395, HIGH=3267.88, LOW=3251.76, TIME=0, id=121106, CLOSE=3258.14, PER=D, OPEN=3261.52}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1185668508<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(561180737<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@6de5ef99]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121107
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121107, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(561180737<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240216, TICKER=IMOEX, VOL=40015446118, HIGH=3265.83, LOW=3238.83, TIME=0, id=121107, CLOSE=3265.63, PER=D, OPEN=3249.78}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(561180737<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(433313635<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@6eb453]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121108
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121108, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(433313635<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240217, TICKER=IMOEX, VOL=44894740349, HIGH=3275.23, LOW=3236.42, TIME=0, id=121108, CLOSE=3242.48, PER=D, OPEN=3269.84}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(433313635<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(55742740<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@1052c8ee]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121109
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121109, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(55742740<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240220, TICKER=IMOEX, VOL=33376296867, HIGH=3253.02, LOW=3234.1, TIME=0, id=121109, CLOSE=3244.56, PER=D, OPEN=3247.46}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(55742740<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1819789623<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@10e56674]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121110
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121110, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1819789623<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240221, TICKER=IMOEX, VOL=61414679785, HIGH=3237.34, LOW=3206.07, TIME=0, id=121110, CLOSE=3207.49, PER=D, OPEN=3236.85}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1819789623<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(2032381173<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@2387757b]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121111
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121111, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(2032381173<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240222, TICKER=IMOEX, VOL=101720711061, HIGH=3185.8, LOW=3135.8, TIME=0, id=121111, CLOSE=3139.5, PER=D, OPEN=3173.01}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(2032381173<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(916679246<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@6a09c039]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121112
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121112, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(916679246<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240223, TICKER=IMOEX, VOL=64212764912, HIGH=3166.86, LOW=3141.88, TIME=0, id=121112, CLOSE=3142.3, PER=D, OPEN=3152.75}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(916679246<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(532539748<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@117a01f6]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121113
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121113, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(532539748<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240227, TICKER=IMOEX, VOL=66894933204, HIGH=3213.17, LOW=3186.06, TIME=0, id=121113, CLOSE=3213.17, PER=D, OPEN=3186.06}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(532539748<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(169393297<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@1ba692b1]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121114
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121114, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(169393297<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240228, TICKER=IMOEX, VOL=53230509916, HIGH=3224.52, LOW=3203.58, TIME=0, id=121114, CLOSE=3208.99, PER=D, OPEN=3220.26}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(169393297<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1861498524<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@33534b0]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121115
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121115, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1861498524<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240229, TICKER=IMOEX, VOL=59789222900, HIGH=3240.29, LOW=3213.36, TIME=0, id=121115, CLOSE=3227.05, PER=D, OPEN=3215.53}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1861498524<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1857403331<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@6898519c]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121116
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121116, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1857403331<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240301, TICKER=IMOEX, VOL=48704460369, HIGH=3258.14, LOW=3224.09, TIME=0, id=121116, CLOSE=3256.8, PER=D, OPEN=3233.03}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1857403331<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(395799154<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@5afa0ba0]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121117
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121117, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(395799154<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240302, TICKER=IMOEX, VOL=57640939039, HIGH=3269.28, LOW=3249.69, TIME=0, id=121117, CLOSE=3266.66, PER=D, OPEN=3259.0}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(395799154<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1683049363<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@73b4f75b]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121118
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121118, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1683049363<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240305, TICKER=IMOEX, VOL=83355129302, HIGH=3298.63, LOW=3277.85, TIME=0, id=121118, CLOSE=3296.75, PER=D, OPEN=3278.01}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1683049363<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(159363696<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@acdb215]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121119
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121119, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(159363696<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240306, TICKER=IMOEX, VOL=63518536901, HIGH=3312.41, LOW=3283.59, TIME=0, id=121119, CLOSE=3300.89, PER=D, OPEN=3305.79}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(159363696<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(926528860<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@2683a997]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121120
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121120, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(926528860<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240307, TICKER=IMOEX, VOL=47701149735, HIGH=3318.14, LOW=3289.25, TIME=0, id=121120, CLOSE=3310.58, PER=D, OPEN=3298.86}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(926528860<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(547470749<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@4f6398c7]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121121
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121121, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(547470749<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240308, TICKER=IMOEX, VOL=40669277132, HIGH=3317.73, LOW=3303.93, TIME=0, id=121121, CLOSE=3315.68, PER=D, OPEN=3309.31}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(547470749<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1161935797<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@2af7dbfd]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121122
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121122, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1161935797<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240312, TICKER=IMOEX, VOL=61784931694, HIGH=3340.37, LOW=3318.9, TIME=0, id=121122, CLOSE=3320.31, PER=D, OPEN=3329.72}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1161935797<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1039068273<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@413f3d5c]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121123
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121123, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1039068273<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240313, TICKER=IMOEX, VOL=51898354497, HIGH=3335.41, LOW=3304.49, TIME=0, id=121123, CLOSE=3332.6, PER=D, OPEN=3320.18}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1039068273<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(42600194<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@756c21ca]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121124
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121124, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(42600194<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240314, TICKER=IMOEX, VOL=57939921527, HIGH=3343.56, LOW=3317.19, TIME=0, id=121124, CLOSE=3320.68, PER=D, OPEN=3337.56}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(42600194<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(973197420<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@4f9e0d88]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121125
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121125, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(973197420<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240315, TICKER=IMOEX, VOL=66603665951, HIGH=3318.49, LOW=3287.86, TIME=0, id=121125, CLOSE=3297.0, PER=D, OPEN=3314.66}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(973197420<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1396802091<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@af87818]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121126
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121126, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1396802091<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240316, TICKER=IMOEX, VOL=47224152609, HIGH=3313.42, LOW=3292.13, TIME=0, id=121126, CLOSE=3300.07, PER=D, OPEN=3295.15}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1396802091<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1643519844<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@9c1a78c]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121127
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121127, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1643519844<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240319, TICKER=IMOEX, VOL=82200748767, HIGH=3313.05, LOW=3292.0, TIME=0, id=121127, CLOSE=3296.3, PER=D, OPEN=3305.67}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1643519844<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1974850663<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@51d7fd3]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121128
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121128, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1974850663<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240320, TICKER=IMOEX, VOL=121871933638, HIGH=3303.52, LOW=3254.3, TIME=0, id=121128, CLOSE=3264.97, PER=D, OPEN=3293.93}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1974850663<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(109564762<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@7a5ed6cd]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121129
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121129, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(109564762<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240321, TICKER=IMOEX, VOL=130841905581, HIGH=3286.72, LOW=3257.72, TIME=0, id=121129, CLOSE=3267.1, PER=D, OPEN=3268.87}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(109564762<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1758515212<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@2b048c45]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121130
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121130, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1758515212<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240322, TICKER=IMOEX, VOL=104190965377, HIGH=3297.46, LOW=3259.03, TIME=0, id=121130, CLOSE=3286.69, PER=D, OPEN=3286.75}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1758515212<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1114833218<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@f190562]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121131
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121131, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1114833218<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240323, TICKER=IMOEX, VOL=84381073218, HIGH=3299.19, LOW=3260.39, TIME=0, id=121131, CLOSE=3273.49, PER=D, OPEN=3289.28}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1114833218<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(742838028<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@8c65b0c]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121132
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121132, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(742838028<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240326, TICKER=IMOEX, VOL=69191621678, HIGH=3281.63, LOW=3234.95, TIME=0, id=121132, CLOSE=3281.63, PER=D, OPEN=3251.24}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(742838028<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1767648234<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@1c1a1de7]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121133
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121133, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1767648234<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240327, TICKER=IMOEX, VOL=57489111456, HIGH=3291.0, LOW=3275.8, TIME=0, id=121133, CLOSE=3285.54, PER=D, OPEN=3286.2}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1767648234<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(2083135185<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@7a678ded]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121134
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121134, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(2083135185<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240328, TICKER=IMOEX, VOL=49700134113, HIGH=3304.09, LOW=3280.03, TIME=0, id=121134, CLOSE=3304.09, PER=D, OPEN=3291.7}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(2083135185<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(868795078<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@67bfe16a]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121135
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121135, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(868795078<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240329, TICKER=IMOEX, VOL=59261566609, HIGH=3313.59, LOW=3301.52, TIME=0, id=121135, CLOSE=3312.77, PER=D, OPEN=3308.26}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(868795078<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1136825811<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@75d5bf19]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121136
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121136, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1136825811<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240330, TICKER=IMOEX, VOL=56861346349, HIGH=3332.53, LOW=3305.22, TIME=0, id=121136, CLOSE=3332.53, PER=D, OPEN=3313.17}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1136825811<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(2059668143<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@130296ae]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121137
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121137, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(2059668143<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240402, TICKER=IMOEX, VOL=97255272712, HIGH=3367.34, LOW=3343.66, TIME=0, id=121137, CLOSE=3363.29, PER=D, OPEN=3343.66}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(2059668143<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1338745132<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@4978b253]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121138
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121138, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1338745132<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240403, TICKER=IMOEX, VOL=78277082408, HIGH=3375.69, LOW=3357.55, TIME=0, id=121138, CLOSE=3371.29, PER=D, OPEN=3369.32}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1338745132<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1216266777<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@6783c49e]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121139
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121139, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1216266777<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240404, TICKER=IMOEX, VOL=82665801097, HIGH=3397.33, LOW=3376.63, TIME=0, id=121139, CLOSE=3395.59, PER=D, OPEN=3381.95}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1216266777<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(985077030<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@75e3ea27]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121140
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121140, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(985077030<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240405, TICKER=IMOEX, VOL=77882853131, HIGH=3409.62, LOW=3392.06, TIME=0, id=121140, CLOSE=3407.57, PER=D, OPEN=3399.81}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(985077030<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(765761418<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@23bdded5]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121141
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121141, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(765761418<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240406, TICKER=IMOEX, VOL=56706778794, HIGH=3401.16, LOW=3385.42, TIME=0, id=121141, CLOSE=3395.37, PER=D, OPEN=3393.2}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(765761418<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1522295564<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@5f060e47]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121142
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121142, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1522295564<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240409, TICKER=IMOEX, VOL=68993876070, HIGH=3423.35, LOW=3400.82, TIME=0, id=121142, CLOSE=3417.38, PER=D, OPEN=3400.82}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1522295564<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(2028126387<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@4c5e44e2]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121143
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121143, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(2028126387<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240410, TICKER=IMOEX, VOL=79758477615, HIGH=3441.18, LOW=3408.99, TIME=0, id=121143, CLOSE=3414.26, PER=D, OPEN=3423.41}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(2028126387<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(91447853<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@34e73c66]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121144
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121144, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(91447853<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240411, TICKER=IMOEX, VOL=63536294118, HIGH=3440.03, LOW=3405.46, TIME=0, id=121144, CLOSE=3439.11, PER=D, OPEN=3424.75}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(91447853<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(2045815145<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@2591c79d]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121145
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121145, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(2045815145<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240412, TICKER=IMOEX, VOL=50245611381, HIGH=3455.61, LOW=3431.18, TIME=0, id=121145, CLOSE=3439.53, PER=D, OPEN=3442.84}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(2045815145<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(788333693<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@50785387]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121146
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121146, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(788333693<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240413, TICKER=IMOEX, VOL=59024105329, HIGH=3464.0, LOW=3446.79, TIME=0, id=121146, CLOSE=3456.24, PER=D, OPEN=3448.6}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(788333693<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(890521329<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@3b24a4d5]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121147
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121147, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(890521329<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240416, TICKER=IMOEX, VOL=70318353971, HIGH=3476.98, LOW=3454.06, TIME=0, id=121147, CLOSE=3472.19, PER=D, OPEN=3456.38}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(890521329<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(548847469<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@286167df]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121148
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121148, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(548847469<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240417, TICKER=IMOEX, VOL=61477772564, HIGH=3479.04, LOW=3459.45, TIME=0, id=121148, CLOSE=3462.94, PER=D, OPEN=3478.02}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(548847469<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1132281359<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@6e169f3c]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121149
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121149, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1132281359<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240418, TICKER=IMOEX, VOL=58722007610, HIGH=3476.72, LOW=3443.07, TIME=0, id=121149, CLOSE=3454.07, PER=D, OPEN=3469.57}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1132281359<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1944093714<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@2a786ea7]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121150
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121150, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1944093714<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240419, TICKER=IMOEX, VOL=53270817663, HIGH=3457.46, LOW=3436.95, TIME=0, id=121150, CLOSE=3455.82, PER=D, OPEN=3451.37}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1944093714<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(872742510<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@28adfc69]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121151
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121151, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(872742510<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240420, TICKER=IMOEX, VOL=50835243132, HIGH=3475.13, LOW=3451.48, TIME=0, id=121151, CLOSE=3470.88, PER=D, OPEN=3458.86}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(872742510<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(2103359764<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@2fbe2c15]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121152
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121152, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(2103359764<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240423, TICKER=IMOEX, VOL=75712964733, HIGH=3480.21, LOW=3460.58, TIME=0, id=121152, CLOSE=3479.17, PER=D, OPEN=3468.09}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(2103359764<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(187563935<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@6043d0c4]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121153
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121153, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(187563935<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240424, TICKER=IMOEX, VOL=92002065358, HIGH=3487.55, LOW=3436.83, TIME=0, id=121153, CLOSE=3439.42, PER=D, OPEN=3483.26}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(187563935<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1405629176<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@4c4796a7]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121154
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121154, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1405629176<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240425, TICKER=IMOEX, VOL=56511304193, HIGH=3445.67, LOW=3423.17, TIME=0, id=121154, CLOSE=3428.93, PER=D, OPEN=3438.45}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1405629176<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1867753343<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@50850ba5]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121155
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121155, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1867753343<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240426, TICKER=IMOEX, VOL=44536289154, HIGH=3443.74, LOW=3427.02, TIME=0, id=121155, CLOSE=3439.76, PER=D, OPEN=3429.62}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1867753343<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1024771998<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@6ca2fc90]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121156
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121156, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1024771998<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240427, TICKER=IMOEX, VOL=44692478254, HIGH=3459.12, LOW=3438.06, TIME=0, id=121156, CLOSE=3449.77, PER=D, OPEN=3446.39}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1024771998<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1506491996<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@415d0e39]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121157
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121157, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1506491996<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240428, TICKER=IMOEX, VOL=45337967157, HIGH=3467.23, LOW=3453.4, TIME=0, id=121157, CLOSE=3465.85, PER=D, OPEN=3453.63}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1506491996<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(240774942<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@36696af4]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121158
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121158, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(240774942<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240430, TICKER=IMOEX, VOL=29609289552, HIGH=3480.47, LOW=3467.25, TIME=0, id=121158, CLOSE=3478.08, PER=D, OPEN=3468.92}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(240774942<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1309808671<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@9d7de84]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121159
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121159, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1309808671<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240501, TICKER=IMOEX, VOL=22931749241, HIGH=3486.3, LOW=3464.86, TIME=0, id=121159, CLOSE=3469.83, PER=D, OPEN=3481.29}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1309808671<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(462710957<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@46901595]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121160
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121160, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(462710957<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240503, TICKER=IMOEX, VOL=53592209518, HIGH=3477.42, LOW=3439.58, TIME=0, id=121160, CLOSE=3442.83, PER=D, OPEN=3470.87}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(462710957<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1381970446<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@5a1d1295]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121161
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121161, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1381970446<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240504, TICKER=IMOEX, VOL=46971206548, HIGH=3450.43, LOW=3424.63, TIME=0, id=121161, CLOSE=3441.77, PER=D, OPEN=3443.49}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1381970446<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(586721353<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@755781b6]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121162
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121162, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(586721353<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240507, TICKER=IMOEX, VOL=65721435457, HIGH=3444.11, LOW=3418.47, TIME=0, id=121162, CLOSE=3436.05, PER=D, OPEN=3441.7}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(586721353<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(287818297<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@604d475d]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121163
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121163, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(287818297<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240508, TICKER=IMOEX, VOL=61705345533, HIGH=3428.37, LOW=3405.82, TIME=0, id=121163, CLOSE=3427.61, PER=D, OPEN=3405.82}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(287818297<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1788128807<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@10d3ec9b]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121164
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121164, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1788128807<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240509, TICKER=IMOEX, VOL=49680849888, HIGH=3438.75, LOW=3430.1, TIME=0, id=121164, CLOSE=3432.54, PER=D, OPEN=3431.84}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1788128807<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(2079916472<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@a857815]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121165
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121165, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(2079916472<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240511, TICKER=IMOEX, VOL=29542705765, HIGH=3452.33, LOW=3438.5, TIME=0, id=121165, CLOSE=3449.78, PER=D, OPEN=3438.5}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(2079916472<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(88727143<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@452020b4]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121166
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121166, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(88727143<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240514, TICKER=IMOEX, VOL=59594043948, HIGH=3465.62, LOW=3448.5, TIME=0, id=121166, CLOSE=3457.11, PER=D, OPEN=3459.05}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(88727143<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(854228801<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@1bcc8c3f]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121167
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121167, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(854228801<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240515, TICKER=IMOEX, VOL=57973690435, HIGH=3468.28, LOW=3457.31, TIME=0, id=121167, CLOSE=3463.93, PER=D, OPEN=3465.83}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(854228801<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1220952467<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@2b932059]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121168
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121168, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1220952467<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240516, TICKER=IMOEX, VOL=84117798699, HIGH=3476.49, LOW=3462.86, TIME=0, id=121168, CLOSE=3470.72, PER=D, OPEN=3466.35}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1220952467<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(447787282<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@55c10936]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121169
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121169, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(447787282<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240517, TICKER=IMOEX, VOL=60066871717, HIGH=3490.77, LOW=3477.85, TIME=0, id=121169, CLOSE=3486.26, PER=D, OPEN=3480.48}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(447787282<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1212640676<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@460a60da]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121170
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121170, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1212640676<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240518, TICKER=IMOEX, VOL=65045651676, HIGH=3506.91, LOW=3490.17, TIME=0, id=121170, CLOSE=3501.89, PER=D, OPEN=3495.25}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1212640676<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(768137331<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@3f08ad3c]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121171
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121171, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(768137331<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240521, TICKER=IMOEX, VOL=78874066613, HIGH=3521.72, LOW=3468.09, TIME=0, id=121171, CLOSE=3468.09, PER=D, OPEN=3516.4}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(768137331<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1153268540<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@7890ed68]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121172
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121172, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1153268540<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240522, TICKER=IMOEX, VOL=87170304241, HIGH=3460.19, LOW=3409.92, TIME=0, id=121172, CLOSE=3428.38, PER=D, OPEN=3447.25}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1153268540<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1917953721<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@140415fb]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121173
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121173, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1917953721<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240523, TICKER=IMOEX, VOL=52369153553, HIGH=3449.43, LOW=3433.36, TIME=0, id=121173, CLOSE=3444.64, PER=D, OPEN=3433.36}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1917953721<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1659506740<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@560d863e]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121174
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121174, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1659506740<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240524, TICKER=IMOEX, VOL=72701741124, HIGH=3444.79, LOW=3407.41, TIME=0, id=121174, CLOSE=3442.79, PER=D, OPEN=3436.81}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1659506740<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(500160097<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@523d3464]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121175
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121175, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(500160097<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240525, TICKER=IMOEX, VOL=80353186953, HIGH=3442.36, LOW=3377.64, TIME=0, id=121175, CLOSE=3396.5, PER=D, OPEN=3438.65}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(500160097<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(408760880<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@108e3050]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121176
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121176, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(408760880<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240528, TICKER=IMOEX, VOL=102857465743, HIGH=3392.99, LOW=3298.21, TIME=0, id=121176, CLOSE=3299.22, PER=D, OPEN=3384.74}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(408760880<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(173992374<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@3c3eae79]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121177
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121177, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(173992374<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240529, TICKER=IMOEX, VOL=71435532380, HIGH=3347.85, LOW=3277.48, TIME=0, id=121177, CLOSE=3302.91, PER=D, OPEN=3305.11}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(173992374<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1075015554<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@719845]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121178
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121178, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1075015554<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240530, TICKER=IMOEX, VOL=62034452871, HIGH=3323.08, LOW=3284.14, TIME=0, id=121178, CLOSE=3318.03, PER=D, OPEN=3307.76}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1075015554<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(1558267600<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@7715280e]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121179
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121179, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(1558267600<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240531, TICKER=IMOEX, VOL=50826987916, HIGH=3342.59, LOW=3275.54, TIME=0, id=121179, CLOSE=3282.18, PER=D, OPEN=3332.77}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(1558267600<open>)] after transaction
2024-07-22 14:08:52 INFO  ReaderService:35 - Сохранение в БД
2024-07-22 14:08:52 DEBUG JpaTransactionManager:402 - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2024-07-22 14:08:52 DEBUG JpaTransactionManager:411 - Opened new EntityManager [SessionImpl(657998430<open>)] for JPA transaction
2024-07-22 14:08:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-22 14:08:52 DEBUG TransactionImpl:81 - begin
2024-07-22 14:08:52 DEBUG JpaTransactionManager:439 - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@317cb886]
2024-07-22 14:08:52 DEBUG PersistenceUnitUtilImpl:86 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-22 14:08:52 DEBUG SQL:135 - select nextval('global_seq')
2024-07-22 14:08:52 DEBUG SequenceStructure:108 - Sequence value obtained: 121180
2024-07-22 14:08:52 DEBUG AbstractSaveEventListener:160 - Generated identifier: 121180, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2024-07-22 14:08:52 DEBUG JpaTransactionManager:789 - Initiating transaction commit
2024-07-22 14:08:52 DEBUG JpaTransactionManager:556 - Committing JPA transaction on EntityManager [SessionImpl(657998430<open>)]
2024-07-22 14:08:52 DEBUG TransactionImpl:98 - committing
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:136 - Processing flush-time cascades
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:185 - Dirty checking collections
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:110 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-07-22 14:08:52 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-22 14:08:52 DEBUG EntityPrinter:112 - Listing entities:
2024-07-22 14:08:52 DEBUG EntityPrinter:123 - org.dwh.store.EntityExample{DATE=240601, TICKER=IMOEX, VOL=69968909469, HIGH=3270.01, LOW=3211.19, TIME=0, id=121180, CLOSE=3217.19, PER=D, OPEN=3258.52}
2024-07-22 14:08:52 DEBUG SQL:135 - insert into example (close,date,high,low,open,per,ticker,time,vol,id) values (?,?,?,?,?,?,?,?,?,?)
2024-07-22 14:08:52 DEBUG JpaTransactionManager:651 - Closing JPA EntityManager [SessionImpl(657998430<open>)] after transaction
2024-07-22 14:08:52 DEBUG ApplicationAvailabilityBean:77 - Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
2024-07-22 14:08:52 DEBUG Main:16 - Main is a debug message
2024-07-22 14:08:52 INFO  Main:17 - Main is an info message
2024-07-22 14:08:52 WARN  Main:18 - Main is a warn message
2024-07-22 14:08:52 ERROR Main:19 - Main is an error message
2024-07-22 14:09:18 DEBUG HikariPool:414 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-07-22 14:09:18 DEBUG HikariPool:521 - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-07-22 14:09:48 DEBUG HikariPool:414 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-07-22 14:09:48 DEBUG HikariPool:521 - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-07-22 14:10:05 DEBUG ApplicationAvailabilityBean:77 - Application availability state ReadinessState changed from ACCEPTING_TRAFFIC to REFUSING_TRAFFIC
2024-07-22 14:10:05 DEBUG AnnotationConfigServletWebServerApplicationContext:1122 - Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@723ada59, started on Mon Jul 22 14:08:46 YEKT 2024
2024-07-22 14:10:05 DEBUG DefaultLifecycleProcessor:480 - Stopping beans in phase 2147483647
2024-07-22 14:10:05 DEBUG DefaultLifecycleProcessor:352 - Bean 'applicationTaskExecutor' completed its stop procedure
2024-07-22 14:10:05 DEBUG DefaultLifecycleProcessor:480 - Stopping beans in phase 2147482623
2024-07-22 14:10:05 DEBUG DefaultLifecycleProcessor:352 - Bean 'webServerGracefulShutdown' completed its stop procedure
2024-07-22 14:10:05 DEBUG DefaultLifecycleProcessor:480 - Stopping beans in phase 2147481599
2024-07-22 14:10:05 DEBUG DefaultLifecycleProcessor:352 - Bean 'webServerStartStop' completed its stop procedure
2024-07-22 14:10:05 DEBUG DefaultLifecycleProcessor:480 - Stopping beans in phase -2147483647
2024-07-22 14:10:05 DEBUG DefaultLifecycleProcessor:352 - Bean 'springBootLoggingLifecycle' completed its stop procedure
2024-07-22 14:10:05 DEBUG ThreadPoolTaskExecutor:328 - Shutting down ExecutorService 'applicationTaskExecutor'
2024-07-22 14:10:05 INFO  LocalContainerEntityManagerFactoryBean:650 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-22 14:10:05 DEBUG SessionFactoryImpl:907 - HHH000031: Closing
2024-07-22 14:10:05 DEBUG TypeConfiguration$Scope:555 - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@6484d2c2] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@4838d179]
2024-07-22 14:10:05 DEBUG AbstractServiceRegistryImpl:414 - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2024-07-22 14:10:05 DEBUG BootstrapServiceRegistryImpl:298 - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2024-07-22 14:10:05 INFO  HikariDataSource:350 - HikariPool-1 - Shutdown initiated...
2024-07-22 14:10:05 DEBUG HikariPool:414 - HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2024-07-22 14:10:05 DEBUG PoolBase:132 - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@700effc0: (connection evicted)
2024-07-22 14:10:05 DEBUG PoolBase:132 - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@7581722e: (connection evicted)
2024-07-22 14:10:05 DEBUG PoolBase:132 - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@7b4692ee: (connection evicted)
2024-07-22 14:10:05 DEBUG PoolBase:132 - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@7f79195e: (connection evicted)
2024-07-22 14:10:05 DEBUG PoolBase:132 - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@3a7b98d5: (connection evicted)
2024-07-22 14:10:05 DEBUG PoolBase:132 - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@44958db6: (connection evicted)
2024-07-22 14:10:05 DEBUG PoolBase:132 - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@b0ba628: (connection evicted)
2024-07-22 14:10:05 DEBUG PoolBase:132 - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@3c0fedfe: (connection evicted)
2024-07-22 14:10:05 DEBUG PoolBase:132 - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@5a54679a: (connection evicted)
2024-07-22 14:10:05 DEBUG PoolBase:132 - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@32c4b95b: (connection evicted)
2024-07-22 14:10:05 DEBUG HikariPool:414 - HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2024-07-22 14:10:05 INFO  HikariDataSource:352 - HikariPool-1 - Shutdown completed.
